name: Commit checks

on: [push]

jobs:
  playwright:
    name: Playwright test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore packages cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          yarn install --frozen-lockfile --ignore-scripts
          npm rebuild node-sass
          rm .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2

      - name: Install playwright browsers
        run: yarn playwright install --with-deps chromium

      - name: Run end-to-end tests
        run: yarn test:playwright-local:ci
        continue-on-error: false
        env:
          NODE_ENV: development
          REACT_APP_ENDPOINT_URL: ${{ secrets.REACT_APP_ENDPOINT_URL }}
          FORCE_COLOR: 1

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore packages cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          yarn install --frozen-lockfile --ignore-scripts
          npm rebuild node-sass
          rm .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run ESLint
        run: yarn lint
