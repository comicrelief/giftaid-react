/**
 * Abstracts away
 * setup / teardown
 * resource management
 *
 * @class
 */
export declare abstract class Tester<T> {
    references: T[];
    constructor();
    /**
     * Adds a reference to clean up.
     *
     * @param reference
     */
    addReference(reference: T): void;
    /**
     * Removes a reference.
     */
    abstract removeReference(_reference: T): Promise<void>;
    /**
     * Removes all the references.
     */
    clean(): Promise<void>;
    /**
     * Returns the handler for afterEach
     */
    get afterEach(): () => void;
}
//# sourceMappingURL=Tester.d.ts.map