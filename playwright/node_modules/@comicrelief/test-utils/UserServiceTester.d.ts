import { SignupRequestProps, MatchRequestProps, SignupResponse, MatchResponse } from '@comicrelief/data-models/schemas/user-service/models';
import { AxiosInstance, AxiosResponse } from 'axios';
import { Tester } from './Tester';
/**
 * Describes a `serverless-user-service` reference
 */
export interface UserServiceReference {
    type: 'uuid' | 'identity' | 'identity_hash';
    value: string;
}
export declare const UserServiceEndpoints: {
    readonly MATCH: "/match";
    readonly SIGNUP: "/signup";
};
/**
 * Retrieves and manages
 * entities on `serverless-user-service`
 */
export declare class UserServiceTester extends Tester<UserServiceReference> {
    apiKey: string;
    apiUrl: string;
    defaults: {
        retries: number;
        sleep: number;
    };
    /**
     * Constructs an User Service Tester instance.
     *
     * If `apiKey` or `apiUrl` are falsy
     * tries to retrieve them from the environment.
     *
     * Retries defaults are designed to
     * retry the functions for 60 seconds.
     *
     * @param apiKey - defaults to `process.env.TESTS_USER_SERVICE_URL || process.env.USER_SERVICE_URL`
     * @param apiUrl - defaults to `process.env.TESTS_USER_SERVICE_API_KEY || process.env.USER_SERVICE_API_KEY`
     * @param defaultRetries - defaults to 60
     * @param defaultSleep - defaults to 1000 (1 minute)
     */
    constructor(apiKey?: string, apiUrl?: string, defaultRetries?: number, defaultSleep?: number);
    /**
     * Returns a pre-configured
     * axios instance.
     *
     * NB: This just makes tests easier
     */
    getClient(): AxiosInstance;
    /**
     * Queries UserServiceEndpoints.SIGNUP
     *
     * @param data
     */
    signup(data: SignupRequestProps): Promise<AxiosResponse<SignupResponse>>;
    /**
     * Queries UserServiceEndpoints.MATCH
     *
     * @param data
     * @param retries
     * @param sleep
     */
    match(data: MatchRequestProps, retries?: number, sleep?: number): Promise<AxiosResponse<MatchResponse>>;
    /**
     * @inheritdoc
     */
    removeReference(_reference: UserServiceReference): Promise<void>;
}
//# sourceMappingURL=UserServiceTester.d.ts.map