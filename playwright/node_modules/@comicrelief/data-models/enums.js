"use strict";
/*
A place for enums that may be used across models and aren't owned by any
 particular model.
*/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TShirtSize = exports.OrganisationIdTypes = exports.FundraisingSegments = exports.FundraisingSegmentsPublic = exports.FundraisingSegmentsSchool = exports.FundraisingSegmentsWork = exports.Campaigns = exports.FundraisingActivities = exports.FundraisingTools = exports.Sources = exports.FundraisingGroups = void 0;
/**
 * These are the groups used for the segmentation of fundraisers.
 */
var FundraisingGroups;
(function (FundraisingGroups) {
    FundraisingGroups["SCHOOL"] = "school";
    FundraisingGroups["WORK"] = "work";
    FundraisingGroups["PUBLIC"] = "public";
    // todo: support corporate partners
    // CORPORATE_PARTNER = 'corporate_partner',
})(FundraisingGroups = exports.FundraisingGroups || (exports.FundraisingGroups = {}));
/**
 * Values for source/transSource properties, which are used to indicate the
 *  source of a record (e.g. which service / product / platform it came from)
 */
var Sources;
(function (Sources) {
    Sources["FUNDRAISER_SIGNUP"] = "fundraiser_signup";
    Sources["CR_SITE"] = "CRSite";
    Sources["SR_SITE"] = "SRSite";
    Sources["PSL_PAYIN"] = "psl_payin";
    // todo: add other permitted options for source/transSource columns.
})(Sources = exports.Sources || (exports.Sources = {}));
/**
 * These are the different services or 'tools' that are offered to fundraisers
 *  during the fundraiser signup journey.
 */
var FundraisingTools;
(function (FundraisingTools) {
    /**
     * If they select this, we will attempt to generate a JustGiving page for
     *  them.
     */
    FundraisingTools["JUSTGIVING_PAGE"] = "justgiving_page_setup";
    /**
     * If this is chosen, we will send them them a physical fundraising pack.
     */
    FundraisingTools["FUNDRAISING_PACK"] = "fundraising_pack";
    /**
     * We will email a digital fundraising pack (or a link to one)
     */
    FundraisingTools["DIGITAL_PACK"] = "digital_pack";
    /**
     * We will email a link to other downloadable resources.
     */
    FundraisingTools["DOWNLOADABLE_TOOLS"] = "downloadable_tools";
})(FundraisingTools = exports.FundraisingTools || (exports.FundraisingTools = {}));
/**
 * The different types of fundraising that fundraisers might undertake.
 */
var FundraisingActivities;
(function (FundraisingActivities) {
    // RND
    FundraisingActivities["FANCY_DRESS"] = "fancy_dress";
    FundraisingActivities["BAKING"] = "baking";
    FundraisingActivities["SPONSORED_CHALLENGE"] = "sponsored_challenge";
    FundraisingActivities["QUIZ_OR_GAMES"] = "quiz_or_games";
    FundraisingActivities["TALENT_SHOW"] = "talent_show";
    FundraisingActivities["SPORT_ACTIVITY"] = "sport_activity";
    // SRCW
    FundraisingActivities["RUN"] = "run";
    FundraisingActivities["WALK"] = "walk";
    FundraisingActivities["CYCLE"] = "cycle";
    FundraisingActivities["SWIM"] = "swim";
    FundraisingActivities["A_COMBINATION"] = "a_combination";
    // common
    FundraisingActivities["SOMETHING_ELSE"] = "something_else";
    FundraisingActivities["NOT_SURE_YET"] = "not_sure_yet";
})(FundraisingActivities = exports.FundraisingActivities || (exports.FundraisingActivities = {}));
/**
 * Campaigns
 */
var Campaigns;
(function (Campaigns) {
    /** Comic Relief year-round activity */
    Campaigns["CR"] = "CR";
    /** Red Nose Day 2017 */
    Campaigns["RND17"] = "RND17";
    /** Sport Relief 2018 */
    Campaigns["SR18"] = "SR18";
    /** Red Nose Day 2019 */
    Campaigns["RND19"] = "RND19";
    /** Sport Relief 2020 */
    Campaigns["SR20"] = "SR20";
    /** Big Night In "COVID Relief" (note that this happened after SR20) */
    Campaigns["CV19"] = "CV19";
    /** Red Nose Day 2021 */
    Campaigns["RND21"] = "RND21";
    /** Red Nose Day 2022 */
    Campaigns["RND22"] = "RND22";
    /** Sport Relief Commonwealth Games 2022 */
    Campaigns["SRCW22"] = "SRCW22";
    /** Red Nose Day 2023 */
    Campaigns["RND23"] = "RND23";
    /** Winter Campaign 2022 */
    Campaigns["YRW"] = "YRW";
})(Campaigns = exports.Campaigns || (exports.Campaigns = {}));
var FundraisingSegmentsWork;
(function (FundraisingSegmentsWork) {
    FundraisingSegmentsWork["WORK"] = "work";
})(FundraisingSegmentsWork = exports.FundraisingSegmentsWork || (exports.FundraisingSegmentsWork = {}));
var FundraisingSegmentsSchool;
(function (FundraisingSegmentsSchool) {
    FundraisingSegmentsSchool["NURSERY"] = "nursery";
    FundraisingSegmentsSchool["PRIMARY"] = "primary_school";
    FundraisingSegmentsSchool["SECONDARY"] = "secondary_school";
    FundraisingSegmentsSchool["SIXTH_FORM_COLLEGE"] = "sixth_form_college";
    FundraisingSegmentsSchool["YOUTH_GROUP"] = "youth_group";
    FundraisingSegmentsSchool["OTHER"] = "school_other";
    // generic option if no specific value known.
    FundraisingSegmentsSchool["SCHOOL"] = "school";
})(FundraisingSegmentsSchool = exports.FundraisingSegmentsSchool || (exports.FundraisingSegmentsSchool = {}));
var FundraisingSegmentsPublic;
(function (FundraisingSegmentsPublic) {
    FundraisingSegmentsPublic["INDIVIDUAL"] = "individual";
    FundraisingSegmentsPublic["SPORTS_CLUB"] = "sports_club";
    FundraisingSegmentsPublic["RELIGIOUS_GROUP"] = "religious_group";
    FundraisingSegmentsPublic["COMMUNITY_GROUP"] = "community_group";
    FundraisingSegmentsPublic["UNIVERSITY"] = "university";
    FundraisingSegmentsPublic["FRIENDS_OR_FAMILY"] = "friends_or_family";
    // generic option if no specific value known.
    FundraisingSegmentsPublic["PUBLIC"] = "public";
})(FundraisingSegmentsPublic = exports.FundraisingSegmentsPublic || (exports.FundraisingSegmentsPublic = {}));
exports.FundraisingSegments = __assign(__assign(__assign({}, FundraisingSegmentsWork), FundraisingSegmentsSchool), FundraisingSegmentsPublic);
var OrganisationIdTypes;
(function (OrganisationIdTypes) {
    OrganisationIdTypes["EDCO"] = "edco";
})(OrganisationIdTypes = exports.OrganisationIdTypes || (exports.OrganisationIdTypes = {}));
var TShirtSize;
(function (TShirtSize) {
    TShirtSize["NONE"] = "none";
    TShirtSize["EXTRA_SMALL"] = "XS";
    TShirtSize["SMALL"] = "S";
    TShirtSize["MEDIUM"] = "M";
    TShirtSize["LARGE"] = "L";
    TShirtSize["EXTRA_LARGE"] = "XL";
})(TShirtSize = exports.TShirtSize || (exports.TShirtSize = {}));
//# sourceMappingURL=enums.js.map