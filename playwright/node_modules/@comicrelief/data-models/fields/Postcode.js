"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Postcode = void 0;
var postcode_1 = require("postcode");
var StrictString_1 = require("./StrictString");
// Basically postcode.isValid, except returns false rather than throwing
//  an error in some cases (e.g. if you pass in null)
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var isPostcode = function (val) { return typeof val === 'string' && postcode_1.isValid(val); };
/**
 * Schema for validating - & normalising - full UK postcodes.
 */
exports.Postcode = StrictString_1.StrictString.trim()
    .test('validate-postcode', 
// eslint-disable-next-line no-template-curly-in-string
'${path} is not a valid postcode: \'${value}\'', 
// skips postcode validation if value is falsey, leaving it
//  to other validators in the chain e.g. required()
function (v) { return !v || isPostcode(v); })
    .transform(function (currentValue) { return (isPostcode(currentValue) ? postcode_1.toNormalised(currentValue) : currentValue); });
//# sourceMappingURL=Postcode.js.map