import { SQSTicketsEndOfBatchPayloadProps } from '../../models/sqs/SQSTicketsEndOfBatchPayload';
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOAD_VALID_VALUES: Required<SQSTicketsEndOfBatchPayloadProps>;
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOAD_INVALID_VALUES: {
    event: string;
    count: number;
};
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOAD_VALUES: {
    valid: Required<SQSTicketsEndOfBatchPayloadProps>;
    invalid: {
        event: string;
        count: number;
    };
};
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOADS_VALID: {
    DEFAULT: Required<SQSTicketsEndOfBatchPayloadProps>;
};
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOADS_INVALID: {
    DEFAULT: {
        event: string;
        count: number;
    };
    INVALID_EVENT: Required<SQSTicketsEndOfBatchPayloadProps> & {
        event: string;
    };
    INVALID_COUNT: Required<SQSTicketsEndOfBatchPayloadProps> & {
        count: number;
    };
    MISSING_EVENT: Omit<Required<SQSTicketsEndOfBatchPayloadProps>, "event">;
    MISSING_COUNT: Omit<Required<SQSTicketsEndOfBatchPayloadProps>, "count">;
};
export declare const SQS_TICKETS_ENDOFBATCH_PAYLOADS: {
    valid: {
        DEFAULT: Required<SQSTicketsEndOfBatchPayloadProps>;
    };
    invalid: {
        DEFAULT: {
            event: string;
            count: number;
        };
        INVALID_EVENT: Required<SQSTicketsEndOfBatchPayloadProps> & {
            event: string;
        };
        INVALID_COUNT: Required<SQSTicketsEndOfBatchPayloadProps> & {
            count: number;
        };
        MISSING_EVENT: Omit<Required<SQSTicketsEndOfBatchPayloadProps>, "event">;
        MISSING_COUNT: Omit<Required<SQSTicketsEndOfBatchPayloadProps>, "count">;
    };
};
/**
 * Generates a random SQSTicketsEndOfBatchPayloadProps
 *
 * @param overrides
 */
export declare const createSQSTicketsEndOfBatchPayload: (overrides?: Partial<SQSTicketsEndOfBatchPayloadProps>) => Required<SQSTicketsEndOfBatchPayloadProps>;
//# sourceMappingURL=SQSTicketsEndOfBatchPayload.mock.d.ts.map