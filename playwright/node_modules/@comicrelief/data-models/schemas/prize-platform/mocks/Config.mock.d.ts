import { ConfigProps, ConfigStates } from '../models/Config';
export declare const CONFIG_VALUES_VALID: Required<ConfigProps>;
export declare const CONFIG_VALUES_INVALID: {
    state: string;
};
export declare const CONFIG_VALUES: {
    valid: Required<ConfigProps>;
    invalid: {
        state: string;
    };
};
export declare const CONFIGS_VALID: {
    DEFAULT: Required<ConfigProps>;
    OK: Required<ConfigProps> & {
        state: ConfigStates;
    };
    TEMPORARILY_PAUSED: Required<ConfigProps> & {
        state: ConfigStates;
    };
    INDEFINITELY_PAUSED: Required<ConfigProps> & {
        state: ConfigStates;
    };
};
export declare const CONFIGS_INVALID: {
    DEFAULT: {
        state: string;
    };
    INVALID_STATE: Required<ConfigProps> & {
        state: string;
    };
    MISSING_STATE: Omit<Required<ConfigProps>, "state">;
};
export declare const CONFIGS: {
    invalid: {
        DEFAULT: {
            state: string;
        };
        INVALID_STATE: Required<ConfigProps> & {
            state: string;
        };
        MISSING_STATE: Omit<Required<ConfigProps>, "state">;
    };
    valid: {
        DEFAULT: Required<ConfigProps>;
        OK: Required<ConfigProps> & {
            state: ConfigStates;
        };
        TEMPORARILY_PAUSED: Required<ConfigProps> & {
            state: ConfigStates;
        };
        INDEFINITELY_PAUSED: Required<ConfigProps> & {
            state: ConfigStates;
        };
    };
};
/**
 * Generates a random config
 *
 * @param overrides
 */
export declare const createConfig: (overrides?: Partial<ConfigProps>) => Required<ConfigProps>;
//# sourceMappingURL=Config.mock.d.ts.map