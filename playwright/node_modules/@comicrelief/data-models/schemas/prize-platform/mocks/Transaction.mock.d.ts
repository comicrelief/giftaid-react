import { NumericBool } from '../../../validation';
import { TransactionProps } from '../models/Transaction';
export declare const TRANSACTION_VALUES_VALID: Required<TransactionProps>;
export declare const TRANSACTION_VALUES_INVALID: {
    uuid: string;
    order_reference: string;
    prize_id: null;
    postal: number;
    postal_id: number;
    identity_hash: null;
    firstname: null;
    lastname: null;
    email: string;
    mobile: string;
    timestamp: string;
};
export declare const TRANSACTION_VALUES: {
    valid: Required<TransactionProps>;
    invalid: {
        uuid: string;
        order_reference: string;
        prize_id: null;
        postal: number;
        postal_id: number;
        identity_hash: null;
        firstname: null;
        lastname: null;
        email: string;
        mobile: string;
        timestamp: string;
    };
};
export declare const VALID_TRANSACTIONS: {
    DEFAULT: Required<TransactionProps>;
    POSTAL: Required<TransactionProps> & {
        postal: NumericBool;
        postal_id: string;
    };
    MISSING_POSTAL: Omit<Required<TransactionProps>, "postal">;
    MISSING_POSTAL_ID: Omit<Required<TransactionProps>, "postal_id">;
    MISSING_ORDER_REFERENCE: Omit<Required<TransactionProps>, "order_reference">;
    MISSING_EMAIL: Omit<Required<TransactionProps>, "email">;
    MISSING_MOBILE: Omit<Required<TransactionProps>, "mobile">;
    MISSING_TIMESTAMP: Omit<Required<TransactionProps>, "timestamp">;
    EMPTY_EMAIL: Required<TransactionProps> & {
        email: string;
    };
    EMPTY_MOBILE: Required<TransactionProps> & {
        mobile: string;
    };
};
export declare const INVALID_TRANSACTIONS: {
    INVALID_UUID: Required<TransactionProps> & {
        uuid: string;
    };
    INVALID_ORDER_REFERENCE: Required<TransactionProps> & {
        order_reference: string;
    };
    INVALID_PRIZE_ID: never;
    INVALID_IDENTITY_HASH: never;
    INVALID_FIRSTNAME: never;
    INVALID_LASTNAME: never;
    INVALID_EMAIL: Required<TransactionProps> & {
        email: string;
    };
    INVALID_MOBILE: Required<TransactionProps> & {
        mobile: string;
    };
    INVALID_POSTAL: Required<TransactionProps> & {
        postal: number;
    };
    MISSING_UUID: Omit<Required<TransactionProps>, "uuid">;
    MISSING_PRIZE_ID: Omit<Required<TransactionProps>, "prize_id">;
    MISSING_IDENTITY_HASH: Omit<Required<TransactionProps>, "identity_hash">;
    MISSING_FIRSTNAME: Omit<Required<TransactionProps>, "firstname">;
    MISSING_LASTNAME: Omit<Required<TransactionProps>, "lastname">;
    MISSING_EMAIL_AND_MOBILE: Omit<Required<TransactionProps>, "email" | "mobile">;
    EMPTY_EMAIL_AND_MOBILE: Required<TransactionProps> & {
        email: string;
        mobile: string;
    };
};
export declare const TRANSACTIONS: {
    invalid: {
        INVALID_UUID: Required<TransactionProps> & {
            uuid: string;
        };
        INVALID_ORDER_REFERENCE: Required<TransactionProps> & {
            order_reference: string;
        };
        INVALID_PRIZE_ID: never;
        INVALID_IDENTITY_HASH: never;
        INVALID_FIRSTNAME: never;
        INVALID_LASTNAME: never;
        INVALID_EMAIL: Required<TransactionProps> & {
            email: string;
        };
        INVALID_MOBILE: Required<TransactionProps> & {
            mobile: string;
        };
        INVALID_POSTAL: Required<TransactionProps> & {
            postal: number;
        };
        MISSING_UUID: Omit<Required<TransactionProps>, "uuid">;
        MISSING_PRIZE_ID: Omit<Required<TransactionProps>, "prize_id">;
        MISSING_IDENTITY_HASH: Omit<Required<TransactionProps>, "identity_hash">;
        MISSING_FIRSTNAME: Omit<Required<TransactionProps>, "firstname">;
        MISSING_LASTNAME: Omit<Required<TransactionProps>, "lastname">;
        MISSING_EMAIL_AND_MOBILE: Omit<Required<TransactionProps>, "email" | "mobile">;
        EMPTY_EMAIL_AND_MOBILE: Required<TransactionProps> & {
            email: string;
            mobile: string;
        };
    };
    valid: {
        DEFAULT: Required<TransactionProps>;
        POSTAL: Required<TransactionProps> & {
            postal: NumericBool;
            postal_id: string;
        };
        MISSING_POSTAL: Omit<Required<TransactionProps>, "postal">;
        MISSING_POSTAL_ID: Omit<Required<TransactionProps>, "postal_id">;
        MISSING_ORDER_REFERENCE: Omit<Required<TransactionProps>, "order_reference">;
        MISSING_EMAIL: Omit<Required<TransactionProps>, "email">;
        MISSING_MOBILE: Omit<Required<TransactionProps>, "mobile">;
        MISSING_TIMESTAMP: Omit<Required<TransactionProps>, "timestamp">;
        EMPTY_EMAIL: Required<TransactionProps> & {
            email: string;
        };
        EMPTY_MOBILE: Required<TransactionProps> & {
            mobile: string;
        };
    };
};
/**
 * Generates a random transaction
 *
 * @param overrides
 */
export declare const transactionGenerator: (overrides?: Partial<TransactionProps>) => Required<TransactionProps>;
//# sourceMappingURL=Transaction.mock.d.ts.map