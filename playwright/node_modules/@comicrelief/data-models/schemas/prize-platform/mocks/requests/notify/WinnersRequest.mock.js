"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.winnersRequestGenerator = exports.WINNERS_REQUESTS = exports.WINNERS_REQUESTS_INVALID = exports.WINNERS_REQUESTS_VALID = exports.WINNERS_REQUEST_VALUES = exports.WINNERS_REQUEST_INVALID_VALUES = exports.WINNERS_REQUEST_VALID_VALUES = void 0;
var utils_1 = require("../../../../../utils");
var Transaction_mock_1 = require("../../Transaction.mock");
exports.WINNERS_REQUEST_VALID_VALUES = {
    prize_id: Transaction_mock_1.TRANSACTION_VALUES.valid.prize_id,
};
exports.WINNERS_REQUEST_INVALID_VALUES = {
    prize_id: Transaction_mock_1.TRANSACTION_VALUES.invalid.prize_id,
};
exports.WINNERS_REQUEST_VALUES = {
    valid: exports.WINNERS_REQUEST_VALID_VALUES,
    invalid: exports.WINNERS_REQUEST_INVALID_VALUES,
};
exports.WINNERS_REQUESTS_VALID = {
    DEFAULT: exports.WINNERS_REQUEST_VALUES.valid,
};
exports.WINNERS_REQUESTS_INVALID = {
    DEFAULT: exports.WINNERS_REQUEST_VALUES.invalid,
    INVALID_PRIZE_ID: utils_1.override(exports.WINNERS_REQUEST_VALUES.valid, { prize_id: exports.WINNERS_REQUEST_VALUES.invalid.prize_id }),
    MISSING_PRIZE_ID: utils_1.omit(exports.WINNERS_REQUEST_VALUES.valid, ['prize_id']),
};
exports.WINNERS_REQUESTS = {
    valid: exports.WINNERS_REQUESTS_VALID,
    invalid: exports.WINNERS_REQUESTS_INVALID,
};
/**
 * Generates a random WinnersRequest
 *
 * @param overrides
 */
var winnersRequestGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ prize_id: utils_1.getString(10) }, overrides));
};
exports.winnersRequestGenerator = winnersRequestGenerator;
//# sourceMappingURL=WinnersRequest.mock.js.map