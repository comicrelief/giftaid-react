import * as yup from 'yup';
import { NumericBool } from '../../../validation';
import type { PrizeCategoryProps } from './PrizeCategory';
/**
 * Represents no tickets limit
 * for a prize. This is the default
 * for validation and on Contentful
 */
export declare const NO_TICKETS_LIMIT = -1;
/**
 * Describes a bundle option
 */
export interface PrizeBundleOptionProps {
    tickets: number;
    price: number;
}
/**
 * Props required to generate
 * a Prize model.
 */
export interface PrizeProps {
    /** Contentful ID */
    id: string;
    /** Title of the prize. Name comes from Contentful */
    title: string;
    /** Associated Category Contentful ID */
    category_id: string;
    /** URL subpath of the prize. Name comes from Contentful */
    path: string;
    /** Full URL of the prize */
    url?: string;
    /** Prize start date */
    start_date: string;
    /** Prize end date */
    end_date: string;
    /** Bundles for this prize. Name comes from Contentful */
    bundles: PrizeBundleOptionProps[];
    /** Total maximum participants. Name comes from Contentful */
    limit: number;
    /** Total winners to be picked. Name comes from Contentful */
    winners: number;
    /** Whether /tickets/pick should be triggered */
    triggered_tickets_pick?: NumericBool;
    /** Whether /tickets/pick has been completed */
    completed_tickets_pick?: NumericBool;
}
/**
 * Prize Bundle validation field
 */
export declare const PrizeBundleOption: yup.ObjectSchema<PrizeBundleOptionProps | undefined>;
/**
 * Prize model.
 */
export declare const Prize: import("../../../validation").Model<PrizeProps>;
/** Expected base URL for prize pages */
export declare const PRIZE_BASE_URL = "https://www.comicrelief.com/prizes";
/**
 * Returns the frontend page URL
 * for the given categoryName and prizePath
 *
 * @param categoryName
 * @param prizePath
 * @param baseUrl
 */
export declare const generatePrizeURL: (categoryName: string, prizePath: string, baseUrl?: string) => string;
/**
 * Returns the frontend page URL
 * for the given prize category and prize
 *
 * @param category
 * @param prize
 * @param baseUrl
 */
export declare const generatePrizeURLFromModels: (category: PrizeCategoryProps, prize: PrizeProps, baseUrl?: string) => string;
/**
 * Validates that the given amount
 * of tickets is defined in the prize bundles
 * and returns the associated price.
 *
 * Throws a validation error otherwise.
 *
 * @param prize
 * @param amount
 */
export declare const getTicketsPrice: (prize: Required<PrizeProps>, amount: number) => number;
//# sourceMappingURL=Prize.d.ts.map