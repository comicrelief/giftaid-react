"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSupporterInfo = exports.SUPPORTER_INFOS = exports.SUPPORTER_INFOS_INVALID = exports.SUPPORTER_INFOS_VALID = exports.SUPPORTER_INFO_VALUES = exports.SUPPORTER_INFO_INVALID_VALUES = exports.SUPPORTER_INFO_VALID_VALUES = exports.MOBILES = exports.INVALID_MOBILES = exports.TRANSFORMABLE_MOBILES = exports.VALID_MOBILES = exports.EMAILS = exports.VALID_EMAIL = exports.INVALID_EMAIL = exports.ADDRESSES = exports.INVALID_ADDRESS = exports.VALID_ADDRESS = void 0;
var utils_1 = require("../../../utils");
exports.VALID_ADDRESS = {
    address1: '89',
    postcode: 'SE17TP',
    town: 'London',
    country: 'UK',
};
exports.INVALID_ADDRESS = {
    address1: null,
    postcode: null,
    town: null,
    country: null,
};
exports.ADDRESSES = {
    valid: exports.VALID_ADDRESS,
    invalid: exports.INVALID_ADDRESS,
};
exports.INVALID_EMAIL = 'abc';
exports.VALID_EMAIL = 'user-service@email.sandbox.comicrelief.com';
exports.EMAILS = {
    valid: exports.VALID_EMAIL,
    invalid: exports.INVALID_EMAIL,
};
exports.VALID_MOBILES = {
    DEFAULT: '+447000000000',
    INTERNATIONAL_UK: '+447111111111',
};
exports.TRANSFORMABLE_MOBILES = {
    UK: '07000000000',
    UK_WITH_SPACES: '07000 000 000',
    UK_WITH_HYPHENS: '0700-000-000',
    INTERNATIONAL_UK_WITH_PARENTHESIS: '(+44) 700 000 000',
    INTERNATIONAL_UK_WITH_PARENTHESIS_AND_ZEROES: '(0044) 700 000 000',
    INTERNATIONAL_UK_WITH_ZEROES: '0044 7000 000 000',
};
exports.INVALID_MOBILES = {
    DEFAULT: 'abc',
    WITH_SIGNS: '%07000000000',
    WITH_SQUARE_PARENTHESIS: '[+44]7000000000',
};
exports.MOBILES = {
    valid: __assign(__assign({}, exports.VALID_MOBILES), exports.TRANSFORMABLE_MOBILES),
    invalid: __assign({}, exports.INVALID_MOBILES),
};
exports.SUPPORTER_INFO_VALID_VALUES = __assign({ firstName: 'Dante', lastName: 'Alighieri', email: exports.EMAILS.valid, mobile: exports.MOBILES.valid.DEFAULT }, exports.ADDRESSES.valid);
exports.SUPPORTER_INFO_INVALID_VALUES = __assign({ firstName: null, lastName: null, email: exports.EMAILS.invalid, mobile: exports.MOBILES.invalid.DEFAULT }, exports.ADDRESSES.invalid);
exports.SUPPORTER_INFO_VALUES = {
    valid: exports.SUPPORTER_INFO_VALID_VALUES,
    invalid: exports.SUPPORTER_INFO_INVALID_VALUES,
};
exports.SUPPORTER_INFOS_VALID = {
    DEFAULT: exports.SUPPORTER_INFO_VALUES.valid,
    UK_MOBILE: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { mobile: exports.MOBILES.valid.UK }),
    UPPERCASED_EMAIL: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { email: 'UPPERCASE.EMAIL@EMAIL.SLS.COMICRELIEF.COM' }),
};
exports.SUPPORTER_INFOS_INVALID = {
    DEFAULT: exports.SUPPORTER_INFO_VALUES.invalid,
    INVALID_EMAIL: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { email: exports.SUPPORTER_INFO_VALUES.invalid.email }),
    INVALID_MOBILE: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { mobile: exports.SUPPORTER_INFO_VALUES.invalid.mobile }),
    INVALID_FIRST_NAME: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { firstName: exports.SUPPORTER_INFO_VALUES.invalid.firstName }),
    INVALID_LAST_NAME: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { lastName: exports.SUPPORTER_INFO_VALUES.invalid.lastName }),
    INVALID_ADDRESS1: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { address1: exports.SUPPORTER_INFO_VALUES.invalid.address1 }),
    INVALID_POSTCODE: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { postcode: exports.SUPPORTER_INFO_VALUES.invalid.postcode }),
    INVALID_TOWN: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { town: exports.SUPPORTER_INFO_VALUES.invalid.town }),
    INVALID_COUNTRY: utils_1.override(exports.SUPPORTER_INFO_VALUES.valid, { country: exports.SUPPORTER_INFO_VALUES.invalid.country }),
    MISSING_FIRST_NAME: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['firstName']),
    MISSING_LAST_NAME: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['lastName']),
    MISSING_EMAIL: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['email']),
    MISSING_MOBILE: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['mobile']),
    MISSING_ADDRESS1: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['address1']),
    MISSING_POSTCODE: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['postcode']),
    MISSING_TOWN: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['town']),
    MISSING_COUNTRY: utils_1.omit(exports.SUPPORTER_INFO_VALUES.valid, ['country']),
};
exports.SUPPORTER_INFOS = {
    valid: exports.SUPPORTER_INFOS_VALID,
    invalid: exports.SUPPORTER_INFOS_INVALID,
};
/**
 * Generates a random SupporterInfo
 *
 * @param overrides
 */
var createSupporterInfo = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ firstName: utils_1.getString(10), lastName: utils_1.getString(10), email: utils_1.getEmail(), mobile: utils_1.getMobile(), address1: utils_1.getString(), postcode: utils_1.getString(), town: utils_1.getString(), country: utils_1.getString() }, overrides));
};
exports.createSupporterInfo = createSupporterInfo;
//# sourceMappingURL=SupporterInfo.mock.js.map