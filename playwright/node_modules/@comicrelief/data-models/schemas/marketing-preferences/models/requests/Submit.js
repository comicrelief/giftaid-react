"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubmitRequest = void 0;
var yup = __importStar(require("yup"));
var enums_1 = require("../../../../enums");
var Postcode_1 = require("../../../../fields/Postcode");
var StrictString_1 = require("../../../../fields/StrictString");
var validation_1 = require("../../../../validation");
var permission_1 = require("../permission");
/**
 * Transforms an empty string into `null`.
 *
 * This is used for the optional address fields.
 *
 * @param value
 */
var emptyToNull = function (value) { return (value === '' ? null : value); };
/**
 * Model for a marketing preferences submission request.
 *
 * As part of its validation rules, this model requires:
 *
 * - `email` to be present if `permissionEmail` is non-null
 * - `phone` to be present if `permissionPhone` is non-null
 * - `mobile` to be present if `permissionSMS` is non-null
 * - `address1` and `postcode` to be present if `permissionPost` is non-null
 *
 * Contact details may be non-null even if no preferences are specifed.
 *
 * User-entered values (name and contact details) are trimmed so that filling a
 * required field with whitespace does not allow it to pass validation.
 */
exports.SubmitRequest = validation_1.defineModel(validation_1.Namespaces.MARKETING_PREFERENCES, 'SubmitRequest', function () { return yup.object({
    firstname: validation_1.FirstName.required().trim(),
    lastname: validation_1.LastName.required().trim(),
    mobile: validation_1.Mobile.nullable().default(null).defined().transform(emptyToNull),
    phone: StrictString_1.TrimmedStrictString.nullable().default(null).defined().transform(emptyToNull),
    email: validation_1.Email.trim().nullable().default(null).defined().transform(emptyToNull),
    address1: validation_1.AddressLine.nullable().default(null).defined().transform(emptyToNull),
    address2: StrictString_1.TrimmedStrictString.nullable().default(null).defined().transform(emptyToNull),
    address3: StrictString_1.TrimmedStrictString.nullable().default(null).defined().transform(emptyToNull),
    town: StrictString_1.TrimmedStrictString.nullable().default(null).defined().transform(emptyToNull),
    postcode: Postcode_1.Postcode.nullable().default(null).defined().transform(emptyToNull),
    country: StrictString_1.TrimmedStrictString.nullable().default(null).defined().transform(emptyToNull),
    campaign: yup.string().uppercase().oneOf(Object.values(enums_1.Campaigns)).required(),
    transSource: StrictString_1.StrictString.required(),
    transSourceUrl: yup.string().url().required(),
    transType: yup.string().required().test('transType-prefs', "${path} must be 'prefs'", function (value) { return !value || value === 'prefs'; }),
    permissionEmail: permission_1.MarketingPermissionSchema.default(null).defined(),
    permissionPhone: permission_1.MarketingPermissionSchema.default(null).defined(),
    permissionPost: permission_1.MarketingPermissionSchema.default(null).defined(),
    permissionSMS: permission_1.MarketingPermissionSchema.default(null).defined(),
    transactionId: yup.string().uuid().nullable().defined().default(null),
}).test('require-at-least-one-permission', '${path} must provide at least one non-null permission', function (value) { return !value
    || !( // all null
    value.permissionEmail === null
        && value.permissionSMS === null
        && value.permissionPhone === null
        && value.permissionPost === null); }).test('require-email-if-permissionEmail-is-non-null', '${path} must provide `email` if `permissionEmail` is non-null', function (value) { return !value
    || !!value.email
    || value.permissionEmail === null; }).test('require-mobile-if-permissionSMS-is-non-null', '${path} must provide `mobile` if `permissionSMS` is non-null', function (value) { return !value
    || !!value.mobile
    || value.permissionSMS === null; }).test('require-phone-if-permissionPhone-is-non-null', '${path} must provide `mobilie` if `permissionPhone` is non-null', function (value) { return !value
    || !!value.phone
    || value.permissionPhone === null; }).test('require-address-if-permissionPost-is-non-null', '${path} must provide address if `permissionPost` is non-null', function (value) { return !value
    || !!(value.address1 && value.town && value.postcode && value.country)
    || value.permissionPost === null; }); });
//# sourceMappingURL=Submit.js.map