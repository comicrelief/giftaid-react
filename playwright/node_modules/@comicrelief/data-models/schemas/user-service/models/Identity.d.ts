import * as yup from 'yup';
/**
 * Either 'email' or 'mobile'
 */
export declare enum IdentityType {
    EMAIL = "email",
    MOBILE = "mobile"
}
export interface IdentityBaseProps {
    kind: IdentityType;
    content: string;
}
export declare const IdentityKind: yup.StringSchema<IdentityType, object>;
export declare const IdentityContent: yup.StringSchema<string, object>;
export declare const IdentityBase: import("../../../validation").Model<IdentityBaseProps>;
/**
 * Props required to generate
 * an Identity model.
 */
export interface IdentityProps extends Required<IdentityBaseProps> {
    hash: string;
    ownerUuid: string;
    verified?: boolean;
    hidden?: boolean;
    created?: Date;
    updated?: Date;
}
/**
 * Identity model.
 *
 * Identifies either an `email` address or a `mobile` number.
 * Associate it to a `User` instance.
 *
 * Includes metadata regarding the identity:
 * - verified: Whether the user verified the identity
 * - hidden: Whether the user hid the identity
 * - created: Timestamp of creation
 * - updated: Timestamp of last update
 */
export declare const Identity: import("../../../validation").Model<IdentityProps>;
//# sourceMappingURL=Identity.d.ts.map