"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatchRequest = exports.MatchTypesList = exports.MatchTypes = void 0;
var yup = __importStar(require("yup"));
var validation_1 = require("../../../../validation");
var MatchTypes;
(function (MatchTypes) {
    MatchTypes["username"] = "username";
    MatchTypes["email"] = "email";
    MatchTypes["mobile"] = "mobile";
    MatchTypes["identity_hash"] = "identity_hash";
})(MatchTypes = exports.MatchTypes || (exports.MatchTypes = {}));
exports.MatchTypesList = Object.values(MatchTypes);
/**
 * MatchRequest model.
 *
 * Specifies the payload to a request
 * to UserService's match lambda.
 *
 * One and only one of MatchTypes
 * must be provided, and be valid.
 */
exports.MatchRequest = validation_1.defineModel(validation_1.Namespaces.USER_SERVICE, 'MatchRequest', function () {
    var _a;
    var test = {
        name: exports.MatchTypesList.join('-'),
        message: "Please provide one and only one between: " + exports.MatchTypesList.map(function (el) { return "'" + el + "'"; }).join(', '),
        func: function (value) {
            if (!value) {
                return false;
            }
            var defined = exports.MatchTypesList
                .map(function (matchType) { return value[matchType]; })
                .filter(function (element) { return element; });
            return defined.length === 1;
        },
    };
    var schema = yup
        .object((_a = {},
        _a[MatchTypes.username] = yup.string().uuid(),
        _a[MatchTypes.email] = validation_1.Email,
        _a[MatchTypes.mobile] = validation_1.Mobile,
        _a[MatchTypes.identity_hash] = yup.string(),
        _a))
        .test(test.name, test.message, test.func);
    return schema;
});
//# sourceMappingURL=MatchRequest.js.map