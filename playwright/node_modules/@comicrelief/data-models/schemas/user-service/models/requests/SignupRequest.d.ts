import { IdentityBaseProps } from '../Identity';
import type { UserProps } from '../User';
/**
 * Represents a full IdentityRequest
 */
export interface IdentityRequest extends IdentityBaseProps {
    hash: string;
}
/**
 * Props required to generate
 * a Partial SignupRequest
 */
export interface PartialSignupRequestProps {
    firstName?: string;
    lastName?: string;
    identities: IdentityBaseProps[];
}
/**
 * Props required to generate
 * an SignupRequest.
 */
export interface SignupRequestProps {
    firstName?: string;
    lastName?: string;
    identities: IdentityRequest[];
}
/**
 * SignupRequest model.
 *
 * Specifies the payload to a request
 * to Supporter Events's producer lambda.
 *
 * One and only one between
 * `email` or `mobile`
 * must be provided, and be valid.
 */
export declare const PartialSignupRequest: import("../../../../validation").Model<PartialSignupRequestProps>;
/**
 * SignupRequest model.
 *
 * Specifies the payload to a request
 * to UserService's signup lambda.
 *
 * One and only one between
 * `email` or `mobile`
 * must be provided, and be valid.
 */
export declare const SignupRequest: import("../../../../validation").Model<SignupRequestProps>;
/**
 * Represents the response body
 * for a SignupRequest
 */
export interface SignupResponse {
    identities: IdentityRequest[];
    hash: string;
    user: UserProps;
}
//# sourceMappingURL=SignupRequest.d.ts.map