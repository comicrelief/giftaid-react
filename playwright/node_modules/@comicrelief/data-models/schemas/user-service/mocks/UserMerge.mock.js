"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.USER_MERGES = exports.USER_MERGES_INVALID = exports.USER_MERGES_VALID = exports.USER_MERGE_VALUES = exports.USER_MERGE_INVALID_VALUES = exports.USER_MERGE_VALID_VALUES = void 0;
var utils_1 = require("../../../utils");
var Identity_mock_1 = require("./Identity.mock");
exports.USER_MERGE_VALID_VALUES = {
    uuid: 'e6052604-184b-451f-a5bd-e26052df707b',
    origin: utils_1.pick(Identity_mock_1.IDENTITIES.valid.EMAIL, ['hash', 'kind', 'content']),
    destination: utils_1.pick(Identity_mock_1.IDENTITIES.valid.MOBILE, ['hash', 'kind', 'content']),
    created: new Date(1599748412553),
    updated: new Date(1599748412553),
};
exports.USER_MERGE_INVALID_VALUES = {
    uuid: 'invalid-uuid',
    origin: {
        hash: null,
        kind: 'something',
        content: null,
    },
    destination: {
        hash: null,
        kind: 'something',
        content: null,
    },
    created: 'not-a-created-date',
    updated: 'not-a-updated-date',
};
exports.USER_MERGE_VALUES = {
    valid: exports.USER_MERGE_VALID_VALUES,
    invalid: exports.USER_MERGE_INVALID_VALUES,
};
exports.USER_MERGES_VALID = {
    DEFAULT: exports.USER_MERGE_VALID_VALUES,
    MISSING_UUID: utils_1.omit(exports.USER_MERGE_VALID_VALUES, ['uuid']),
    MISSING_CREATED: utils_1.omit(exports.USER_MERGE_VALID_VALUES, ['created']),
    MISSING_UPDATED: utils_1.omit(exports.USER_MERGE_VALID_VALUES, ['updated']),
};
exports.USER_MERGES_INVALID = {
    DEFAULT: exports.USER_MERGE_INVALID_VALUES,
    INVALID_UUID: utils_1.override(exports.USER_MERGE_VALID_VALUES, { uuid: exports.USER_MERGE_INVALID_VALUES.uuid }),
    INVALID_ORIGIN: utils_1.override(exports.USER_MERGE_VALID_VALUES, { origin: exports.USER_MERGE_INVALID_VALUES.origin }),
    INVALID_DESTINATION: utils_1.override(exports.USER_MERGE_VALID_VALUES, { destination: exports.USER_MERGE_INVALID_VALUES.destination }),
    INVALID_CREATED: utils_1.override(exports.USER_MERGE_VALID_VALUES, { created: exports.USER_MERGE_INVALID_VALUES.created }),
    INVALID_UPDATED: utils_1.override(exports.USER_MERGE_VALID_VALUES, { updated: exports.USER_MERGE_INVALID_VALUES.updated }),
    MISSING_ORIGIN: utils_1.omit(exports.USER_MERGE_VALID_VALUES, ['origin']),
    MISSING_DESTINATION: utils_1.omit(exports.USER_MERGE_VALID_VALUES, ['destination']),
};
exports.USER_MERGES = {
    valid: exports.USER_MERGES_VALID,
    invalid: exports.USER_MERGES_INVALID,
};
//# sourceMappingURL=UserMerge.mock.js.map