import { MatchRequestProps } from '../../models/requests/MatchRequest';
export declare const MATCH_REQUEST_VALID_VALUES: MatchRequestProps;
export declare const MATCH_REQUEST_INVALID_VALUES: {
    username: string;
    email: string;
    mobile: string;
    identity_hash: null;
};
export declare const MATCH_REQUEST_VALUES: {
    valid: MatchRequestProps;
    invalid: {
        username: string;
        email: string;
        mobile: string;
        identity_hash: null;
    };
};
export declare const MATCH_REQUESTS_VALID: {
    DEFAULT: Pick<MatchRequestProps, "email">;
    USERNAME: Pick<MatchRequestProps, "username">;
    EMAIL: Pick<MatchRequestProps, "email">;
    MOBILE: Pick<MatchRequestProps, "mobile">;
    IDENTITY_HASH: Pick<MatchRequestProps, "identity_hash">;
};
export declare const MATCH_REQUESTS_INVALID: {
    DEFAULT: {
        username: string;
        email: string;
        mobile: string;
        identity_hash: null;
    };
    ALL_VALID: MatchRequestProps;
    MISSING_ALL: {};
    USERNAME_AND_EMAIL: Pick<MatchRequestProps, "email" | "username">;
    USERNAME_AND_MOBILE: Pick<MatchRequestProps, "mobile" | "username">;
    USERNAME_AND_HASH: Pick<MatchRequestProps, "identity_hash" | "username">;
    EMAIL_AND_MOBILE: Pick<MatchRequestProps, "email" | "mobile">;
    EMAIL_AND_HASH: Pick<MatchRequestProps, "email" | "identity_hash">;
    MOBILE_AND_HASH: Pick<MatchRequestProps, "mobile" | "identity_hash">;
    INVALID_USERNAME: {
        username: string;
    };
    INVALID_EMAIL: {
        email: string;
    };
    INVALID_MOBILE: {
        mobile: string;
    };
    INVALID_HASH: {
        identity_hash: null;
    };
};
export declare const MATCH_REQUESTS: {
    valid: {
        DEFAULT: Pick<MatchRequestProps, "email">;
        USERNAME: Pick<MatchRequestProps, "username">;
        EMAIL: Pick<MatchRequestProps, "email">;
        MOBILE: Pick<MatchRequestProps, "mobile">;
        IDENTITY_HASH: Pick<MatchRequestProps, "identity_hash">;
    };
    invalid: {
        DEFAULT: {
            username: string;
            email: string;
            mobile: string;
            identity_hash: null;
        };
        ALL_VALID: MatchRequestProps;
        MISSING_ALL: {};
        USERNAME_AND_EMAIL: Pick<MatchRequestProps, "email" | "username">;
        USERNAME_AND_MOBILE: Pick<MatchRequestProps, "mobile" | "username">;
        USERNAME_AND_HASH: Pick<MatchRequestProps, "identity_hash" | "username">;
        EMAIL_AND_MOBILE: Pick<MatchRequestProps, "email" | "mobile">;
        EMAIL_AND_HASH: Pick<MatchRequestProps, "email" | "identity_hash">;
        MOBILE_AND_HASH: Pick<MatchRequestProps, "mobile" | "identity_hash">;
        INVALID_USERNAME: {
            username: string;
        };
        INVALID_EMAIL: {
            email: string;
        };
        INVALID_MOBILE: {
            mobile: string;
        };
        INVALID_HASH: {
            identity_hash: null;
        };
    };
};
//# sourceMappingURL=MatchRequest.mock.d.ts.map