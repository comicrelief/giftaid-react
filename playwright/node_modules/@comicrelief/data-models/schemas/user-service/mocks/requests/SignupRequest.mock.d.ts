import { IdentityType } from '../../models/Identity';
import { PartialSignupRequestProps, SignupRequestProps } from '../../models/requests/SignupRequest';
export declare const PARTIAL_SIGNUP_REQUEST_VALID_VALUES: PartialSignupRequestProps;
export declare const PARTIAL_SIGNUP_REQUEST_INVALID_VALUES: {
    firstName: null;
    lastName: null;
    identities: ({
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: string;
    })[];
};
export declare const PARTIAL_SIGNUP_REQUEST_VALUES: {
    valid: PartialSignupRequestProps;
    invalid: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
};
export declare const PARTIAL_SIGNUP_REQUESTS_VALID: {
    DEFAULT: PartialSignupRequestProps;
    ONE_IDENTITY_EMAIL: PartialSignupRequestProps & {
        identities: {
            kind: IdentityType;
            content: string;
        }[];
    };
    ONE_IDENTITY_MOBILE: PartialSignupRequestProps & {
        identities: {
            kind: IdentityType;
            content: string;
        }[];
    };
    TWO_IDENTITIES_EMAIL_AND_MOBILE: PartialSignupRequestProps & {
        identities: {
            kind: IdentityType;
            content: string;
        }[];
    };
    MISSING_FIRSTNAME: Omit<PartialSignupRequestProps, "firstName">;
    MISSING_LASTNAME: Omit<PartialSignupRequestProps, "lastName">;
};
export declare const PARTIAL_SIGNUP_REQUESTS_INVALID: {
    DEFAULT: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
    INVALID_FIRSTNAME: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        firstName: null;
    };
    INVALID_LASTNAME: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        lastName: null;
    };
    INVALID_IDENTITY_EMAIL: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        })[];
    };
    INVALID_IDENTITY_MOBILE: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        })[];
    };
    INVALID_IDENTITY_KIND: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
    NO_IDENTITIES: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    } & {
        identities: never[];
    };
    MISSING_IDENTITIES: Omit<{
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    }, "identities">;
};
export declare const PARTIAL_SIGNUP_REQUESTS: {
    valid: {
        DEFAULT: PartialSignupRequestProps;
        ONE_IDENTITY_EMAIL: PartialSignupRequestProps & {
            identities: {
                kind: IdentityType;
                content: string;
            }[];
        };
        ONE_IDENTITY_MOBILE: PartialSignupRequestProps & {
            identities: {
                kind: IdentityType;
                content: string;
            }[];
        };
        TWO_IDENTITIES_EMAIL_AND_MOBILE: PartialSignupRequestProps & {
            identities: {
                kind: IdentityType;
                content: string;
            }[];
        };
        MISSING_FIRSTNAME: Omit<PartialSignupRequestProps, "firstName">;
        MISSING_LASTNAME: Omit<PartialSignupRequestProps, "lastName">;
    };
    invalid: {
        DEFAULT: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        INVALID_FIRSTNAME: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            firstName: null;
        };
        INVALID_LASTNAME: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            lastName: null;
        };
        INVALID_IDENTITY_EMAIL: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
                content: string;
            })[];
        };
        INVALID_IDENTITY_MOBILE: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
                content: string;
            })[];
        };
        INVALID_IDENTITY_KIND: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        NO_IDENTITIES: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        } & {
            identities: never[];
        };
        MISSING_IDENTITIES: Omit<{
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        }, "identities">;
    };
};
export declare const SIGNUP_REQUEST_VALID_VALUES: SignupRequestProps;
export declare const SIGNUP_REQUEST_INVALID_VALUES: {
    firstName: null;
    lastName: null;
    identities: ({
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: string;
    })[];
};
export declare const SIGNUP_REQUEST_VALUES: {
    valid: SignupRequestProps;
    invalid: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
};
export declare const SIGNUP_REQUESTS_VALID: {
    DEFAULT: SignupRequestProps;
    ONE_IDENTITY_EMAIL: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
        })[];
    };
    ONE_IDENTITY_MOBILE: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        })[];
    };
    TWO_IDENTITIES_EMAIL_AND_MOBILE: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
        })[];
    };
    MISSING_FIRSTNAME: Omit<SignupRequestProps, "firstName">;
    MISSING_LASTNAME: Omit<SignupRequestProps, "lastName">;
};
export declare const SIGNUP_REQUESTS_INVALID: {
    DEFAULT: {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
    INVALID_FIRSTNAME: never;
    INVALID_LASTNAME: never;
    INVALID_IDENTITY_EMAIL: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        })[];
    };
    INVALID_IDENTITY_MOBILE: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        })[];
    };
    INVALID_IDENTITY_KIND: SignupRequestProps & {
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
    NO_IDENTITIES: SignupRequestProps & {
        identities: never[];
    };
    MISSING_IDENTITIES: Omit<SignupRequestProps, "identities">;
};
export declare const SIGNUP_REQUESTS: {
    valid: {
        DEFAULT: SignupRequestProps;
        ONE_IDENTITY_EMAIL: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
            })[];
        };
        ONE_IDENTITY_MOBILE: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
                content: string;
            })[];
        };
        TWO_IDENTITIES_EMAIL_AND_MOBILE: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
            })[];
        };
        MISSING_FIRSTNAME: Omit<SignupRequestProps, "firstName">;
        MISSING_LASTNAME: Omit<SignupRequestProps, "lastName">;
    };
    invalid: {
        DEFAULT: {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        INVALID_FIRSTNAME: never;
        INVALID_LASTNAME: never;
        INVALID_IDENTITY_EMAIL: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
                content: string;
            })[];
        };
        INVALID_IDENTITY_MOBILE: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: IdentityType;
                content: string;
            })[];
        };
        INVALID_IDENTITY_KIND: SignupRequestProps & {
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        NO_IDENTITIES: SignupRequestProps & {
            identities: never[];
        };
        MISSING_IDENTITIES: Omit<SignupRequestProps, "identities">;
    };
};
/**
 * Generates a random PartialSignupRequest
 *
 * @param overrides
 */
export declare const partialSignupRequestGenerator: (overrides?: Partial<PartialSignupRequestProps>) => PartialSignupRequestProps;
/**
 * Generates a random SignupRequest
 *
 * @param overrides
 */
export declare const signupRequestGenerator: (overrides?: Partial<SignupRequestProps>) => SignupRequestProps;
//# sourceMappingURL=SignupRequest.mock.d.ts.map