import { IdentityProps, IdentityType } from '../models/Identity';
export declare const IDENTITY_VALID_VALUES: {
    hash: string;
    ownerUuid: string;
    kind: IdentityType;
    content: string;
    hidden: boolean;
    verified: boolean;
    created: Date;
    updated: Date;
};
export declare const IDENTITY_INVALID_VALUES: {
    hash: null;
    ownerUuid: string;
    kind: string;
    content: null;
    hidden: number;
    verified: number;
    created: string;
    updated: string;
};
export declare const IDENTITY_VALUES: {
    valid: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    };
    invalid: {
        hash: null;
        ownerUuid: string;
        kind: string;
        content: null;
        hidden: number;
        verified: number;
        created: string;
        updated: string;
    };
};
export declare const IDENTITIES_VALID: {
    DEFAULT: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    };
    MISSING_HIDDEN: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "hidden">;
    MISSING_VERIFIED: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "verified">;
    MISSING_CREATED: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "created">;
    MISSING_UPDATED: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "updated">;
    EMAIL: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: IdentityType;
    };
    MOBILE: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: IdentityType;
        content: string;
    };
};
export declare const IDENTITIES_INVALID: {
    DEFAULT: {
        hash: null;
        ownerUuid: string;
        kind: string;
        content: null;
        hidden: number;
        verified: number;
        created: string;
        updated: string;
    };
    MISSING_HASH: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "hash">;
    MISSING_OWNERUUID: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "ownerUuid">;
    MISSING_KIND: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "kind">;
    MISSING_CONTENT: Omit<{
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    }, "content">;
    INVALID_HASH: never;
    INVALID_OWNERUUID: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        ownerUuid: string;
    };
    INVALID_KIND_NOT_RECOGNISED: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: string;
    };
    INVALID_KIND_NULL: never;
    INVALID_CONTENT: never;
    INVALID_EMAIL: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: IdentityType;
        content: string;
    };
    INVALID_MOBILE: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: IdentityType;
        content: string;
    };
    INVALID_HIDDEN: never;
    INVALID_VERIFIED: never;
    INVALID_CREATED: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        created: string;
    };
    INVALID_UPDATED: {
        hash: string;
        ownerUuid: string;
        kind: IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        updated: string;
    };
};
export declare const IDENTITIES: {
    valid: {
        DEFAULT: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        };
        MISSING_HIDDEN: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "hidden">;
        MISSING_VERIFIED: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "verified">;
        MISSING_CREATED: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "created">;
        MISSING_UPDATED: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "updated">;
        EMAIL: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
        };
        MOBILE: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        };
    };
    invalid: {
        DEFAULT: {
            hash: null;
            ownerUuid: string;
            kind: string;
            content: null;
            hidden: number;
            verified: number;
            created: string;
            updated: string;
        };
        MISSING_HASH: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "hash">;
        MISSING_OWNERUUID: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "ownerUuid">;
        MISSING_KIND: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "kind">;
        MISSING_CONTENT: Omit<{
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        }, "content">;
        INVALID_HASH: never;
        INVALID_OWNERUUID: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            ownerUuid: string;
        };
        INVALID_KIND_NOT_RECOGNISED: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        };
        INVALID_KIND_NULL: never;
        INVALID_CONTENT: never;
        INVALID_EMAIL: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        };
        INVALID_MOBILE: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: IdentityType;
            content: string;
        };
        INVALID_HIDDEN: never;
        INVALID_VERIFIED: never;
        INVALID_CREATED: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            created: string;
        };
        INVALID_UPDATED: {
            hash: string;
            ownerUuid: string;
            kind: IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            updated: string;
        };
    };
};
export declare const PARTIAL_IDENTITIES: {
    EMAIL: {
        kind: IdentityType;
        content: string;
    };
    MOBILE: {
        kind: IdentityType;
        content: string;
    };
};
/**
 * Generates a random identity
 *
 * @param overrides
 */
export declare const identityGenerator: (overrides?: Partial<IdentityProps>) => Required<IdentityProps>;
//# sourceMappingURL=Identity.mock.d.ts.map