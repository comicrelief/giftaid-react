export declare const USER_MERGE_VALID_VALUES: {
    uuid: string;
    origin: Pick<{
        hash: string;
        ownerUuid: string;
        kind: import("../models").IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: import("../models").IdentityType;
    }, "hash" | "kind" | "content">;
    destination: Pick<{
        hash: string;
        ownerUuid: string;
        kind: import("../models").IdentityType;
        content: string;
        hidden: boolean;
        verified: boolean;
        created: Date;
        updated: Date;
    } & {
        kind: import("../models").IdentityType;
        content: string;
    }, "hash" | "kind" | "content">;
    created: Date;
    updated: Date;
};
export declare const USER_MERGE_INVALID_VALUES: {
    uuid: string;
    origin: {
        hash: null;
        kind: string;
        content: null;
    };
    destination: {
        hash: null;
        kind: string;
        content: null;
    };
    created: string;
    updated: string;
};
export declare const USER_MERGE_VALUES: {
    valid: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    };
    invalid: {
        uuid: string;
        origin: {
            hash: null;
            kind: string;
            content: null;
        };
        destination: {
            hash: null;
            kind: string;
            content: null;
        };
        created: string;
        updated: string;
    };
};
export declare const USER_MERGES_VALID: {
    DEFAULT: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    };
    MISSING_UUID: Omit<{
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    }, "uuid">;
    MISSING_CREATED: Omit<{
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    }, "created">;
    MISSING_UPDATED: Omit<{
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    }, "updated">;
};
export declare const USER_MERGES_INVALID: {
    DEFAULT: {
        uuid: string;
        origin: {
            hash: null;
            kind: string;
            content: null;
        };
        destination: {
            hash: null;
            kind: string;
            content: null;
        };
        created: string;
        updated: string;
    };
    INVALID_UUID: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    } & {
        uuid: string;
    };
    INVALID_ORIGIN: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    } & {
        origin: {
            hash: null;
            kind: string;
            content: null;
        };
    };
    INVALID_DESTINATION: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    } & {
        destination: {
            hash: null;
            kind: string;
            content: null;
        };
    };
    INVALID_CREATED: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    } & {
        created: string;
    };
    INVALID_UPDATED: {
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    } & {
        updated: string;
    };
    MISSING_ORIGIN: Omit<{
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    }, "origin">;
    MISSING_DESTINATION: Omit<{
        uuid: string;
        origin: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
        }, "hash" | "kind" | "content">;
        destination: Pick<{
            hash: string;
            ownerUuid: string;
            kind: import("../models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: import("../models").IdentityType;
            content: string;
        }, "hash" | "kind" | "content">;
        created: Date;
        updated: Date;
    }, "destination">;
};
export declare const USER_MERGES: {
    valid: {
        DEFAULT: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        };
        MISSING_UUID: Omit<{
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        }, "uuid">;
        MISSING_CREATED: Omit<{
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        }, "created">;
        MISSING_UPDATED: Omit<{
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        }, "updated">;
    };
    invalid: {
        DEFAULT: {
            uuid: string;
            origin: {
                hash: null;
                kind: string;
                content: null;
            };
            destination: {
                hash: null;
                kind: string;
                content: null;
            };
            created: string;
            updated: string;
        };
        INVALID_UUID: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        } & {
            uuid: string;
        };
        INVALID_ORIGIN: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        } & {
            origin: {
                hash: null;
                kind: string;
                content: null;
            };
        };
        INVALID_DESTINATION: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        } & {
            destination: {
                hash: null;
                kind: string;
                content: null;
            };
        };
        INVALID_CREATED: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        } & {
            created: string;
        };
        INVALID_UPDATED: {
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        } & {
            updated: string;
        };
        MISSING_ORIGIN: Omit<{
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        }, "origin">;
        MISSING_DESTINATION: Omit<{
            uuid: string;
            origin: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
            }, "hash" | "kind" | "content">;
            destination: Pick<{
                hash: string;
                ownerUuid: string;
                kind: import("../models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: import("../models").IdentityType;
                content: string;
            }, "hash" | "kind" | "content">;
            created: Date;
            updated: Date;
        }, "destination">;
    };
};
//# sourceMappingURL=UserMerge.mock.d.ts.map