"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
var yup = __importStar(require("yup"));
var StrictString_1 = require("../../../fields/StrictString");
var validation_1 = require("../../../validation");
var common_1 = require("./common");
/**
 * PSL Transaction model
 */
exports.Transaction = validation_1.defineModel(validation_1.Namespaces.PAYMENTS, 'Transaction', function () { return yup.object({
    id: yup.string().uuid().required(),
    amount: yup.number().required(),
    currency: yup.string().required(),
    token: yup.string().nullable().default(function () { return null; }).defined(),
    order_reference: yup.string().required(),
    payment_type: yup.string().required(),
    successUrl: yup.string().nullable().default(function () { return null; }).defined(),
    failureUrl: yup.string().nullable().default(function () { return null; }).defined(),
    ipnUrl: yup.string().nullable().default(function () { return null; }).defined(),
    payerId: yup.string().nullable().default(function () { return null; }).defined(),
    metadata: yup.string().nullable().default(function () { return ''; }).defined(),
    created: validation_1.TimestampOrNow.required(),
    updated: validation_1.TimestampOrNow.required(),
    status: yup.string().oneOf(Object.values(common_1.TransactionStatus)).required(),
    email: yup.string().required(),
    address1: StrictString_1.StrictString.required(),
    address2: StrictString_1.StrictString.nullable().default(function () { return null; }).defined(),
    postcode: StrictString_1.StrictString.required(),
    town: StrictString_1.StrictString.required(),
    country: StrictString_1.StrictString.required(),
    parameters: yup.string().nullable().default(function () { return null; }).defined(),
    recoverUrl: yup.string().nullable().default(function () { return null; }).defined(),
    client: yup.string().required(),
    provider: yup.string().required(),
    customerName: yup.string().required(),
    providerReference: yup.string().nullable().default(function () { return null; }).defined(),
    responseCode: yup.string().nullable().default(function () { return null; }).defined(),
    responseMessage: yup.string().nullable().default(function () { return null; }).defined(),
    giftaid: validation_1.NumericBoolField.required(),
    entityClass: yup.string().required(),
    affiliate: yup.string().nullable().default(function () { return null; }).defined(),
    firstName: yup.string().required(),
    lastName: yup.string().required(),
    address3: StrictString_1.StrictString.nullable().default(function () { return null; }).defined(),
    cartId: yup.string().nullable().default(function () { return null; }).defined(),
    permissionEmail: validation_1.NumericBoolField.defined(),
    permissionPost: validation_1.NumericBoolField.defined(),
    campaign: yup.string().nullable().default(function () { return null; }).defined(),
    transSource: yup.string().nullable().default(function () { return null; }).defined(),
    transSourceUrl: yup.string().nullable().default(function () { return null; }).defined(),
    transType: yup.string().nullable().default(function () { return null; }).defined(),
    subscriptionId: yup.string().nullable().default(function () { return null; }).defined(),
    batchId: yup.string().nullable().default(function () { return null; }).defined(),
    latitude: yup.number().nullable().default(function () { return null; }).defined(),
    longitude: yup.number().nullable().default(function () { return null; }).defined(),
    settled: validation_1.Timestamp.nullable().default(function () { return null; }).defined(),
}); });
//# sourceMappingURL=Transaction.js.map