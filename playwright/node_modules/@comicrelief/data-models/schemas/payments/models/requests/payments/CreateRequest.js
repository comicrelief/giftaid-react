"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateRequest = void 0;
var yup = __importStar(require("yup"));
var enums_1 = require("../../../../../enums");
var validation_1 = require("../../../../../validation");
var common_1 = require("../../common");
/**
 * CreateRequest.
 */
exports.CreateRequest = validation_1.defineModel(validation_1.Namespaces.PAYMENTS, 'CreateRequest', function () { return yup
    .object({
    client: yup.string().required(),
    token: yup.string().required(),
    amount: yup.number().positive().max(common_1.DONATION_MAXIMUM_AMOUNT).required(),
    currency: yup.string().oneOf(Object.values(validation_1.Currencies)).required(),
    order_reference: yup.string().uuid().required(),
    giftaid: validation_1.NumericBoolField.required(),
    campaign: yup.string().oneOf(Object.values(enums_1.Campaigns)).required(),
    transSource: yup.string().required(),
    transSourceUrl: yup.string().required(),
    transType: yup.string().oneOf(Object.values(common_1.TransactionTypes)).required(),
    firstName: validation_1.FirstName.required(),
    lastName: validation_1.LastName.required(),
    email: common_1.ServerlessPaymentsEmail.required(),
    address1: yup.string().required(),
    postcode: yup.string().required(),
    town: yup.string().required(),
    country: yup.string().required(),
    ipnUrl: yup.string().url().nullable().default(function () { return null; })
        .defined(),
    successUrl: yup.string().required(),
    failureUrl: yup.string().required(),
    metadata: validation_1.JsonString,
}); });
//# sourceMappingURL=CreateRequest.js.map