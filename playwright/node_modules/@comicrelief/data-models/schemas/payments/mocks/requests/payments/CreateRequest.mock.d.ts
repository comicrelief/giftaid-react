import { Campaigns } from '../../../../../enums';
import { NumericBool } from '../../../../../validation';
import { TransactionTypes } from '../../../models/common';
import { CreateRequestProps } from '../../../models/requests/payments/CreateRequest';
export declare const CREATE_REQUEST_VALUES_VALID: Required<CreateRequestProps>;
export declare const CREATE_REQUEST_VALUES_INVALID: {
    client: null;
    token: null;
    amount: string;
    currency: string;
    order_reference: string;
    giftaid: number;
    campaign: string;
    transSource: null;
    transSourceUrl: null;
    transType: string;
    firstName: null;
    lastName: null;
    email: string;
    address1: null;
    postcode: null;
    town: null;
    country: null;
    ipnUrl: undefined;
    successUrl: null;
    failureUrl: null;
    metadata: string;
};
export declare const CREATE_REQUEST_VALUES: {
    valid: Required<CreateRequestProps>;
    invalid: {
        client: null;
        token: null;
        amount: string;
        currency: string;
        order_reference: string;
        giftaid: number;
        campaign: string;
        transSource: null;
        transSourceUrl: null;
        transType: string;
        firstName: null;
        lastName: null;
        email: string;
        address1: null;
        postcode: null;
        town: null;
        country: null;
        ipnUrl: undefined;
        successUrl: null;
        failureUrl: null;
        metadata: string;
    };
};
export declare const CREATE_REQUESTS_VALID: {
    DEFAULT: Required<CreateRequestProps>;
    PREVIOUS_CAMPAIGN: Required<CreateRequestProps> & {
        campaign: Campaigns;
    };
    GIFTAID_NO: Required<CreateRequestProps> & {
        giftaid: NumericBool;
    };
    GIFTAID_YES: Required<CreateRequestProps> & {
        giftaid: NumericBool;
    };
    TRANSACTION_DONATION: Required<CreateRequestProps> & {
        transType: TransactionTypes;
    };
    TRANSACTION_PRIZE: Required<CreateRequestProps> & {
        transType: TransactionTypes;
    };
    MISSING_METADATA: Omit<Required<CreateRequestProps>, "metadata">;
    WITH_TRANS_SOURCE_URL_LOCALHOST: Required<CreateRequestProps> & {
        transSourceUrl: string;
    };
    WITH_SUCCESS_URL_LOCALHOST: Required<CreateRequestProps> & {
        successUrl: string;
    };
    WITH_FAILURE_URL_LOCALHOST: Required<CreateRequestProps> & {
        failureUrl: string;
    };
};
export declare const CREATE_REQUESTS_INVALID: {
    DEFAULT: {
        client: null;
        token: null;
        amount: string;
        currency: string;
        order_reference: string;
        giftaid: number;
        campaign: string;
        transSource: null;
        transSourceUrl: null;
        transType: string;
        firstName: null;
        lastName: null;
        email: string;
        address1: null;
        postcode: null;
        town: null;
        country: null;
        ipnUrl: undefined;
        successUrl: null;
        failureUrl: null;
        metadata: string;
    };
    INVALID_CLIENT: never;
    INVALID_TOKEN: never;
    INVALID_AMOUNT: Required<CreateRequestProps> & {
        amount: string;
    };
    INVALID_CURRENCY: Required<CreateRequestProps> & {
        currency: string;
    };
    INVALID_ORDER_REFERENCE: Required<CreateRequestProps> & {
        order_reference: string;
    };
    INVALID_GIFTAID: Required<CreateRequestProps> & {
        giftaid: number;
    };
    INVALID_CAMPAIGN: Required<CreateRequestProps> & {
        campaign: string;
    };
    INVALID_TRANS_SOURCE: never;
    INVALID_TRANS_SOURCE_URL: never;
    INVALID_TRANS_TYPE: Required<CreateRequestProps> & {
        transType: string;
    };
    INVALID_FIRST_NAME: never;
    INVALID_LAST_NAME: never;
    INVALID_EMAIL: Required<CreateRequestProps> & {
        email: string;
    };
    INVALID_EMAIL_DOLLAR: Required<CreateRequestProps> & {
        email: string;
    };
    INVALID_EMAIL_POUND: Required<CreateRequestProps> & {
        email: string;
    };
    INVALID_EMAIL_PERCENT: Required<CreateRequestProps> & {
        email: string;
    };
    INVALID_ADDRESS1: never;
    INVALID_POSTCODE: never;
    INVALID_TOWN: never;
    INVALID_COUNTRY: never;
    INVALID_SUCCESS_URL: never;
    INVALID_FAILURE_URL: never;
    INVALID_METADATA: Required<CreateRequestProps> & {
        metadata: string;
    };
    AMOUNT_UNDER_MIN: Required<CreateRequestProps> & {
        amount: number;
    };
    AMOUNT_OVER_MAX: Required<CreateRequestProps> & {
        amount: number;
    };
    MISSING_CLIENT: Omit<Required<CreateRequestProps>, "client">;
    MISSING_TOKEN: Omit<Required<CreateRequestProps>, "token">;
    MISSING_AMOUNT: Omit<Required<CreateRequestProps>, "amount">;
    MISSING_CURRENCY: Omit<Required<CreateRequestProps>, "currency">;
    MISSING_ORDER_REFERENCE: Omit<Required<CreateRequestProps>, "order_reference">;
    MISSING_GIFTAID: Omit<Required<CreateRequestProps>, "giftaid">;
    MISSING_CAMPAIGN: Omit<Required<CreateRequestProps>, "campaign">;
    MISSING_TRANS_SOURCE: Omit<Required<CreateRequestProps>, "transSource">;
    MISSING_TRANS_SOURCE_URL: Omit<Required<CreateRequestProps>, "transSourceUrl">;
    MISSING_TRANS_TYPE: Omit<Required<CreateRequestProps>, "transType">;
    MISSING_FIRST_NAME: Omit<Required<CreateRequestProps>, "firstName">;
    MISSING_LAST_NAME: Omit<Required<CreateRequestProps>, "lastName">;
    MISSING_EMAIL: Omit<Required<CreateRequestProps>, "email">;
    MISSING_ADDRESS1: Omit<Required<CreateRequestProps>, "address1">;
    MISSING_POSTCODE: Omit<Required<CreateRequestProps>, "postcode">;
    MISSING_TOWN: Omit<Required<CreateRequestProps>, "town">;
    MISSING_COUNTRY: Omit<Required<CreateRequestProps>, "country">;
    MISSING_SUCCESS_URL: Omit<Required<CreateRequestProps>, "successUrl">;
    MISSING_FAILURE_URL: Omit<Required<CreateRequestProps>, "failureUrl">;
};
export declare const CREATE_REQUESTS: {
    valid: {
        DEFAULT: Required<CreateRequestProps>;
        PREVIOUS_CAMPAIGN: Required<CreateRequestProps> & {
            campaign: Campaigns;
        };
        GIFTAID_NO: Required<CreateRequestProps> & {
            giftaid: NumericBool;
        };
        GIFTAID_YES: Required<CreateRequestProps> & {
            giftaid: NumericBool;
        };
        TRANSACTION_DONATION: Required<CreateRequestProps> & {
            transType: TransactionTypes;
        };
        TRANSACTION_PRIZE: Required<CreateRequestProps> & {
            transType: TransactionTypes;
        };
        MISSING_METADATA: Omit<Required<CreateRequestProps>, "metadata">;
        WITH_TRANS_SOURCE_URL_LOCALHOST: Required<CreateRequestProps> & {
            transSourceUrl: string;
        };
        WITH_SUCCESS_URL_LOCALHOST: Required<CreateRequestProps> & {
            successUrl: string;
        };
        WITH_FAILURE_URL_LOCALHOST: Required<CreateRequestProps> & {
            failureUrl: string;
        };
    };
    invalid: {
        DEFAULT: {
            client: null;
            token: null;
            amount: string;
            currency: string;
            order_reference: string;
            giftaid: number;
            campaign: string;
            transSource: null;
            transSourceUrl: null;
            transType: string;
            firstName: null;
            lastName: null;
            email: string;
            address1: null;
            postcode: null;
            town: null;
            country: null;
            ipnUrl: undefined;
            successUrl: null;
            failureUrl: null;
            metadata: string;
        };
        INVALID_CLIENT: never;
        INVALID_TOKEN: never;
        INVALID_AMOUNT: Required<CreateRequestProps> & {
            amount: string;
        };
        INVALID_CURRENCY: Required<CreateRequestProps> & {
            currency: string;
        };
        INVALID_ORDER_REFERENCE: Required<CreateRequestProps> & {
            order_reference: string;
        };
        INVALID_GIFTAID: Required<CreateRequestProps> & {
            giftaid: number;
        };
        INVALID_CAMPAIGN: Required<CreateRequestProps> & {
            campaign: string;
        };
        INVALID_TRANS_SOURCE: never;
        INVALID_TRANS_SOURCE_URL: never;
        INVALID_TRANS_TYPE: Required<CreateRequestProps> & {
            transType: string;
        };
        INVALID_FIRST_NAME: never;
        INVALID_LAST_NAME: never;
        INVALID_EMAIL: Required<CreateRequestProps> & {
            email: string;
        };
        INVALID_EMAIL_DOLLAR: Required<CreateRequestProps> & {
            email: string;
        };
        INVALID_EMAIL_POUND: Required<CreateRequestProps> & {
            email: string;
        };
        INVALID_EMAIL_PERCENT: Required<CreateRequestProps> & {
            email: string;
        };
        INVALID_ADDRESS1: never;
        INVALID_POSTCODE: never;
        INVALID_TOWN: never;
        INVALID_COUNTRY: never;
        INVALID_SUCCESS_URL: never;
        INVALID_FAILURE_URL: never;
        INVALID_METADATA: Required<CreateRequestProps> & {
            metadata: string;
        };
        AMOUNT_UNDER_MIN: Required<CreateRequestProps> & {
            amount: number;
        };
        AMOUNT_OVER_MAX: Required<CreateRequestProps> & {
            amount: number;
        };
        MISSING_CLIENT: Omit<Required<CreateRequestProps>, "client">;
        MISSING_TOKEN: Omit<Required<CreateRequestProps>, "token">;
        MISSING_AMOUNT: Omit<Required<CreateRequestProps>, "amount">;
        MISSING_CURRENCY: Omit<Required<CreateRequestProps>, "currency">;
        MISSING_ORDER_REFERENCE: Omit<Required<CreateRequestProps>, "order_reference">;
        MISSING_GIFTAID: Omit<Required<CreateRequestProps>, "giftaid">;
        MISSING_CAMPAIGN: Omit<Required<CreateRequestProps>, "campaign">;
        MISSING_TRANS_SOURCE: Omit<Required<CreateRequestProps>, "transSource">;
        MISSING_TRANS_SOURCE_URL: Omit<Required<CreateRequestProps>, "transSourceUrl">;
        MISSING_TRANS_TYPE: Omit<Required<CreateRequestProps>, "transType">;
        MISSING_FIRST_NAME: Omit<Required<CreateRequestProps>, "firstName">;
        MISSING_LAST_NAME: Omit<Required<CreateRequestProps>, "lastName">;
        MISSING_EMAIL: Omit<Required<CreateRequestProps>, "email">;
        MISSING_ADDRESS1: Omit<Required<CreateRequestProps>, "address1">;
        MISSING_POSTCODE: Omit<Required<CreateRequestProps>, "postcode">;
        MISSING_TOWN: Omit<Required<CreateRequestProps>, "town">;
        MISSING_COUNTRY: Omit<Required<CreateRequestProps>, "country">;
        MISSING_SUCCESS_URL: Omit<Required<CreateRequestProps>, "successUrl">;
        MISSING_FAILURE_URL: Omit<Required<CreateRequestProps>, "failureUrl">;
    };
};
/**
 * Generates a random CreateRequest
 *
 * @param overrides
 */
export declare const createRequestGenerator: (overrides?: Partial<CreateRequestProps>) => Required<CreateRequestProps>;
//# sourceMappingURL=CreateRequest.mock.d.ts.map