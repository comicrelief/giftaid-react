import { RequiredKeys } from '../../../validation';
import { PayinAudience, PayinProps } from '../models/Payin';
export declare const PAYIN_VALUES_VALID: PayinProps;
export declare const PAYIN_VALUES_INVALID: RequiredKeys<PayinProps>;
export declare const PAYIN_VALUES: {
    valid: PayinProps;
    invalid: RequiredKeys<PayinProps>;
};
export declare const PAYIN_VALID: {
    DEFAULT: PayinProps;
    SCHOOL: PayinProps & {
        audience: PayinAudience;
        establishmentId: string;
        establishment_name: string;
        organisation: null;
    };
    NO_ORGANISATION: PayinProps & {
        organisation: null;
        establishment_name: null;
        organisationFreetext: null;
    };
    MISSING_ADDRESS2: Omit<PayinProps, "address2">;
    MISSING_ADDRESS3: Omit<PayinProps, "address3">;
    MISSING_EVENT: Omit<PayinProps, "Event">;
    MISSING_PERMISSION: Omit<PayinProps, "permission">;
    MISSING_PERMISSION_EMAIL: Omit<PayinProps, "permissionEmail">;
    MISSING_PERMISSION_PHONE: Omit<PayinProps, "permissionPhone">;
    MISSING_PERMISSION_POST: Omit<PayinProps, "permissionPost">;
    MISSING_PERMISSION_SMS: Omit<PayinProps, "permissionSMS">;
    MISSING_PHONE: Omit<PayinProps, "phone">;
    MISSING_MOBILE: Omit<PayinProps, "mobile">;
    MISSING_ESTABLISHMENT_ID: Omit<PayinProps, "establishmentId">;
    MISSING_JOB_TITLE: Omit<PayinProps, "jobTitle">;
    MISSING_SCHOOL_TYPE: Omit<PayinProps, "schoolType">;
    MISSING_ESTABLISHMENT_NAME: Omit<PayinProps, "establishment_name">;
    MISSING_ORGANISATION: Omit<PayinProps, "organisation">;
    MISSING_ORGANISATION_FREE_TEXT: Omit<PayinProps, "organisationFreetext">;
    MISSING_FUNDRAISING_ACTIVITY: Omit<PayinProps, "fundraising_activity">;
    MISSING_UK_ACTIVE_MEMBER: Omit<PayinProps, "ukActiveMember">;
    MISSING_CERTIFICATE: Omit<PayinProps, "certificate">;
};
export declare const PAYIN_INVALID: {
    DEFAULT: RequiredKeys<PayinProps>;
    INVALID_ID: PayinProps & {
        id: unknown;
    };
    INVALID_TRANSACTION_ID: PayinProps & {
        id: unknown;
    };
    INVALID_ADDRESS1: PayinProps & {
        address1: unknown;
    };
    INVALID_TOWN: PayinProps & {
        town: unknown;
    };
    INVALID_COUNTRY: PayinProps & {
        country: unknown;
    };
    INVALID_POSTCODE: PayinProps & {
        postcode: unknown;
    };
    INVALID_AUDIENCE: PayinProps & {
        audience: unknown;
    };
    MISSING_ID: Omit<PayinProps, "id">;
    MISSING_TRANSACTION_ID: Omit<PayinProps, "transactionId">;
    MISSING_ADDRESS1: Omit<PayinProps, "address1">;
    MISSING_TOWN: Omit<PayinProps, "town">;
    MISSING_COUNTRY: Omit<PayinProps, "country">;
    MISSING_POSTCODE: Omit<PayinProps, "postcode">;
    MISSING_AUDIENCE: Omit<PayinProps, "audience">;
};
export declare const PAYINS: {
    valid: {
        DEFAULT: PayinProps;
        SCHOOL: PayinProps & {
            audience: PayinAudience;
            establishmentId: string;
            establishment_name: string;
            organisation: null;
        };
        NO_ORGANISATION: PayinProps & {
            organisation: null;
            establishment_name: null;
            organisationFreetext: null;
        };
        MISSING_ADDRESS2: Omit<PayinProps, "address2">;
        MISSING_ADDRESS3: Omit<PayinProps, "address3">;
        MISSING_EVENT: Omit<PayinProps, "Event">;
        MISSING_PERMISSION: Omit<PayinProps, "permission">;
        MISSING_PERMISSION_EMAIL: Omit<PayinProps, "permissionEmail">;
        MISSING_PERMISSION_PHONE: Omit<PayinProps, "permissionPhone">;
        MISSING_PERMISSION_POST: Omit<PayinProps, "permissionPost">;
        MISSING_PERMISSION_SMS: Omit<PayinProps, "permissionSMS">;
        MISSING_PHONE: Omit<PayinProps, "phone">;
        MISSING_MOBILE: Omit<PayinProps, "mobile">;
        MISSING_ESTABLISHMENT_ID: Omit<PayinProps, "establishmentId">;
        MISSING_JOB_TITLE: Omit<PayinProps, "jobTitle">;
        MISSING_SCHOOL_TYPE: Omit<PayinProps, "schoolType">;
        MISSING_ESTABLISHMENT_NAME: Omit<PayinProps, "establishment_name">;
        MISSING_ORGANISATION: Omit<PayinProps, "organisation">;
        MISSING_ORGANISATION_FREE_TEXT: Omit<PayinProps, "organisationFreetext">;
        MISSING_FUNDRAISING_ACTIVITY: Omit<PayinProps, "fundraising_activity">;
        MISSING_UK_ACTIVE_MEMBER: Omit<PayinProps, "ukActiveMember">;
        MISSING_CERTIFICATE: Omit<PayinProps, "certificate">;
    };
    invalid: {
        DEFAULT: RequiredKeys<PayinProps>;
        INVALID_ID: PayinProps & {
            id: unknown;
        };
        INVALID_TRANSACTION_ID: PayinProps & {
            id: unknown;
        };
        INVALID_ADDRESS1: PayinProps & {
            address1: unknown;
        };
        INVALID_TOWN: PayinProps & {
            town: unknown;
        };
        INVALID_COUNTRY: PayinProps & {
            country: unknown;
        };
        INVALID_POSTCODE: PayinProps & {
            postcode: unknown;
        };
        INVALID_AUDIENCE: PayinProps & {
            audience: unknown;
        };
        MISSING_ID: Omit<PayinProps, "id">;
        MISSING_TRANSACTION_ID: Omit<PayinProps, "transactionId">;
        MISSING_ADDRESS1: Omit<PayinProps, "address1">;
        MISSING_TOWN: Omit<PayinProps, "town">;
        MISSING_COUNTRY: Omit<PayinProps, "country">;
        MISSING_POSTCODE: Omit<PayinProps, "postcode">;
        MISSING_AUDIENCE: Omit<PayinProps, "audience">;
    };
};
/**
 * Generates a random Payin object
 *
 * @param overrides
 */
export declare const payinGenerator: (overrides?: Partial<PayinProps>) => Required<PayinProps>;
//# sourceMappingURL=Payin.mock.d.ts.map