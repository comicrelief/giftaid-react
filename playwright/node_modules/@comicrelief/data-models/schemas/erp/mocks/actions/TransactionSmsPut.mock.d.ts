import { TransactionSmsPutProps } from '../../models/actions/TransactionSmsPut';
export declare const VALID_DATA: TransactionSmsPutProps['data'];
export declare const INVALID_DATA: {
    transaction_id: string;
    supporter_uuid: string;
    initiated_at: null;
    status: string;
    amount: number;
    provider: string;
    provider_reference: number;
    mobile_number: null;
    fund: null;
    project: null;
    activity: null;
    keyword: null;
    short_code: null;
};
export declare const VALID_VALUES: {
    type: any;
    data: any;
};
export declare const INVALID_VALUES: {
    type: any;
    data: any;
};
export declare const VALUES: {
    valid: {
        type: any;
        data: any;
    };
    invalid: {
        type: any;
        data: any;
    };
};
export declare const TRANSACTION_SMS_PUTS_VALID: {
    DEFAULT: {
        type: any;
        data: any;
    };
    EMPTY_KEYWORD: {
        type: any;
        data: any;
    };
    NULL_PROVIDER_REFERENCE: {
        type: any;
        data: any;
    };
};
export declare const TRANSACTION_SMS_PUTS_INVALID: {
    DEFAULT: {
        type: any;
        data: any;
    } & {
        data: any;
    };
    INVALID_TYPE: {
        type: any;
        data: any;
    } & {
        type: any;
    };
    INVALID_DATA: {
        type: any;
        data: any;
    } & {
        data: null;
    };
    INVALID_TRANSACTION_ID: {
        type: any;
        data: any;
    };
    INVALID_SUPPORTER_UUID: {
        type: any;
        data: any;
    };
    INVALID_INITIATED_AT: {
        type: any;
        data: any;
    };
    INVALID_STATUS: {
        type: any;
        data: any;
    };
    INVALID_AMOUNT: {
        type: any;
        data: any;
    };
    INVALID_PROVIDER: {
        type: any;
        data: any;
    };
    INVALID_PROVIDER_REFERENCE: {
        type: any;
        data: any;
    };
    INVALID_MOBILE_NUMBER: {
        type: any;
        data: any;
    };
    INVALID_FUND: {
        type: any;
        data: any;
    };
    INVALID_PROJECT: {
        type: any;
        data: any;
    };
    INVALID_ACTIVITY: {
        type: any;
        data: any;
    };
    INVALID_KEYWORD: {
        type: any;
        data: any;
    };
    INVALID_SHORT_CODE: {
        type: any;
        data: any;
    };
    MISSING_TYPE: Omit<{
        type: any;
        data: any;
    }, "type">;
    MISSING_DATA: Omit<{
        type: any;
        data: any;
    }, "data">;
    MISSING_TRANSACTION_ID: {
        type: any;
        data: any;
    };
    MISSING_SUPPORTER_UUID: {
        type: any;
        data: any;
    };
    MISSING_INITIATED_AT: {
        type: any;
        data: any;
    };
    MISSING_STATUS: {
        type: any;
        data: any;
    };
    MISSING_AMOUNT: {
        type: any;
        data: any;
    };
    MISSING_PROVIDER: {
        type: any;
        data: any;
    };
    MISSING_PROVIDER_REFERENCE: {
        type: any;
        data: any;
    };
    MISSING_MOBILE_NUMBER: {
        type: any;
        data: any;
    };
    MISSING_FUND: {
        type: any;
        data: any;
    };
    MISSING_PROJECT: {
        type: any;
        data: any;
    };
    MISSING_ACTIVITY: {
        type: any;
        data: any;
    };
    MISSING_KEYWORD: {
        type: any;
        data: any;
    };
    MISSING_SHORT_CODE: {
        type: any;
        data: any;
    };
};
export declare const TRANSACTION_SMS_PUTS: {
    invalid: {
        DEFAULT: {
            type: any;
            data: any;
        } & {
            data: any;
        };
        INVALID_TYPE: {
            type: any;
            data: any;
        } & {
            type: any;
        };
        INVALID_DATA: {
            type: any;
            data: any;
        } & {
            data: null;
        };
        INVALID_TRANSACTION_ID: {
            type: any;
            data: any;
        };
        INVALID_SUPPORTER_UUID: {
            type: any;
            data: any;
        };
        INVALID_INITIATED_AT: {
            type: any;
            data: any;
        };
        INVALID_STATUS: {
            type: any;
            data: any;
        };
        INVALID_AMOUNT: {
            type: any;
            data: any;
        };
        INVALID_PROVIDER: {
            type: any;
            data: any;
        };
        INVALID_PROVIDER_REFERENCE: {
            type: any;
            data: any;
        };
        INVALID_MOBILE_NUMBER: {
            type: any;
            data: any;
        };
        INVALID_FUND: {
            type: any;
            data: any;
        };
        INVALID_PROJECT: {
            type: any;
            data: any;
        };
        INVALID_ACTIVITY: {
            type: any;
            data: any;
        };
        INVALID_KEYWORD: {
            type: any;
            data: any;
        };
        INVALID_SHORT_CODE: {
            type: any;
            data: any;
        };
        MISSING_TYPE: Omit<{
            type: any;
            data: any;
        }, "type">;
        MISSING_DATA: Omit<{
            type: any;
            data: any;
        }, "data">;
        MISSING_TRANSACTION_ID: {
            type: any;
            data: any;
        };
        MISSING_SUPPORTER_UUID: {
            type: any;
            data: any;
        };
        MISSING_INITIATED_AT: {
            type: any;
            data: any;
        };
        MISSING_STATUS: {
            type: any;
            data: any;
        };
        MISSING_AMOUNT: {
            type: any;
            data: any;
        };
        MISSING_PROVIDER: {
            type: any;
            data: any;
        };
        MISSING_PROVIDER_REFERENCE: {
            type: any;
            data: any;
        };
        MISSING_MOBILE_NUMBER: {
            type: any;
            data: any;
        };
        MISSING_FUND: {
            type: any;
            data: any;
        };
        MISSING_PROJECT: {
            type: any;
            data: any;
        };
        MISSING_ACTIVITY: {
            type: any;
            data: any;
        };
        MISSING_KEYWORD: {
            type: any;
            data: any;
        };
        MISSING_SHORT_CODE: {
            type: any;
            data: any;
        };
    };
    valid: {
        DEFAULT: {
            type: any;
            data: any;
        };
        EMPTY_KEYWORD: {
            type: any;
            data: any;
        };
        NULL_PROVIDER_REFERENCE: {
            type: any;
            data: any;
        };
    };
};
/**
 * Generates a random `TransactionSmsPut` action.
 *
 * Note that `type` cannot be overridden.
 *
 * @param overrides
 * @param overrides.data
 */
export declare const transactionSmsPutGenerator: (overrides?: {
    data?: Partial<TransactionSmsPutProps['data']>;
}) => TransactionSmsPutProps;
//# sourceMappingURL=TransactionSmsPut.mock.d.ts.map