import { GiftaidUpdateProps } from '../../models/actions/GiftaidUpdate';
import { ErpPayloadTypes } from '../../models/common';
export declare const GIFTAID_UPDATE_VALUES_INVALID: {
    type: string;
    data: {};
};
export declare const GIFTAID_UPDATE_VALUES_VALID: GiftaidUpdateProps;
export declare const GIFTAID_UPDATE_VALUES: {
    valid: GiftaidUpdateProps;
    invalid: {
        type: string;
        data: {};
    };
};
export declare const GIFTAID_UPDATES_VALID: {
    DEFAULT: GiftaidUpdateProps;
    TRANSACTION_ID_NON_UUID: {
        type: ErpPayloadTypes;
        data: {
            transactionId: string;
            claimed: number;
        } & {
            transactionId: string;
        };
    };
    CLAIMED_0: {
        type: ErpPayloadTypes;
        data: {
            transactionId: string;
            claimed: number;
        } & {
            claimed: number;
        };
    };
    CLAIMED_1: {
        type: ErpPayloadTypes;
        data: {
            transactionId: string;
            claimed: number;
        } & {
            claimed: number;
        };
    };
};
export declare const GIFTAID_UPDATES_INVALID: {
    DEFAULT: GiftaidUpdateProps & {
        data: {};
    };
    INVALID_TYPE: GiftaidUpdateProps & {
        type: string;
    };
    INVALID_TRANSACTION_ID: {
        type: ErpPayloadTypes;
        data: never;
    };
    INVALID_CLAIMED_NEGATIVE: {
        type: ErpPayloadTypes;
        data: {
            transactionId: string;
            claimed: number;
        } & {
            claimed: number;
        };
    };
    INVALID_CLAIMED_POSITIVE: {
        type: ErpPayloadTypes;
        data: {
            transactionId: string;
            claimed: number;
        } & {
            claimed: number;
        };
    };
    MISSING_TRANSACTION_ID: {
        type: ErpPayloadTypes;
        data: Omit<{
            transactionId: string;
            claimed: number;
        }, "transactionId" | "claimed">;
    };
    MISSING_CLAIMED: {
        type: ErpPayloadTypes;
        data: Omit<{
            transactionId: string;
            claimed: number;
        }, "transactionId" | "claimed">;
    };
};
export declare const GIFTAID_UPDATES: {
    valid: {
        DEFAULT: GiftaidUpdateProps;
        TRANSACTION_ID_NON_UUID: {
            type: ErpPayloadTypes;
            data: {
                transactionId: string;
                claimed: number;
            } & {
                transactionId: string;
            };
        };
        CLAIMED_0: {
            type: ErpPayloadTypes;
            data: {
                transactionId: string;
                claimed: number;
            } & {
                claimed: number;
            };
        };
        CLAIMED_1: {
            type: ErpPayloadTypes;
            data: {
                transactionId: string;
                claimed: number;
            } & {
                claimed: number;
            };
        };
    };
    invalid: {
        DEFAULT: GiftaidUpdateProps & {
            data: {};
        };
        INVALID_TYPE: GiftaidUpdateProps & {
            type: string;
        };
        INVALID_TRANSACTION_ID: {
            type: ErpPayloadTypes;
            data: never;
        };
        INVALID_CLAIMED_NEGATIVE: {
            type: ErpPayloadTypes;
            data: {
                transactionId: string;
                claimed: number;
            } & {
                claimed: number;
            };
        };
        INVALID_CLAIMED_POSITIVE: {
            type: ErpPayloadTypes;
            data: {
                transactionId: string;
                claimed: number;
            } & {
                claimed: number;
            };
        };
        MISSING_TRANSACTION_ID: {
            type: ErpPayloadTypes;
            data: Omit<{
                transactionId: string;
                claimed: number;
            }, "transactionId" | "claimed">;
        };
        MISSING_CLAIMED: {
            type: ErpPayloadTypes;
            data: Omit<{
                transactionId: string;
                claimed: number;
            }, "transactionId" | "claimed">;
        };
    };
};
/**
 * Generates a random GiftaidUpdate
 *
 * @param overrides
 */
export declare const giftaidUpdateGenerator: (overrides?: Partial<GiftaidUpdateProps>) => GiftaidUpdateProps;
//# sourceMappingURL=GiftaidUpdate.mock.d.ts.map