import { Mocks, PartialKeys } from '../../../../../utils';
import { RequiredKeys } from '../../../../../validation';
import { DonationPutDataProps, DonationPutProps } from '../../../models';
import { ErpPayloadTypes } from '../../../models/common';
export declare const ANONYMOUS_DONATION_DATA_VALID_VALUES: DonationPutDataProps;
export declare const ANONYMOUS_DONATION_PUT_VALUES_VALID: DonationPutProps;
export declare const DONATION_PUT_VALUES_VALID: DonationPutProps;
export declare const DONATION_PUT_VALUES_INVALID: RequiredKeys<DonationPutProps>;
export declare const DONATION_PUT_VALUES: {
    valid: DonationPutProps;
    invalid: RequiredKeys<DonationPutProps>;
};
export declare const DONATION_PUT_VALID: {
    DEFAULT: DonationPutProps;
    ANONYMOUS_DONATION: DonationPutProps;
    NULL_JUSTGIVING_PAGE: {
        type: ErpPayloadTypes;
        data: DonationPutDataProps & PartialKeys<DonationPutDataProps>;
    };
};
export declare const DONATION_PUT_INVALID: Mocks<DonationPutProps>;
export declare const DONATION_PUT_MOCKS: {
    valid: {
        DEFAULT: DonationPutProps;
        ANONYMOUS_DONATION: DonationPutProps;
        NULL_JUSTGIVING_PAGE: {
            type: ErpPayloadTypes;
            data: DonationPutDataProps & PartialKeys<DonationPutDataProps>;
        };
    };
    invalid: Mocks<DonationPutProps>;
};
/**
 * Creates a random DonationPut
 *
 * @param overrides
 */
export declare const donationPutGenerator: (overrides?: Partial<DonationPutProps>) => Required<DonationPutProps>;
//# sourceMappingURL=DonationPut.mock.d.ts.map