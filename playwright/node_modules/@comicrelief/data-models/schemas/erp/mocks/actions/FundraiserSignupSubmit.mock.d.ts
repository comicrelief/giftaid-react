import { PartialKeys } from '../../../../utils';
import { RequiredKeys } from '../../../../validation';
import { FundraiserSignupSubmitDataProps, FundraiserSignupSubmitProps } from '../../models';
import { ErpPayloadTypes } from '../../models/common';
export declare const FUNDRAISER_SIGNUP_SUBMIT_MOCKS: {
    valid: {
        EMPTY_STRING_ORG_NAME: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        EMPTY_STRING_JOB_TITLE: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        EMPTY_STRING_ORG_ID: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        EMPTY_STRING_ORG_ID_TYPE: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        EMPTY_TOOLS_ARRAY: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        EMPTY_IDEAS_ARRAY: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_ORG_ID: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE_STRING_ID: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        STRING_ADDRESS_ID: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        DEFAULT: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps;
        };
    };
    invalid: {
        HAS_ORG_ID_ONLY: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE_ID_ONLY: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE_URL_ONLY: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE_INVALID_ID: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        HAS_JUSTGIVING_PAGE_INVALID_URL: {
            type: ErpPayloadTypes;
            data: FundraiserSignupSubmitDataProps & PartialKeys<FundraiserSignupSubmitDataProps>;
        };
        DEFAULT: {
            type: string;
            data: RequiredKeys<FundraiserSignupSubmitDataProps>;
        };
    };
};
/**
 * Generates a random fundraiser signup submit action
 *
 * @param overrides
 */
export declare const fundraiserSignupSubmitGenerator: (overrides?: Partial<FundraiserSignupSubmitProps>) => Required<FundraiserSignupSubmitProps>;
//# sourceMappingURL=FundraiserSignupSubmit.mock.d.ts.map