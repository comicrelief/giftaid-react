"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPostalTicketPut = exports.POSTAL_TICKET_PUTS = exports.POSTAL_TICKET_PUTS_INVALID = exports.POSTAL_TICKET_PUTS_VALID = exports.POSTAL_TICKET_PUT_VALUES = exports.POSTAL_TICKET_PUT_VALUES_INVALID = exports.POSTAL_TICKET_PUT_VALUES_VALID = void 0;
var utils_1 = require("../../../../../utils");
var common_1 = require("../../../models/common");
var PostalTicket_mock_1 = require("../../doctypes/prize/PostalTicket.mock");
exports.POSTAL_TICKET_PUT_VALUES_VALID = {
    type: common_1.ErpPayloadTypes.PRIZE__POSTALTICKET__PUT,
    data: PostalTicket_mock_1.POSTAL_TICKETS.valid.DEFAULT,
};
exports.POSTAL_TICKET_PUT_VALUES_INVALID = {
    type: 'some-type',
    data: PostalTicket_mock_1.POSTAL_TICKETS.invalid.DEFAULT,
};
exports.POSTAL_TICKET_PUT_VALUES = {
    valid: exports.POSTAL_TICKET_PUT_VALUES_VALID,
    invalid: exports.POSTAL_TICKET_PUT_VALUES_INVALID,
};
exports.POSTAL_TICKET_PUTS_VALID = __assign({ DEFAULT: exports.POSTAL_TICKET_PUT_VALUES.valid }, utils_1.overrideFromMocks(exports.POSTAL_TICKET_PUT_VALUES.valid, 'data', PostalTicket_mock_1.POSTAL_TICKETS.valid));
exports.POSTAL_TICKET_PUTS_INVALID = __assign({ DEFAULT: utils_1.override(exports.POSTAL_TICKET_PUT_VALUES_VALID, { data: exports.POSTAL_TICKET_PUT_VALUES.invalid.data }), INVALID_TYPE: utils_1.override(exports.POSTAL_TICKET_PUT_VALUES_VALID, { type: exports.POSTAL_TICKET_PUT_VALUES.invalid.type }), INVALID_DATA: utils_1.override(exports.POSTAL_TICKET_PUT_VALUES_VALID, { data: null }), MISSING_TYPE: utils_1.omit(exports.POSTAL_TICKET_PUT_VALUES_VALID, ['type']), MISSING_DATA: utils_1.omit(exports.POSTAL_TICKET_PUT_VALUES_VALID, ['data']) }, utils_1.overrideFromMocks(exports.POSTAL_TICKET_PUT_VALUES.valid, 'data', PostalTicket_mock_1.POSTAL_TICKETS.invalid));
exports.POSTAL_TICKET_PUTS = {
    invalid: exports.POSTAL_TICKET_PUTS_INVALID,
    valid: exports.POSTAL_TICKET_PUTS_VALID,
};
/**
 * Generates a random PostalTicketPut
 *
 * @param overrides
 */
var createPostalTicketPut = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ type: common_1.ErpPayloadTypes.PRIZE__POSTALTICKET__PUT, data: PostalTicket_mock_1.createPostalTicket() }, overrides));
};
exports.createPostalTicketPut = createPostalTicketPut;
//# sourceMappingURL=PostalTicketPut.mock.js.map