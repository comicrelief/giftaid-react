"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.lineItemGenerator = exports.LINE_ITEMS = exports.LINE_ITEMS_INVALID = exports.LINE_ITEMS_VALID = exports.LINE_ITEM_VALUES = exports.LINE_ITEM_VALUES_INVALID = exports.LINE_ITEM_VALUES_VALID3 = exports.LINE_ITEM_VALUES_VALID2 = exports.LINE_ITEM_VALUES_VALID = void 0;
var utils_1 = require("../../../../../utils");
var validation_1 = require("../../../../../validation");
var ProductVariant_mock_1 = require("./ProductVariant.mock");
exports.LINE_ITEM_VALUES_VALID = {
    variant_id: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.DEFAULT.shopify_id,
    sku: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.DEFAULT.sku,
    title: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.DEFAULT.title,
    quantity: 1,
    price: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.DEFAULT.price,
    vat: 0,
    discount: 0,
    currency: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.DEFAULT.currency,
};
exports.LINE_ITEM_VALUES_VALID2 = {
    variant_id: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.ALTERNATIVE.shopify_id,
    sku: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.ALTERNATIVE.sku,
    title: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.ALTERNATIVE.title,
    quantity: 1,
    price: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.ALTERNATIVE.price,
    vat: 0,
    discount: 5,
    currency: ProductVariant_mock_1.PRODUCT_VARIANTS.valid.ALTERNATIVE.currency,
};
exports.LINE_ITEM_VALUES_VALID3 = {
    variant_id: null,
    sku: null,
    title: 'Tip',
    quantity: 1,
    price: 10,
    vat: 0,
    discount: 0,
    currency: validation_1.ErpCurrencies.GBP,
};
exports.LINE_ITEM_VALUES_INVALID = {
    variant_id: '',
    sku: '',
    title: null,
    quantity: -10,
    price: -10,
    vat: -1,
    discount: -1,
    currency: '',
};
exports.LINE_ITEM_VALUES = {
    valid: exports.LINE_ITEM_VALUES_VALID,
    invalid: exports.LINE_ITEM_VALUES_INVALID,
};
exports.LINE_ITEMS_VALID = {
    DEFAULT: exports.LINE_ITEM_VALUES.valid,
    ALTERNATIVE: exports.LINE_ITEM_VALUES_VALID2,
    DONATION: exports.LINE_ITEM_VALUES_VALID3,
    FREE_ITEM: utils_1.override(exports.LINE_ITEM_VALUES.valid, { price: 0 }),
};
exports.LINE_ITEMS_INVALID = {
    DEFAULT: exports.LINE_ITEM_VALUES.invalid,
    INVALID_VARIANT_ID: utils_1.override(exports.LINE_ITEM_VALUES.valid, { variant_id: exports.LINE_ITEM_VALUES.invalid.variant_id }),
    INVALID_SKU: utils_1.override(exports.LINE_ITEM_VALUES.valid, { sku: exports.LINE_ITEM_VALUES.invalid.sku }),
    INVALID_TITLE: utils_1.override(exports.LINE_ITEM_VALUES.valid, { title: exports.LINE_ITEM_VALUES.invalid.title }),
    INVALID_QUANTITY: utils_1.override(exports.LINE_ITEM_VALUES.valid, { quantity: exports.LINE_ITEM_VALUES.invalid.quantity }),
    INVALID_PRICE: utils_1.override(exports.LINE_ITEM_VALUES.valid, { price: exports.LINE_ITEM_VALUES.invalid.price }),
    INVALID_VAT: utils_1.override(exports.LINE_ITEM_VALUES.valid, { vat: exports.LINE_ITEM_VALUES.invalid.vat }),
    INVALID_DISCOUNT: utils_1.override(exports.LINE_ITEM_VALUES.valid, { discount: exports.LINE_ITEM_VALUES.invalid.discount }),
    INVALID_CURRENCY: utils_1.override(exports.LINE_ITEM_VALUES.valid, { currency: exports.LINE_ITEM_VALUES.invalid.currency }),
    MISSING_VARIANT_ID: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['variant_id']),
    MISSING_SKU: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['sku']),
    MISSING_TITLE: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['title']),
    MISSING_QUANTITY: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['quantity']),
    MISSING_PRICE: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['price']),
    MISSING_VAT: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['vat']),
    MISSING_DISCOUNT: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['discount']),
    MISSING_CURRENCY: utils_1.omit(exports.LINE_ITEM_VALUES.valid, ['currency']),
};
exports.LINE_ITEMS = {
    invalid: exports.LINE_ITEMS_INVALID,
    valid: exports.LINE_ITEMS_VALID,
};
/**
 * Generates a random Shopify Order Line Item.
 *
 * @param overrides
 */
var lineItemGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ variant_id: utils_1.getString(14, { uppercase: false, lowercase: false }), sku: utils_1.getString(10), title: utils_1.getString(40), quantity: utils_1.getInteger(1, 10), price: utils_1.getNumber(0, 100, { decimals: 2 }), vat: 0, discount: 0, currency: validation_1.ErpCurrencies.GBP }, overrides));
};
exports.lineItemGenerator = lineItemGenerator;
//# sourceMappingURL=ShopifyOrderLineItem.mock.js.map