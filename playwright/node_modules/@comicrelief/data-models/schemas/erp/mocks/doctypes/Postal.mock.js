"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPostalDocType = exports.createPostal = exports.POSTALS = exports.POSTALS_INVALID = exports.POSTALS_VALID = exports.POSTAL_VALUES = exports.POSTAL_VALUES_INVALID = exports.DOCUMENTS = exports.DOCUMENTS_INVALID = exports.DOCUMENTS_VALID = exports.DOCUMENT_VALUES = exports.DOCUMENT_INVALID = exports.DOCUMENT_VALID = exports.POSTAL_VALUES_VALID = void 0;
var utils_1 = require("../../../../utils");
var common_1 = require("../../models/common");
exports.POSTAL_VALUES_VALID = {
    name: 'postal-1',
    address_id: 12345,
    address1: '1st floor, 89 Albert Embankment',
    address2: 'First Floor',
    address3: 'Comic Relief',
    postcode: 'SE1 7TP',
    town: 'London',
    country: 'UK',
    supporter_uuid: '1967e882-3197-4e6f-8d55-ed4761e2af5b',
    identity_hash: '',
};
exports.DOCUMENT_VALID = {
    name: exports.POSTAL_VALUES_VALID.name,
    type: '',
    address_id: 12345,
    line_1: exports.POSTAL_VALUES_VALID.address1,
    line_2: exports.POSTAL_VALUES_VALID.address2,
    line_3: exports.POSTAL_VALUES_VALID.address3,
    post_code: exports.POSTAL_VALUES_VALID.postcode,
    town: exports.POSTAL_VALUES_VALID.town,
    country: exports.POSTAL_VALUES_VALID.country,
    parent: exports.POSTAL_VALUES_VALID.supporter_uuid,
    parenttype: common_1.ErpResources.SUPPORTER,
    parentfield: 'postal',
};
exports.DOCUMENT_INVALID = {
    name: null,
    type: null,
    address_id: true,
    line_1: null,
    line_2: null,
    line_3: null,
    post_code: null,
    town: null,
    country: null,
    parent: null,
    parenttype: 'not-supporter',
    parentfield: 'not-postal',
};
exports.DOCUMENT_VALUES = {
    valid: exports.DOCUMENT_VALID,
    invalid: exports.DOCUMENT_INVALID,
};
exports.DOCUMENTS_VALID = {
    DEFAULT: exports.DOCUMENT_VALID,
};
exports.DOCUMENTS_INVALID = {
    DEFAULT: exports.DOCUMENT_INVALID,
};
exports.DOCUMENTS = {
    valid: exports.DOCUMENTS_VALID,
    invalid: exports.DOCUMENTS_INVALID,
};
exports.POSTAL_VALUES_INVALID = {
    name: null,
    address_id: true,
    address1: null,
    address2: null,
    address3: null,
    postcode: null,
    town: null,
    country: null,
    supporter_uuid: NaN,
    identity_hash: null,
};
exports.POSTAL_VALUES = {
    valid: exports.POSTAL_VALUES_VALID,
    invalid: exports.POSTAL_VALUES_INVALID,
};
exports.POSTALS_VALID = {
    DEFAULT: exports.POSTAL_VALUES.valid,
    ADDRESS_ID_NULL: utils_1.override(exports.POSTAL_VALUES.valid, { address_id: null }),
    ADDRESS_2_3_EMPTY: utils_1.override(exports.POSTAL_VALUES.valid, { address2: '', address3: '' }),
    ADDRESS_3_EMPTY: utils_1.override(exports.POSTAL_VALUES.valid, { address3: '' }),
    MISSING_NAME: utils_1.omit(exports.POSTAL_VALUES.valid, ['name']),
    MISSING_ADDRESS_ID: utils_1.omit(exports.POSTAL_VALUES.valid, ['address_id']),
    MISSING_ADDRESS_2_3: utils_1.omit(exports.POSTAL_VALUES.valid, ['address2', 'address3']),
    MISSING_ADDRESS_3: utils_1.omit(exports.POSTAL_VALUES.valid, ['address3']),
    MISSING_IDENTITY_HASH: utils_1.omit(exports.POSTAL_VALUES.valid, ['identity_hash']),
};
exports.POSTALS_INVALID = {
    DEFAULT: exports.POSTAL_VALUES.invalid,
    INVALID_ADDRESS_ID: utils_1.override(exports.POSTAL_VALUES.valid, { address_id: exports.POSTAL_VALUES.invalid.address_id }),
    INVALID_ADDRESS_1: utils_1.override(exports.POSTAL_VALUES.valid, { address1: exports.POSTAL_VALUES.invalid.address1 }),
    INVALID_POSTCODE: utils_1.override(exports.POSTAL_VALUES.valid, { postcode: exports.POSTAL_VALUES.invalid.postcode }),
    INVALID_TOWN: utils_1.override(exports.POSTAL_VALUES.valid, { town: exports.POSTAL_VALUES.invalid.town }),
    INVALID_COUNTRY: utils_1.override(exports.POSTAL_VALUES.valid, { country: exports.POSTAL_VALUES.invalid.country }),
    INVALID_SUPPORTER_UUID: utils_1.override(exports.POSTAL_VALUES.valid, { supporter_uuid: exports.POSTAL_VALUES.invalid.supporter_uuid }),
    MISSING_ADDRESS_1: utils_1.omit(exports.POSTAL_VALUES.valid, ['address1']),
    MISSING_POSTCODE: utils_1.omit(exports.POSTAL_VALUES.valid, ['postcode']),
    MISSING_TOWN: utils_1.omit(exports.POSTAL_VALUES.valid, ['town']),
    MISSING_COUNTRY: utils_1.omit(exports.POSTAL_VALUES.valid, ['country']),
    MISSING_SUPPORTER_UUID: utils_1.omit(exports.POSTAL_VALUES.valid, ['supporter_uuid']),
    SUPPORTER_UUID_NULL: utils_1.override(exports.POSTAL_VALUES.valid, { supporter_uuid: null }),
};
exports.POSTALS = {
    invalid: exports.POSTALS_INVALID,
    valid: exports.POSTALS_VALID,
};
/**
 * Generates a random Postal.
 *
 * @param overrides
 */
var createPostal = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ name: utils_1.getString(10), address_id: utils_1.getInteger(1, 1000), address1: utils_1.getString(10), address2: utils_1.getString(10), address3: utils_1.getString(10), postcode: utils_1.getString(6), town: utils_1.getString(10), country: utils_1.getString(10), supporter_uuid: utils_1.getUuid(), identity_hash: '' }, overrides));
};
exports.createPostal = createPostal;
/**
 * Generates a random PostalDocType
 *
 * @param overrides
 */
var createPostalDocType = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ name: utils_1.getString(10), type: '', address_id: utils_1.getInteger(1, 1000), line_1: utils_1.getString(10), line_2: utils_1.getString(10), line_3: utils_1.getString(10), post_code: utils_1.getString(6), town: utils_1.getString(10), country: utils_1.getString(10) }, overrides));
};
exports.createPostalDocType = createPostalDocType;
//# sourceMappingURL=Postal.mock.js.map