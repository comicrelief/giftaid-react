"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.justGivingPageGenerator = exports.JUST_GIVING_PAGE_MOCKS = exports.JUST_GIVING_PAGE_INVALID = exports.JUST_GIVING_PAGE_VALID = exports.JUST_GIVING_PAGE_VALUES = exports.JUST_GIVING_PAGE_VALUES_INVALID = exports.JUST_GIVING_PAGE_VALUES_VALID = void 0;
var utils_1 = require("../../../../utils");
var JustGivingPage_1 = require("../../models/doctypes/JustGivingPage");
exports.JUST_GIVING_PAGE_VALUES_VALID = {
    supporter: 'af314e01-e1c2-4ffd-97bc-b9308a4a8408',
    id: '80403bd7-513d-4ec9-91b0-0abc18ebb699',
    justgiving_id: '12345',
    url: 'https://www.justgiving.com/fundraising/rnd21',
    title: 'title',
    target: '1000',
    grand_total_raised_plus_gift_aid: '100',
    grand_total_raised_excluding_gift_aid: '100',
    total_estimated_gift_aid: '100',
    total_raised_percentage_of_fundraising_target: '100',
    total_raised_online: '100',
    total_raised_offline: '100',
    total_raised_sms: '100',
    event_name: 'Event',
    event_id: 'string-id',
    charity: 'CR',
    marketing_email: JustGivingPage_1.ConsentType.YES,
    marketing_postal: JustGivingPage_1.ConsentType.NO,
    marketing_phone: JustGivingPage_1.ConsentType.UNANSWERED,
    marketing_sms: JustGivingPage_1.ConsentType.UNANSWERED,
};
exports.JUST_GIVING_PAGE_VALUES_INVALID = {
    supporter: 'not-a-uuid',
    id: 'not-a-uuid',
    justgiving_id: null,
    url: 'not-a-url',
    title: false,
    target: { key: 'not-a-string' },
    grand_total_raised_plus_gift_aid: Number.NaN,
    grand_total_raised_excluding_gift_aid: Number.NaN,
    total_estimated_gift_aid: Number.NaN,
    total_raised_percentage_of_fundraising_target: Number.NaN,
    total_raised_online: Number.NaN,
    total_raised_offline: Number.NaN,
    total_raised_sms: Number.NaN,
    event_name: { key: 'not-a-string' },
    event_id: { key: 'not-a-string' },
    charity: { key: 'not-a-string' },
    marketing_email: { key: 'not-a-string' },
    marketing_postal: false,
    marketing_phone: Number.NaN,
    marketing_sms: true,
};
exports.JUST_GIVING_PAGE_VALUES = {
    valid: exports.JUST_GIVING_PAGE_VALUES_VALID,
    invalid: exports.JUST_GIVING_PAGE_VALUES_INVALID,
};
exports.JUST_GIVING_PAGE_VALID = {
    DEFAULT: exports.JUST_GIVING_PAGE_VALUES.valid,
    NUMERIC_ID: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { justgiving_id: 12345 }),
    NUMERIC_TARGET: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { target: 100 }),
    MISSING_TITLE: utils_1.omit(exports.JUST_GIVING_PAGE_VALUES.valid, ['title']),
    MISSING_TARGET: utils_1.omit(exports.JUST_GIVING_PAGE_VALUES.valid, ['target']),
    EMAIL_YES: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_email: JustGivingPage_1.ConsentType.YES }),
    EMAIL_NO: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_email: JustGivingPage_1.ConsentType.NO }),
    EMAIL_UNANSWERED: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_email: JustGivingPage_1.ConsentType.UNANSWERED }),
    POSTAL_YES: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_postal: JustGivingPage_1.ConsentType.YES }),
    POSTAL_NO: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_postal: JustGivingPage_1.ConsentType.NO }),
    POSTAL_UNANSWERED: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_postal: JustGivingPage_1.ConsentType.UNANSWERED }),
    SMS_YES: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_sms: JustGivingPage_1.ConsentType.YES }),
    SMS_NO: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_sms: JustGivingPage_1.ConsentType.NO }),
    SMS_UNANSWERED: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_sms: JustGivingPage_1.ConsentType.UNANSWERED }),
};
exports.JUST_GIVING_PAGE_INVALID = {
    DEFAULT: exports.JUST_GIVING_PAGE_VALUES.invalid,
    MISSING_JUSTGIVING_ID: utils_1.omit(exports.JUST_GIVING_PAGE_VALUES.valid, ['justgiving_id']),
    MISSING_URL: utils_1.omit(exports.JUST_GIVING_PAGE_VALUES.valid, ['url']),
    INVALID_JUSTGIVING_ID: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { justgiving_id: exports.JUST_GIVING_PAGE_VALUES.invalid.justgiving_id }),
    INVALID_URL: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { url: exports.JUST_GIVING_PAGE_VALUES.invalid.url }),
    INVALID_TITLE: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { title: exports.JUST_GIVING_PAGE_VALUES.invalid.title }),
    INVALID_EMAIL: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_email: exports.JUST_GIVING_PAGE_VALUES.invalid.marketing_email }),
    INVALID_POSTAL: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_postal: exports.JUST_GIVING_PAGE_VALUES.invalid.marketing_postal }),
    INVALID_PHONE: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_phone: exports.JUST_GIVING_PAGE_VALUES.invalid.marketing_phone }),
    INVALID_SMS: utils_1.override(exports.JUST_GIVING_PAGE_VALUES.valid, { marketing_sms: exports.JUST_GIVING_PAGE_VALUES.invalid.marketing_sms }),
};
exports.JUST_GIVING_PAGE_MOCKS = {
    valid: exports.JUST_GIVING_PAGE_VALID,
    invalid: exports.JUST_GIVING_PAGE_INVALID,
};
/**
 * Creates a random JustGivingPage
 *
 * @param overrides
 */
var justGivingPageGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ supporter: utils_1.getUuid(), id: utils_1.getUuid(), justgiving_id: utils_1.getInteger(1000, 10000).toString(), url: utils_1.getUrl(), title: utils_1.getString(), target: utils_1.getInteger(100, 1000).toString(), grand_total_raised_plus_gift_aid: utils_1.getInteger(100, 1000).toString(), grand_total_raised_excluding_gift_aid: utils_1.getInteger(100, 1000).toString(), total_estimated_gift_aid: utils_1.getInteger(100, 1000).toString(), total_raised_percentage_of_fundraising_target: utils_1.getInteger(100, 1000).toString(), total_raised_online: utils_1.getInteger(100, 1000).toString(), total_raised_offline: utils_1.getInteger(100, 1000).toString(), total_raised_sms: utils_1.getInteger(100, 1000).toString(), event_name: utils_1.getString(), event_id: utils_1.getString(), charity: utils_1.getString(), marketing_email: utils_1.getRandomElement(JustGivingPage_1.ConsentType), marketing_postal: utils_1.getRandomElement(JustGivingPage_1.ConsentType), marketing_phone: utils_1.getRandomElement(JustGivingPage_1.ConsentType), marketing_sms: utils_1.getRandomElement(JustGivingPage_1.ConsentType) }, overrides));
};
exports.justGivingPageGenerator = justGivingPageGenerator;
//# sourceMappingURL=JustGivingPage.mock.js.map