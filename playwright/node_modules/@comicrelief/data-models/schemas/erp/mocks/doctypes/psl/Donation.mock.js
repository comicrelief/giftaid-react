"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.donationGenerator = exports.DONATIONS = exports.DONATION_INVALID = exports.DONATION_VALID = exports.DONATION_VALUES = exports.DONATION_VALUES_INVALID = exports.DONATION_VALUES_VALID = void 0;
var utils_1 = require("../../../../../utils");
var validation_1 = require("../../../../../validation");
var Transaction_mock_1 = require("../../../../payments/mocks/Transaction.mock");
var Donation_1 = require("../../../models/doctypes/psl/Donation");
exports.DONATION_VALUES_VALID = {
    id: Transaction_mock_1.TRANSACTIONS.valid.DEFAULT.id,
    type: Donation_1.DonationType.DONATION,
    method: Donation_1.DonationMethod.ONLINE,
    amount: 10,
    status: Donation_1.DonationStatus.COMPLETE,
    transaction_date: '2021-05-21T13:45:53.927Z',
    fund: null,
    project: null,
    activity: null,
    provider: Donation_1.DonationProvider.STRIPE,
    account_identifier: null,
    provider_reference: null,
    supporter: 'a527b493-7d23-4ab4-ae22-a1cec3987625',
    subscription: null,
    giftaid_claim: null,
    cart_id: null,
    client: 'example',
    sms_mobile_number: null,
    sms_keyword: null,
    sms_short_code: null,
    justgiving_page: '2342423',
    is_anonymous: validation_1.NumericBool.NO,
};
exports.DONATION_VALUES_INVALID = {
    id: 'not-a-uuid',
    type: 'not-a-donation-type',
    method: 'not-a-donation-method',
    amount: 'not-a-number',
    status: 'not-a-transaction-status',
    transaction_date: 'not-a-datetime',
    fund: null,
    project: null,
    activity: null,
    provider: 'not-a-provider',
    account_identifier: null,
    provider_reference: null,
    supporter: 'not-a-uuid',
    subscription: null,
    giftaid_claim: null,
    cart_id: null,
    client: 7,
    sms_mobile_number: 1,
    sms_keyword: 1,
    sms_short_code: 1,
    justgiving_page: 88,
    is_anonymous: { key: 'not-a-numeric-bool' },
};
exports.DONATION_VALUES = {
    valid: exports.DONATION_VALUES_VALID,
    invalid: exports.DONATION_VALUES_INVALID,
};
exports.DONATION_VALID = {
    DEFAULT: exports.DONATION_VALUES.valid,
    MISSING_CLIENT: utils_1.omit(exports.DONATION_VALUES.valid, ['client']),
    MISSING_SMS_MOBILE_NUMBER: utils_1.omit(exports.DONATION_VALUES.valid, ['sms_mobile_number']),
    MISSING_SMS_KEYWORD: utils_1.omit(exports.DONATION_VALUES.valid, ['sms_keyword']),
    MISSING_SMS_SHORT_CODE: utils_1.omit(exports.DONATION_VALUES.valid, ['sms_short_code']),
    NULL_CLIENT: utils_1.override(exports.DONATION_VALUES.valid, { client: null }),
    NULL_SMS_MOBILE_NUMBER: utils_1.override(exports.DONATION_VALUES.valid, { sms_mobile_number: null }),
    NULL_SMS_KEYWORD: utils_1.override(exports.DONATION_VALUES.valid, { sms_keyword: null }),
    NULL_SMS_SHORT_CODE: utils_1.override(exports.DONATION_VALUES.valid, { sms_short_code: null }),
    MISSING_JUSTGIVING_PAGE: utils_1.omit(exports.DONATION_VALUES.valid, ['justgiving_page']),
    MISSING_IS_ANONYMOUS: utils_1.omit(exports.DONATION_VALUES.valid, ['is_anonymous']),
    NULL_JUSTGIVING_PAGE: utils_1.override(exports.DONATION_VALUES.valid, { justgiving_page: null }),
};
exports.DONATION_INVALID = {
    DEFAULT: exports.DONATION_VALUES.invalid,
    EMPTY_SMS_MOBILE_NUMBER: utils_1.override(exports.DONATION_VALUES.valid, { sms_mobile_number: '' }),
    EMPTY_SMS_KEYWORD: utils_1.override(exports.DONATION_VALUES.valid, { sms_keyword: '' }),
    EMPTY_SMS_SHORT_CODE: utils_1.override(exports.DONATION_VALUES.valid, { sms_short_code: '' }),
    INVALID_TRANSACTION_DATE: utils_1.override(exports.DONATION_VALUES.valid, { transaction_date: exports.DONATION_VALUES.invalid.transaction_date }),
    NULL_TRANSACTION_DATE: utils_1.override(exports.DONATION_VALUES.valid, { transaction_date: null }),
    MISSING_TRANSACTION_DATE: utils_1.omit(exports.DONATION_VALUES.valid, ['transaction_date']),
};
exports.DONATIONS = {
    invalid: exports.DONATION_INVALID,
    valid: exports.DONATION_VALID,
};
/**
 * Generates a random Donation.
 *
 * @param overrides
 */
var donationGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ id: utils_1.getUuid(), type: utils_1.getRandomElement(Donation_1.DonationType), method: utils_1.getRandomElement(Donation_1.DonationMethod), amount: utils_1.getInteger(1, 100), status: utils_1.getRandomElement(Donation_1.DonationStatus), transaction_date: utils_1.getTimestamp(), fund: null, project: null, activity: null, provider: utils_1.getRandomElement(Donation_1.DonationProvider), account_identifier: null, provider_reference: null, supporter: utils_1.getUuid(), subscription: null, giftaid_claim: null, cart_id: null, client: null, sms_mobile_number: null, sms_keyword: null, sms_short_code: null, justgiving_page: null, is_anonymous: utils_1.getRandomElement(validation_1.NumericBoolValues) }, overrides));
};
exports.donationGenerator = donationGenerator;
//# sourceMappingURL=Donation.mock.js.map