import { FundraisingGroups } from '../../../../enums';
import { FundraisingSegmentProps } from '../../models';
export declare const FUNDRAISING_SEGMENT_VALUES_VALID: {
    code: string;
    label: string;
    fundraising_group: FundraisingGroups;
};
export declare const FUNDRAISING_SEGMENT_VALUES_INVALID: {
    code: string;
    label: number;
    fundraising_group: string;
};
export declare const FUNDRAISING_SEGMENT_VALUES: {
    valid: {
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    };
    invalid: {
        code: string;
        label: number;
        fundraising_group: string;
    };
};
export declare const FUNDRAISING_SEGMENT_VALID: {
    DEFAULT: {
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    };
};
export declare const FUNDRAISING_SEGMENT_INVALID: {
    DEFAULT: {
        code: string;
        label: number;
        fundraising_group: string;
    };
    MISSING_CODE: Omit<{
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    }, "code">;
    MISSING_LABEL: Omit<{
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    }, "label">;
    MISSING_FUNDRAISING_GROUP: Omit<{
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    }, "fundraising_group">;
    INVALID_CODE: {
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    } & {
        code: string;
    };
    INVALID_LABEL: {
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    } & {
        label: number;
    };
    INVALID_FUNDRAISING_GROUP: {
        code: string;
        label: string;
        fundraising_group: FundraisingGroups;
    } & {
        fundraising_group: string;
    };
};
export declare const FUNDRAISING_SEGMENT_MOCKS: {
    valid: {
        DEFAULT: {
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        };
    };
    invalid: {
        DEFAULT: {
            code: string;
            label: number;
            fundraising_group: string;
        };
        MISSING_CODE: Omit<{
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        }, "code">;
        MISSING_LABEL: Omit<{
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        }, "label">;
        MISSING_FUNDRAISING_GROUP: Omit<{
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        }, "fundraising_group">;
        INVALID_CODE: {
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        } & {
            code: string;
        };
        INVALID_LABEL: {
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        } & {
            label: number;
        };
        INVALID_FUNDRAISING_GROUP: {
            code: string;
            label: string;
            fundraising_group: FundraisingGroups;
        } & {
            fundraising_group: string;
        };
    };
};
/**
 * Creates a random FundraisingSegment
 *
 * @param overrides
 */
export declare const fundraisingSegmentGenerator: (overrides?: Partial<FundraisingSegmentProps>) => Required<FundraisingSegmentProps>;
//# sourceMappingURL=FundraisingSegment.mock.d.ts.map