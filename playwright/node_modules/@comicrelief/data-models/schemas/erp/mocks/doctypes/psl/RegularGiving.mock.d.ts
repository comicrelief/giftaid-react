import { RequiredKeys } from '../../../../../validation';
import { RegularGivingProps } from '../../../models';
export declare const REGULAR_GIVING_VALUES_VALID: Required<RegularGivingProps>;
export declare const REGULAR_GIVING_VALUES_INVALID: RequiredKeys<RegularGivingProps>;
export declare const REGULAR_GIVING_VALUES: {
    valid: Required<RegularGivingProps>;
    invalid: RequiredKeys<RegularGivingProps>;
};
export declare const REGULAR_GIVING_VALID: {
    DEFAULT: Required<RegularGivingProps>;
    MISSING_PROVIDER_REFERENCE: Omit<Required<RegularGivingProps>, "provider_reference">;
    MISSING_CART_ID: Omit<Required<RegularGivingProps>, "cart_id">;
    NULL_GIFTAID: never;
    NULL_PROVIDER_REFERENCE: Required<RegularGivingProps> & {
        provider_reference: null;
    };
    NULL_CART_ID: Required<RegularGivingProps> & {
        cart_id: null;
    };
};
export declare const REGULAR_GIVING_INVALID: {
    DEFAULT: RequiredKeys<RegularGivingProps>;
    INVALID_ID: Required<RegularGivingProps> & {
        id: unknown;
    };
    INVALID_SUPPORTER: Required<RegularGivingProps> & {
        supporter: unknown;
    };
    INVALID_STATUS: Required<RegularGivingProps> & {
        status: unknown;
    };
    INVALID_AMOUNT: Required<RegularGivingProps> & {
        amount: unknown;
    };
    INVALID_GIFTAID: Required<RegularGivingProps> & {
        giftaid: unknown;
    };
    INVALID_PROVIDER: Required<RegularGivingProps> & {
        provider: unknown;
    };
    MISSING_ID: Omit<Required<RegularGivingProps>, "id">;
    MISSING_SUPPORTER: Omit<Required<RegularGivingProps>, "supporter">;
    MISSING_STATUS: Omit<Required<RegularGivingProps>, "status">;
    MISSING_AMOUNT: Omit<Required<RegularGivingProps>, "amount">;
    MISSING_BILLING_DAY: Omit<Required<RegularGivingProps>, "billing_day">;
    MISSING_GIFTAID: Omit<Required<RegularGivingProps>, "giftaid">;
    MISSING_PROVIDER: Omit<Required<RegularGivingProps>, "provider">;
    NULL_BILLING_DAY: never;
};
export declare const REGULAR_GIVINGS: {
    invalid: {
        DEFAULT: RequiredKeys<RegularGivingProps>;
        INVALID_ID: Required<RegularGivingProps> & {
            id: unknown;
        };
        INVALID_SUPPORTER: Required<RegularGivingProps> & {
            supporter: unknown;
        };
        INVALID_STATUS: Required<RegularGivingProps> & {
            status: unknown;
        };
        INVALID_AMOUNT: Required<RegularGivingProps> & {
            amount: unknown;
        };
        INVALID_GIFTAID: Required<RegularGivingProps> & {
            giftaid: unknown;
        };
        INVALID_PROVIDER: Required<RegularGivingProps> & {
            provider: unknown;
        };
        MISSING_ID: Omit<Required<RegularGivingProps>, "id">;
        MISSING_SUPPORTER: Omit<Required<RegularGivingProps>, "supporter">;
        MISSING_STATUS: Omit<Required<RegularGivingProps>, "status">;
        MISSING_AMOUNT: Omit<Required<RegularGivingProps>, "amount">;
        MISSING_BILLING_DAY: Omit<Required<RegularGivingProps>, "billing_day">;
        MISSING_GIFTAID: Omit<Required<RegularGivingProps>, "giftaid">;
        MISSING_PROVIDER: Omit<Required<RegularGivingProps>, "provider">;
        NULL_BILLING_DAY: never;
    };
    valid: {
        DEFAULT: Required<RegularGivingProps>;
        MISSING_PROVIDER_REFERENCE: Omit<Required<RegularGivingProps>, "provider_reference">;
        MISSING_CART_ID: Omit<Required<RegularGivingProps>, "cart_id">;
        NULL_GIFTAID: never;
        NULL_PROVIDER_REFERENCE: Required<RegularGivingProps> & {
            provider_reference: null;
        };
        NULL_CART_ID: Required<RegularGivingProps> & {
            cart_id: null;
        };
    };
};
/**
 * Generates a random Regular Giving document.
 *
 * @param overrides
 */
export declare const regularGivingGenerator: (overrides?: Partial<RegularGivingProps>) => RegularGivingProps;
//# sourceMappingURL=RegularGiving.mock.d.ts.map