"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.supporterAddressGenerator = exports.SUPPORTER_ADDRESS_MOCKS = exports.SUPPORTER_ADDRESS_INVALID = exports.SUPPORTER_ADDRESS_VALID = exports.SUPPORTER_ADDRESS_VALUES = exports.SUPPORTER_ADDRESS_VALUES_INVALID = exports.SUPPORTER_ADDRESS_VALUES_VALID = void 0;
var enums_1 = require("../../../../enums");
var utils_1 = require("../../../../utils");
exports.SUPPORTER_ADDRESS_VALUES_VALID = {
    uuid: '1a3a0656-ce82-431a-bb4f-e4deed1eceff',
    supporter_uuid: '91c9e767-64a4-43b7-a813-faf694f1aeef',
    postal_id: '0de17d6c-e1e9-4316-b154-0611121b5ea2',
    start: '2020-03-12T12:37:58.147Z',
    end: '2021-03-12T12:37:58.147Z',
    source: enums_1.Sources.FUNDRAISER_SIGNUP,
    source_id: 'bc77a919-3d1e-49ac-a1c1-9747509dc2e7',
};
exports.SUPPORTER_ADDRESS_VALUES_INVALID = {
    uuid: 'not-a-uuid',
    supporter_uuid: 'not-a-uuid',
    postal_id: null,
    start: 'not-a-datetime',
    end: 'not-a-datetime',
    source: 'invalid_source',
    source_id: { key: 'not-a-string' },
};
exports.SUPPORTER_ADDRESS_VALUES = {
    valid: exports.SUPPORTER_ADDRESS_VALUES_VALID,
    invalid: exports.SUPPORTER_ADDRESS_VALUES_INVALID,
};
var _a = utils_1.makeDefaultMocks(exports.SUPPORTER_ADDRESS_VALUES.valid, exports.SUPPORTER_ADDRESS_VALUES.invalid, [], [
    'uuid',
    'start',
    'end',
    'source_id',
]), valid = _a.valid, invalid = _a.invalid;
exports.SUPPORTER_ADDRESS_VALID = __assign({}, valid);
exports.SUPPORTER_ADDRESS_INVALID = __assign({}, invalid);
exports.SUPPORTER_ADDRESS_MOCKS = {
    valid: exports.SUPPORTER_ADDRESS_VALID,
    invalid: exports.SUPPORTER_ADDRESS_INVALID,
};
/**
 * Creates a random SupporterAddress
 *
 * @param overrides
 */
var supporterAddressGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ uuid: utils_1.getUuid(), supporter_uuid: utils_1.getUuid(), postal_id: utils_1.getString(10), start: utils_1.getRandomElement([utils_1.getTimestamp(), '']), end: utils_1.getRandomElement([utils_1.getTimestamp(), '']), source: utils_1.getRandomElement(Object.values(enums_1.Sources)), source_id: utils_1.getRandomElement([utils_1.getUuid(), '']) }, overrides));
};
exports.supporterAddressGenerator = supporterAddressGenerator;
//# sourceMappingURL=SupporterAddress.mock.js.map