"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.productVariantGenerator = exports.PRODUCT_VARIANTS = exports.PRODUCT_VARIANTS_INVALID = exports.PRODUCT_VARIANTS_VALID = exports.PRODUCT_VARIANT_VALUES = exports.PRODUCT_VARIANT_VALUES_INVALID = exports.PRODUCT_VARIANT_VALUES_VALID2 = exports.PRODUCT_VARIANT_VALUES_VALID = void 0;
var utils_1 = require("../../../../../utils");
var validation_1 = require("../../../../../validation");
exports.PRODUCT_VARIANT_VALUES_VALID = {
    shopify_id: '37642339877018',
    sku: '1003-F',
    title: 'Box of Red Noses (Schools Deposit) - Full Price (£60)',
    price: 60,
    currency: validation_1.ErpCurrencies.GBP,
    available: validation_1.NumericBool.YES,
    option1: 'Full price (£60)',
    option2: null,
    option3: null,
};
exports.PRODUCT_VARIANT_VALUES_VALID2 = {
    shopify_id: '33291333894276',
    sku: 'CRA/M/03/CM',
    title: "'Love Wins' Adult Hoodie - size M",
    price: 25,
    currency: validation_1.ErpCurrencies.GBP,
    available: validation_1.NumericBool.NO,
    option1: 'M',
    option2: null,
    option3: null,
};
exports.PRODUCT_VARIANT_VALUES_INVALID = {
    shopify_id: null,
    sku: '',
    title: null,
    price: -10,
    price_currency: '',
    available: 'YES',
    option1: '',
    option2: '',
    option3: '',
};
exports.PRODUCT_VARIANT_VALUES = {
    valid: exports.PRODUCT_VARIANT_VALUES_VALID,
    invalid: exports.PRODUCT_VARIANT_VALUES_INVALID,
};
exports.PRODUCT_VARIANTS_VALID = {
    DEFAULT: exports.PRODUCT_VARIANT_VALUES.valid,
    ALTERNATIVE: exports.PRODUCT_VARIANT_VALUES_VALID2,
    NULL_SKU: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { sku: null }),
    ONE_OPTION: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option1: 'X', option2: null, option3: null }),
    TWO_OPTIONS: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option1: 'X', option2: 'Y', option3: null }),
    THREE_OPTIONS: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option1: 'X', option2: 'Y', option3: 'Z' }),
};
exports.PRODUCT_VARIANTS_INVALID = {
    DEFAULT: exports.PRODUCT_VARIANT_VALUES.invalid,
    INVALID_SHOPIFY_ID: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { shopify_id: exports.PRODUCT_VARIANT_VALUES.invalid.shopify_id }),
    INVALID_SKU: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { sku: exports.PRODUCT_VARIANT_VALUES.invalid.sku }),
    INVALID_TITLE: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { title: exports.PRODUCT_VARIANT_VALUES.invalid.title }),
    INVALID_PRICE: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { price: exports.PRODUCT_VARIANT_VALUES.invalid.price }),
    INVALID_CURRENCY: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { currency: exports.PRODUCT_VARIANT_VALUES.invalid.price_currency }),
    INVALID_AVAILABLE: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { available: exports.PRODUCT_VARIANT_VALUES.invalid.available }),
    INVALID_OPTION1: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option1: exports.PRODUCT_VARIANT_VALUES.invalid.option1 }),
    INVALID_OPTION2: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option2: exports.PRODUCT_VARIANT_VALUES.invalid.option2 }),
    INVALID_OPTION3: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option3: exports.PRODUCT_VARIANT_VALUES.invalid.option3 }),
    NULL_OPTION1: utils_1.override(exports.PRODUCT_VARIANT_VALUES.valid, { option1: null }),
    MISSING_SHOPIFY_ID: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['shopify_id']),
    MISSING_SKU: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['sku']),
    MISSING_TITLE: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['title']),
    MISSING_PRICE: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['price']),
    MISSING_CURRENCY: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['currency']),
    MISSING_AVAILABLE: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['available']),
    MISSING_OPTION1: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['option1']),
    MISSING_OPTION2: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['option2']),
    MISSING_OPTION3: utils_1.omit(exports.PRODUCT_VARIANT_VALUES.valid, ['option3']),
};
exports.PRODUCT_VARIANTS = {
    invalid: exports.PRODUCT_VARIANTS_INVALID,
    valid: exports.PRODUCT_VARIANTS_VALID,
};
/**
 * Generates a random Product Variant.
 *
 * @param overrides
 */
var productVariantGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    var numberOfOptions = utils_1.getInteger(0, 3);
    return __assign({ shopify_id: utils_1.getString(14, { uppercase: false, lowercase: false }), sku: utils_1.getString(8), title: utils_1.getString(40), price: utils_1.getNumber(0, 100), currency: utils_1.getRandomElement(Object.values(validation_1.ErpCurrencies)), available: utils_1.getRandomElement(validation_1.NumericBoolValues), option1: numberOfOptions > 0 ? utils_1.getString(10) : 'Default', option2: numberOfOptions > 1 ? utils_1.getString(10) : null, option3: numberOfOptions > 2 ? utils_1.getString(10) : null }, overrides);
};
exports.productVariantGenerator = productVariantGenerator;
//# sourceMappingURL=ProductVariant.mock.js.map