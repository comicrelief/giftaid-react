import { ErpPayloadTypes } from '../../models/common';
import { ProducerRequestProps } from '../../models/requests/ProducerRequest';
export declare const ACTIONS_MOCKS: {
    PRIZE_PUTS: {
        invalid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_ID: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_TITLE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_PATH: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_CATEGORY_ID: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_START_DATE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_END_DATE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_BUNDLES: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_LIMIT: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_LIMIT_NEGATIVE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_LIMIT_DECIMAL: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_WINNERS: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_COMPLETED_TICKETS_PICK: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_INVALID_TRIGGERED_TICKETS_PICK: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_EMPTY_BUNDLES: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_ID: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_TITLE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_PATH: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_CATEGORY_ID: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_START_DATE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_END_DATE: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_BUNDLES: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_WINNERS: Required<import("../../models").PrizePutProps>;
            DEFAULT: Required<import("../../models").PrizePutProps> & {
                data: {
                    id: null;
                    title: null;
                    category_id: null;
                    path: null;
                    url: string;
                    start_date: null;
                    end_date: null;
                    bundles: ({} | {
                        random: number;
                    } | {
                        tickets: string;
                        price: number;
                    } | {
                        tickets: number;
                        price: string;
                    } | {
                        price: number;
                    } | {
                        tickets: number;
                    } | null | undefined)[];
                    limit: string;
                    winners: string;
                    completed_tickets_pick: string;
                    triggered_tickets_pick: string;
                };
            };
            INVALID_TYPE: Required<import("../../models").PrizePutProps> & {
                type: string;
            };
            INVALID_DATA: never;
            MISSING_TYPE: Omit<Required<import("../../models").PrizePutProps>, "type">;
            MISSING_DATA: Omit<Required<import("../../models").PrizePutProps>, "data">;
        };
        valid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_COMPLETED_TICKETS_PICK_NO: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_COMPLETED_TICKETS_PICK_YES: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_ONE_WINNER: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_THREE_WINNERS: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_LIMITED: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_UNLIMITED: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_TRIGGERED_TICKETS_PICK_NO: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_TRIGGERED_TICKETS_PICK_YES: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_LIMIT: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_COMPLETED_TICKETS_PICK: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_URL: Required<import("../../models").PrizePutProps>;
            OVERRIDE_DATA_WITH_MISSING_TRIGGERED_TICKETS_PICK: Required<import("../../models").PrizePutProps>;
            DEFAULT: Required<import("../../models").PrizePutProps>;
        };
    };
    PAYIN_PUTS: {
        invalid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_ID: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TRANSACTION_ID: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_ADDRESS1: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOWN: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_COUNTRY: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_POSTCODE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_INVALID_AUDIENCE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ID: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TRANSACTION_ID: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ADDRESS1: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOWN: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_COUNTRY: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_POSTCODE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_AUDIENCE: Required<import("../../models").PayinPutProps>;
            DEFAULT: Required<import("../../models").PayinPutProps> & {
                data: {
                    id: unknown;
                    transactionId: unknown;
                    created: unknown;
                    updated: unknown;
                    address1: unknown;
                    address2: unknown;
                    address3: unknown;
                    town: unknown;
                    country: unknown;
                    postcode: unknown;
                    Event: unknown;
                    audience: unknown;
                    WhatYouDid: unknown;
                    permission: unknown;
                    permissionEmail: unknown;
                    permissionPhone: unknown;
                    permissionPost: unknown;
                    permissionSMS: unknown;
                    phone: unknown;
                    mobile: unknown;
                    establishmentId: unknown;
                    jobTitle: unknown;
                    schoolType: unknown;
                    establishment_name: unknown;
                    organisation: unknown;
                    organisationFreetext: unknown;
                    fundraising_activity: unknown;
                    ukActiveMember: unknown;
                    certificate: unknown;
                };
            };
            INVALID_TYPE: Required<import("../../models").PayinPutProps> & {
                type: string;
            };
            INVALID_DATA: never;
            MISSING_TYPE: Omit<Required<import("../../models").PayinPutProps>, "type">;
            MISSING_DATA: Omit<Required<import("../../models").PayinPutProps>, "data">;
        };
        valid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_SCHOOL: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_NO_ORGANISATION: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ADDRESS2: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ADDRESS3: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_EVENT: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PERMISSION: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PERMISSION_EMAIL: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PERMISSION_PHONE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PERMISSION_POST: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PERMISSION_SMS: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PHONE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_MOBILE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ESTABLISHMENT_ID: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_JOB_TITLE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SCHOOL_TYPE: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ESTABLISHMENT_NAME: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ORGANISATION: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ORGANISATION_FREE_TEXT: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_FUNDRAISING_ACTIVITY: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_UK_ACTIVE_MEMBER: Required<import("../../models").PayinPutProps>;
            OVERRIDE_DATA_WITH_MISSING_CERTIFICATE: Required<import("../../models").PayinPutProps>;
            DEFAULT: Required<import("../../models").PayinPutProps>;
        };
    };
    TICKET_PUTS: {
        invalid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_UUID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_PRIZE_ID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_POSTAL: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TRANSACTION: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SUPPORTER_UUID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_IDENTITY_HASH: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_PARENT_UUID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_STATE: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TIMESTAMP: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PRIZE_ID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TRANSACTION: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_IDENTITY_HASH: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_STATE: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SUPPORTER_UUID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_SUPPORTER_UUID_NULL: Required<import("../../models").TicketPutProps>;
            DEFAULT: Required<import("../../models").TicketPutProps> & {
                data: {
                    uuid: string;
                    postal: number;
                    postal_id: number;
                    prize_id: null;
                    transaction_uuid: string;
                    donation_uuid: number;
                    supporter_uuid: string;
                    identity_hash: null;
                    parent_uuid: null;
                    state: string;
                    timestamp: string;
                };
            };
            INVALID_TYPE: Required<import("../../models").TicketPutProps> & {
                type: string;
            };
            INVALID_DATA: never;
            MISSING_TYPE: Omit<Required<import("../../models").TicketPutProps>, "type">;
            MISSING_DATA: Omit<Required<import("../../models").TicketPutProps>, "data">;
        };
        valid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_PENDING: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_VERIFIED: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_WINNER: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_POSTAL: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_UUID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_POSTAL: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_POSTAL_ID: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TIMESTAMP: Required<import("../../models").TicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PARENT_UUID: Required<import("../../models").TicketPutProps>;
            DEFAULT: Required<import("../../models").TicketPutProps>;
        };
    };
    POSTAL_TICKET_PUTS: {
        invalid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_ID: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_PRIZE_ID: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_FIRSTNAME: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_LASTNAME: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_EMAIL: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_MOBILE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_ADDRESS1: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_POSTCODE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOWN: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_COUNTRY: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_STATE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_INVALID_OVER_18: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ID: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PRIZE_ID: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_FIRSTNAME: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_LASTNAME: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_EMAIL_AND_MOBILE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_COUNTRY: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_OVER_18: Required<import("../../models").PostalTicketPutProps>;
            DEFAULT: Required<import("../../models").PostalTicketPutProps> & {
                data: {
                    id: null;
                    prize_id: null;
                    first_name: null;
                    last_name: null;
                    email: string;
                    mobile: string;
                    address1: number;
                    postcode: number;
                    town: number;
                    country: null;
                    over18: string;
                    state: string;
                };
            };
            INVALID_TYPE: Required<import("../../models").PostalTicketPutProps> & {
                type: string;
            };
            INVALID_DATA: never;
            MISSING_TYPE: Omit<Required<import("../../models").PostalTicketPutProps>, "type">;
            MISSING_DATA: Omit<Required<import("../../models").PostalTicketPutProps>, "data">;
        };
        valid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_PENDING: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_PROCESSED: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_REJECTED: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_EMAIL: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_MOBILE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_STATE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ADDRESS1: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_POSTCODE: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOWN: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_OVER_18: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_UNDER_18: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_COUNTRY_UK: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_COUNTRY_UNITED_KINGDOM: Required<import("../../models").PostalTicketPutProps>;
            OVERRIDE_DATA_WITH_COUNTRY_ITALY: Required<import("../../models").PostalTicketPutProps>;
            DEFAULT: Required<import("../../models").PostalTicketPutProps>;
        };
    };
    POSTAL_TICKET_SETSTATES: {
        invalid: {
            DEFAULT: Required<import("../../models").PostalTicketSetStateProps> & {
                data: {
                    id: null;
                    state: string;
                };
            };
            INVALID_TYPE: Required<import("../../models").PostalTicketSetStateProps> & {
                type: string;
            };
            INVALID_DATA: never;
        };
        valid: {
            DEFAULT: Required<import("../../models").PostalTicketSetStateProps>;
            PENDING: Required<import("../../models").PostalTicketSetStateProps> & {
                data: {
                    id: string;
                    state: import("../../models").PostalTicketStates;
                };
            };
            PROCESSED: Required<import("../../models").PostalTicketSetStateProps> & {
                data: {
                    id: string;
                    state: import("../../models").PostalTicketStates;
                };
            };
            REJECTED: Required<import("../../models").PostalTicketSetStateProps> & {
                data: {
                    id: string;
                    state: import("../../models").PostalTicketStates;
                };
            };
        };
    };
    IDENTITY_ADDS: {
        valid: {
            DEFAULT: import("../../models").IdentityAddProps;
            EMAIL_ONLY: import("../../models").IdentityAddProps & {
                mobile: never[];
            };
            MOBILE_ONLY: import("../../models").IdentityAddProps & {
                email: never[];
            };
            EMAIL_AND_MOBILE: import("../../models").IdentityAddProps;
        };
        invalid: {
            DEFAULT: never;
            INVALID_TYPE: import("../../models").IdentityAddProps & {
                type: string;
            };
            INVALID_COGNITO_USER_ID: never;
            INVALID_EMAIL: import("../../models").IdentityAddProps & {
                email: string[];
            };
            INVALID_MOBILE: import("../../models").IdentityAddProps & {
                mobile: string[];
            };
            MISSING_TYPE: Omit<import("../../models").IdentityAddProps, "type">;
            MISSING_COGNITO_USER_ID: Omit<import("../../models").IdentityAddProps, "cognito_user_id">;
            MISSING_EMAIL_AND_MOBILE: Omit<import("../../models").IdentityAddProps, "email" | "mobile">;
        };
    };
    USER_CREATES: {
        valid: {
            DEFAULT: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            };
            EMAIL_ONLY: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            } & {
                mobile: never[];
            };
            MOBILE_ONLY: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            } & {
                email: never[];
            };
            EMAIL_AND_MOBILE: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            };
            MISSING_FIRST_NAME: Omit<{
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }, "first_name">;
            MISSING_LAST_NAME: Omit<{
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }, "last_name">;
        };
        invalid: {
            DEFAULT: never;
            INVALID_TYPE: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            } & {
                type: string;
            };
            INVALID_COGNITO_USER_ID: never;
            INVALID_FIRST_NAME: never;
            INVALID_LAST_NAME: never;
            INVALID_EMAIL: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            } & {
                email: string[];
            };
            INVALID_MOBILE: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            } & {
                mobile: string[];
            };
            MISSING_TYPE: Omit<{
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }, "type">;
            MISSING_COGNITO_USER_ID: Omit<{
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }, "cognito_user_id">;
            MISSING_EMAIL_AND_MOBILE: Omit<{
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }, "email" | "mobile">;
        };
    };
    TRANSACTION_EXECUTES: {
        valid: {
            DEFAULT: import("../../models").TransactionExecuteProps;
            UPPERCASE_PROVIDER: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    provider: string;
                };
            };
            EMPTY_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    supporter_uuid: null;
                };
            };
        };
        invalid: {
            DEFAULT: import("../../models").TransactionExecuteProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").TransactionExecuteProps & {
                type: string;
            };
            INVALID_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    supporter_uuid: string;
                };
            };
            INVALID_AMOUNT: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    amount: number;
                };
            };
            INVALID_CURRENCY: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CLIENT: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_PROVIDER: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CREATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_UPDATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_STATUS: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_ADDRESS1: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_POSTCODE: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_TOWN: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_COUNTRY: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_AMOUNT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CURRENCY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CLIENT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_PROVIDER: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CREATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_UPDATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_STATUS: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_ADDRESS1: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_POSTCODE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_TOWN: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_COUNTRY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "cartId" | "providerReference" | "affiliate">;
            };
        };
    };
    TRANSACTION_EXECUTES_IVR: {
        valid: {
            DEFAULT: import("../../models").TransactionExecuteIvrProps;
            UPPERCASE_PROVIDER: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    provider: string;
                };
            };
        };
        invalid: {
            DEFAULT: import("../../models").TransactionExecuteIvrProps & {
                data: {
                    id: string;
                    supporter_uuid: string;
                    amount: number;
                    currency: null;
                    giftaid: null;
                    campaign: string;
                    client: number;
                    provider: string;
                    providerReference: number;
                    status: string;
                    created: string;
                    address1: number;
                    address2: number;
                    address3: number;
                    postcode: number;
                    town: number;
                    country: number;
                };
            };
            INVALID_TYPE: import("../../models").TransactionExecuteIvrProps & {
                type: string;
            };
            INVALID_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    supporter_uuid: string;
                };
            };
            INVALID_AMOUNT: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    amount: number;
                };
            };
            INVALID_CURRENCY: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CLIENT: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_PROVIDER: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CREATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_STATUS: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_AMOUNT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_CURRENCY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_CLIENT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_PROVIDER: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_CREATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_STATUS: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
            MISSING_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid?: string | null | undefined;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    postcode?: string | null | undefined;
                    town?: string | null | undefined;
                    country?: string | null | undefined;
                    address1?: string | null | undefined;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "method" | "status" | "provider" | "providerReference">;
            };
        };
    };
    TRANSACTION_SMS_PUTS: {
        invalid: {
            DEFAULT: {
                type: any;
                data: any;
            } & {
                data: any;
            };
            INVALID_TYPE: {
                type: any;
                data: any;
            } & {
                type: any;
            };
            INVALID_DATA: {
                type: any;
                data: any;
            } & {
                data: null;
            };
            INVALID_TRANSACTION_ID: {
                type: any;
                data: any;
            };
            INVALID_SUPPORTER_UUID: {
                type: any;
                data: any;
            };
            INVALID_INITIATED_AT: {
                type: any;
                data: any;
            };
            INVALID_STATUS: {
                type: any;
                data: any;
            };
            INVALID_AMOUNT: {
                type: any;
                data: any;
            };
            INVALID_PROVIDER: {
                type: any;
                data: any;
            };
            INVALID_PROVIDER_REFERENCE: {
                type: any;
                data: any;
            };
            INVALID_MOBILE_NUMBER: {
                type: any;
                data: any;
            };
            INVALID_FUND: {
                type: any;
                data: any;
            };
            INVALID_PROJECT: {
                type: any;
                data: any;
            };
            INVALID_ACTIVITY: {
                type: any;
                data: any;
            };
            INVALID_KEYWORD: {
                type: any;
                data: any;
            };
            INVALID_SHORT_CODE: {
                type: any;
                data: any;
            };
            MISSING_TYPE: Omit<{
                type: any;
                data: any;
            }, "type">;
            MISSING_DATA: Omit<{
                type: any;
                data: any;
            }, "data">;
            MISSING_TRANSACTION_ID: {
                type: any;
                data: any;
            };
            MISSING_SUPPORTER_UUID: {
                type: any;
                data: any;
            };
            MISSING_INITIATED_AT: {
                type: any;
                data: any;
            };
            MISSING_STATUS: {
                type: any;
                data: any;
            };
            MISSING_AMOUNT: {
                type: any;
                data: any;
            };
            MISSING_PROVIDER: {
                type: any;
                data: any;
            };
            MISSING_PROVIDER_REFERENCE: {
                type: any;
                data: any;
            };
            MISSING_MOBILE_NUMBER: {
                type: any;
                data: any;
            };
            MISSING_FUND: {
                type: any;
                data: any;
            };
            MISSING_PROJECT: {
                type: any;
                data: any;
            };
            MISSING_ACTIVITY: {
                type: any;
                data: any;
            };
            MISSING_KEYWORD: {
                type: any;
                data: any;
            };
            MISSING_SHORT_CODE: {
                type: any;
                data: any;
            };
        };
        valid: {
            DEFAULT: {
                type: any;
                data: any;
            };
            EMPTY_KEYWORD: {
                type: any;
                data: any;
            };
            NULL_PROVIDER_REFERENCE: {
                type: any;
                data: any;
            };
        };
    };
    SUBSCRIPTION_EXECUTES: {
        valid: {
            DEFAULT: import("../../models").SubscriptionExecuteProps;
            UPPERCASE_PROVIDER: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    provider: string;
                };
            };
            EMPTY_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    supporter_uuid: null;
                };
            };
        };
        invalid: {
            DEFAULT: import("../../models").SubscriptionExecuteProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").SubscriptionExecuteProps & {
                type: string;
            };
            INVALID_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    supporter_uuid: string;
                };
            };
            INVALID_SUBSCRIPTION_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_AMOUNT: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                } & {
                    amount: number;
                };
            };
            INVALID_CURRENCY: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CLIENT: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_PROVIDER: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CREATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_UPDATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_STATUS: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_SUBSCRIPTION_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_AMOUNT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CURRENCY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CLIENT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_PROVIDER: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_CREATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_UPDATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_STATUS: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
            MISSING_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    subscriptionId: string;
                    amount: number;
                    currency: string;
                    client: string;
                    provider: import("../../../payments/models/common").TransactionProvider;
                    created: number;
                    updated: number;
                    status: import("../../../payments/models/common").TransactionStatus;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                    method?: import("../../models/doctypes/psl/Donation").DonationMethod | undefined;
                }, "id" | "amount" | "supporter_uuid" | "created" | "updated" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "method" | "status" | "provider" | "subscriptionId" | "cartId" | "providerReference" | "affiliate">;
            };
        };
    };
    SUBSCRIPTION_UPDATES: {
        valid: {
            DEFAULT: import("../../models").SubscriptionUpdateProps;
            EMPTY_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                } & {
                    supporter_uuid: null;
                };
            };
            NON_EMPTY_CANCELLED: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                } & {
                    cancelled: string;
                };
            };
        };
        invalid: {
            DEFAULT: import("../../models").SubscriptionUpdateProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").SubscriptionUpdateProps & {
                type: string;
            };
            INVALID_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                } & {
                    supporter_uuid: string;
                };
            };
            INVALID_AMOUNT: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                } & {
                    amount: number;
                };
            };
            INVALID_BILLING_DAY_OF_MONTH: {
                type: ErpPayloadTypes;
                data: {
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                } & {
                    billingDayOfMonth: number;
                };
            };
            INVALID_CURRENCY: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CLIENT: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_PROVIDER: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CREATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_UPDATED: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_STATUS: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_ADDRESS1: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_POSTCODE: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_TOWN: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_COUNTRY: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_AMOUNT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_BILLING_DAY_OF_MONTH: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_CURRENCY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_CLIENT: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_PROVIDER: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_CREATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_UPDATED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_STATUS: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_ADDRESS1: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_POSTCODE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_TOWN: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
            MISSING_COUNTRY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    supporter_uuid: string | null;
                    amount: number;
                    billingDayOfMonth: string | number;
                    currency: string;
                    client: string;
                    provider: string;
                    created: number;
                    updated: number;
                    cancelled?: string | null | undefined;
                    status: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                    campaign?: string | null | undefined;
                    transSource?: string | null | undefined;
                    transSourceUrl?: string | null | undefined;
                    transType?: string | null | undefined;
                    cartId?: string | null | undefined;
                    providerReference?: string | null | undefined;
                    affiliate?: string | null | undefined;
                    giftaid?: number | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "amount" | "supporter_uuid" | "created" | "updated" | "address2" | "address3" | "client" | "currency" | "giftaid" | "campaign" | "transSource" | "transSourceUrl" | "transType" | "status" | "provider" | "cartId" | "providerReference" | "affiliate" | "billingDayOfMonth" | "cancelled">;
            };
        };
    };
    GIFTAID_SUBMITS: {
        valid: {
            DEFAULT: import("../../models").GiftaidSubmitProps;
            CAN_CLAIM_0: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    can_claim_giftaid: number;
                };
            };
            CAN_CLAIM_1: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    can_claim_giftaid: number;
                };
            };
            EMPTY_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    supporter_uuid: null;
                };
            };
            NULL_DECLARATION_END_DATE: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    declaration_end_date: null;
                };
            };
            MISSING_DECLARATION_END_DATE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            NULL_ADDRESS_LINE2: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    address_line_2: null;
                };
            };
            MISSING_ADDRESS_LINE2: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            NULL_ADDRESS_LINE3: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    address_line_3: null;
                };
            };
            MISSING_ADDRESS_LINE3: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            NULL_TOWN: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    town: null;
                };
            };
            MISSING_TOWN: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
        };
        invalid: {
            DEFAULT: import("../../models").GiftaidSubmitProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").GiftaidSubmitProps & {
                type: string;
            };
            INVALID_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    supporter_uuid: string;
                };
            };
            INVALID_CLAIMED_NEGATIVE: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    can_claim_giftaid: number;
                };
            };
            INVALID_CLAIMED_POSITIVE: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    can_claim_giftaid: number;
                };
            };
            MISSING_CAN_CLAIM: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            MISSING_SUPPORTER_UUID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            INVALID_SOURCE: {
                type: ErpPayloadTypes;
                data: {
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                } & {
                    source: string;
                };
            };
            NULL_SUBMISSION_DATE: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_SUBMISSION_DATE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            NULL_FIRST_NAME: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_FIRST_NAME: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
            NULL_LAST_NAME: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_LAST_NAME: {
                type: ErpPayloadTypes;
                data: Omit<{
                    declaration_transaction_id: string;
                    supporter_uuid: string | null;
                    declaration_start_date: string;
                    declaration_end_date?: string | null | undefined;
                    submission_date: string;
                    first_name: string;
                    last_name: string;
                    source: import("../../models/doctypes/giftaid/GiftAidDeclaration").GiftAidSource;
                    can_claim_giftaid: number;
                    address_line_1: string;
                    address_line_2?: string | null | undefined;
                    address_line_3?: string | null | undefined;
                    town?: string | null | undefined;
                    postcode: string;
                }, "postcode" | "town" | "first_name" | "last_name" | "supporter_uuid" | "source" | "declaration_transaction_id" | "declaration_start_date" | "declaration_end_date" | "submission_date" | "can_claim_giftaid" | "address_line_1" | "address_line_2" | "address_line_3">;
            };
        };
    };
    GIFTAID_UPDATES: {
        valid: {
            DEFAULT: import("../../models").GiftaidUpdateProps;
            TRANSACTION_ID_NON_UUID: {
                type: ErpPayloadTypes;
                data: {
                    transactionId: string;
                    claimed: number;
                } & {
                    transactionId: string;
                };
            };
            CLAIMED_0: {
                type: ErpPayloadTypes;
                data: {
                    transactionId: string;
                    claimed: number;
                } & {
                    claimed: number;
                };
            };
            CLAIMED_1: {
                type: ErpPayloadTypes;
                data: {
                    transactionId: string;
                    claimed: number;
                } & {
                    claimed: number;
                };
            };
        };
        invalid: {
            DEFAULT: import("../../models").GiftaidUpdateProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").GiftaidUpdateProps & {
                type: string;
            };
            INVALID_TRANSACTION_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_CLAIMED_NEGATIVE: {
                type: ErpPayloadTypes;
                data: {
                    transactionId: string;
                    claimed: number;
                } & {
                    claimed: number;
                };
            };
            INVALID_CLAIMED_POSITIVE: {
                type: ErpPayloadTypes;
                data: {
                    transactionId: string;
                    claimed: number;
                } & {
                    claimed: number;
                };
            };
            MISSING_TRANSACTION_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    transactionId: string;
                    claimed: number;
                }, "transactionId" | "claimed">;
            };
            MISSING_CLAIMED: {
                type: ErpPayloadTypes;
                data: Omit<{
                    transactionId: string;
                    claimed: number;
                }, "transactionId" | "claimed">;
            };
        };
    };
    PAYIN_SUBMITS: {
        valid: {
            DEFAULT: import("../../models").PayinSubmitProps;
        };
        invalid: {
            DEFAULT: import("../../models").PayinSubmitProps & {
                data: {};
            };
            INVALID_TYPE: import("../../models").PayinSubmitProps & {
                type: string;
            };
            INVALID_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_TRANSACTION_ID: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_AUDIENCE: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_ADDRESS1: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_POSTCODE: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_TOWN: {
                type: ErpPayloadTypes;
                data: never;
            };
            INVALID_COUNTRY: {
                type: ErpPayloadTypes;
                data: never;
            };
            MISSING_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_TRANSACTION_ID: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_AUDIENCE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_ADDRESS1: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_POSTCODE: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_TOWN: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
            MISSING_COUNTRY: {
                type: ErpPayloadTypes;
                data: Omit<{
                    id: string;
                    transactionId: string;
                    audience: string;
                    postcode: string;
                    town: string;
                    country: string;
                    address1: string;
                    address2?: string | null | undefined;
                    address3?: string | null | undefined;
                }, "address1" | "postcode" | "town" | "country" | "id" | "transactionId" | "address2" | "address3" | "audience">;
            };
        };
    };
    ORDER_PUTS: {
        invalid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SHOPIFY_ID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SHOPIFY_PROCESSED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SHOPIFY_UPDATED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SHOPIFY_CANCELLED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SHOPIFY_CUSTOMER_ID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SUPPORTER_UUID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_ORDER_NUMBER: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_CANCEL_REASON: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_PAYMENT_STATUS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_FULFILMENT_STATUS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_POSTCODE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_LINE_ITEMS_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_DISCOUNTS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SUBTOTAL_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_SUBTOTAL_INCLUDES_VAT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_OUTSTANDING: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_DONATION_RECEIVED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_POSTAGE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_VAT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_TOTAL_REFUNDED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_CURRENCY: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_INVALID_LINE_ITEMS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SHOPIFY_ID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SHOPIFY_PROCESSED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SHOPIFY_UPDATED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SHOPIFY_CANCELLED_AT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SHOPIFY_CUSTOMER_ID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SUPPORTER_UUID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_ORDER_NUMBER: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_CANCEL_REASON: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_PAYMENT_STATUS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_FULFILMENT_STATUS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_POSTCODE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_LINE_ITEMS_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_DISCOUNTS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SUBTOTAL_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_SUBTOTAL_INCLUDES_VAT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_OUTSTANDING: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_DONATION_RECEIVED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_POSTAGE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_PRICE: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_VAT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_TOTAL_REFUNDED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_CURRENCY: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_MISSING_LINE_ITEMS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_NULL_SUPPORTER_UUID: Required<import("../../models").ShopifyOrderPutProps>;
            DEFAULT: Required<import("../../models").ShopifyOrderPutProps> & {
                data: {
                    shopify_id: null;
                    shopify_processed_at: null;
                    shopify_updated_at: null;
                    shopify_cancelled_at: string;
                    shopify_customer_id: null;
                    supporter_uuid: string;
                    order_number: null;
                    cancel_reason: string;
                    payment_status: string;
                    fulfilment_status: string;
                    postcode: null;
                    total_line_items_price: number;
                    total_discounts: number;
                    subtotal_price: number;
                    subtotal_includes_vat: string;
                    total_outstanding: number;
                    total_donation_received: number;
                    total_postage: number;
                    total_price: number;
                    total_vat: number;
                    total_refunded: number;
                    currency: string;
                    line_items: never[];
                };
            };
            INVALID_TYPE: Required<import("../../models").ShopifyOrderPutProps> & {
                type: string;
            };
            INVALID_DATA: never;
            MISSING_TYPE: Omit<Required<import("../../models").ShopifyOrderPutProps>, "type">;
            MISSING_DATA: Omit<Required<import("../../models").ShopifyOrderPutProps>, "data">;
        };
        valid: {
            OVERRIDE_DATA_WITH_DEFAULT: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_PENDING: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_AUTHORIZED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_PARTIALLY_PAID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_PAID: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_PARTIALLY_REFUNDED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_REFUNDED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_PAYMENT_STATUS_VOIDED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_FULFILMENT_STATUS_FULFILLED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_FULFILMENT_STATUS_UNFULFILLED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_FULFILMENT_STATUS_PARTIAL: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_FULFILMENT_STATUS_RESTOCKED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCELLED_AT_NULL: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_NULL: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_CUSTOMER: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_FRAUD: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_INVENTORY: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_DECLINED: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_CANCEL_REASON_OTHER: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_TWO_LINE_ITEMS: Required<import("../../models").ShopifyOrderPutProps>;
            OVERRIDE_DATA_WITH_FREE_ORDER: Required<import("../../models").ShopifyOrderPutProps>;
            DEFAULT: Required<import("../../models").ShopifyOrderPutProps>;
        };
    };
    FUNDRAISER_SIGNUP_SUBMIT_MOCKS: {
        valid: {
            EMPTY_STRING_ORG_NAME: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            EMPTY_STRING_JOB_TITLE: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            EMPTY_STRING_ORG_ID: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            EMPTY_STRING_ORG_ID_TYPE: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            EMPTY_TOOLS_ARRAY: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            EMPTY_IDEAS_ARRAY: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_ORG_ID: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE_STRING_ID: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            STRING_ADDRESS_ID: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            DEFAULT: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps;
            };
        };
        invalid: {
            HAS_ORG_ID_ONLY: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE_ID_ONLY: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE_URL_ONLY: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE_INVALID_ID: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            HAS_JUSTGIVING_PAGE_INVALID_URL: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps & import("../../../../utils").PartialKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
            DEFAULT: {
                type: string;
                data: import("../../../../validation").RequiredKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            };
        };
    };
    GIVING_PAGE_PUT_MOCKS: {
        valid: {
            DEFAULT: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>;
            MISSING_ADDRESS_LINE1: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_TOWN: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_POSTAL_CODE: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_REGION: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_COUNTRY: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_FIRST_NAME: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            NULL_FIRST_NAME: {
                type: ErpPayloadTypes;
                data: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps> & import("../../../../utils").PartialKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            MISSING_LAST_NAME: {
                type: ErpPayloadTypes;
                data: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>, keyof import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
            NULL_LAST_NAME: {
                type: ErpPayloadTypes;
                data: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps> & import("../../../../utils").PartialKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutDataProps>;
            };
        };
        invalid: {
            OVERRIDE_DATA_WITH_type: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>;
            OVERRIDE_DATA_WITH_data: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>;
            DEFAULT: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>;
            MISSING_TYPE: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>, "type">;
            MISSING_DATA: Omit<import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>, "data">;
        };
    };
};
export declare const PRODUCER_REQUEST_VALUES_VALID: {
    actions: (import("../../models").TransactionExecuteProps | {
        type: ErpPayloadTypes;
        cognito_user_id: string;
        first_name: string;
        last_name: string;
        email: {
            id: string;
            email: string;
            hidden: boolean;
            verified: boolean;
        }[];
        mobile: {
            id: string;
            number: string;
            hidden: boolean;
            verified: boolean;
        }[];
    })[];
};
export declare const PRODUCER_REQUEST_VALUES_INVALID: {
    actions: string[];
};
export declare const PRODUCER_REQUEST_VALUES: {
    valid: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    };
    invalid: {
        actions: string[];
    };
};
/**
 * Please add new models valid mocks to this list
 * of valid requests, so that mocks each model
 * can be tested as part of a ProducerRequest
 */
export declare const PRODUCER_REQUESTS_VALID: {
    DEFAULT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    };
    VALID_PRIZE_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: Required<import("../../models").PrizePutProps>[];
    };
    VALID_TICKET_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: Required<import("../../models").TicketPutProps>[];
    };
    VALID_IDENTITY_ADD: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").IdentityAddProps[];
    };
    VALID_USER_CREATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        }[];
    };
    VALID_TRANSACTION_EXECUTE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").TransactionExecuteProps[];
    };
    VALID_TRANSACTION_EXECUTE_IVR: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").TransactionExecuteIvrProps[];
    };
    VALID_TRANSACTION_SMS_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: {
            type: any;
            data: any;
        }[];
    };
    VALID_SUBSCRIPTION_EXECUTE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").SubscriptionExecuteProps[];
    };
    VALID_SUBSCRIPTION_UPDATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").SubscriptionUpdateProps[];
    };
    VALID_GIFTAID_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").GiftaidSubmitProps[];
    };
    VALID_GIFTAID_UPDATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").GiftaidUpdateProps[];
    };
    VALID_SHOPIFY_ORDER_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: Required<import("../../models").ShopifyOrderPutProps>[];
    };
    VALID_PAYIN_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../models").PayinSubmitProps[];
    };
    VALID_FUNDRAISER_SIGNUP_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: {
            type: ErpPayloadTypes;
            data: import("../../models").FundraiserSignupSubmitDataProps;
        }[];
    };
    VALID_GIVING_PAGE_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>[];
    };
    VALID_ALL: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    };
};
/**
 * Please add new models invalid mocks to this list
 * of invalid requests, so that mocks each model
 * can be tested as part of a ProducerRequest
 */
export declare const PRODUCER_REQUESTS_INVALID: {
    DEFAULT: {
        actions: string[];
    };
    INVALID_PRIZE_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (Required<import("../../models").PrizePutProps> & {
            data: {
                id: null;
                title: null;
                category_id: null;
                path: null;
                url: string;
                start_date: null;
                end_date: null;
                bundles: ({} | {
                    random: number;
                } | {
                    tickets: string;
                    price: number;
                } | {
                    tickets: number;
                    price: string;
                } | {
                    price: number;
                } | {
                    tickets: number;
                } | null | undefined)[];
                limit: string;
                winners: string;
                completed_tickets_pick: string;
                triggered_tickets_pick: string;
            };
        })[];
    };
    INVALID_TICKET_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (Required<import("../../models").TicketPutProps> & {
            data: {
                uuid: string;
                postal: number;
                postal_id: number;
                prize_id: null;
                transaction_uuid: string;
                donation_uuid: number;
                supporter_uuid: string;
                identity_hash: null;
                parent_uuid: null;
                state: string;
                timestamp: string;
            };
        })[];
    };
    INVALID_IDENTITY_ADD: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: never[];
    };
    INVALID_USER_CREATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: never[];
    };
    INVALID_TRANSACTION_EXECUTE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").TransactionExecuteProps & {
            data: {};
        })[];
    };
    INVALID_TRANSACTION_EXECUTE_IVR: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").TransactionExecuteIvrProps & {
            data: {
                id: string;
                supporter_uuid: string;
                amount: number;
                currency: null;
                giftaid: null;
                campaign: string;
                client: number;
                provider: string;
                providerReference: number;
                status: string;
                created: string;
                address1: number;
                address2: number;
                address3: number;
                postcode: number;
                town: number;
                country: number;
            };
        })[];
    };
    INVALID_TRANSACTION_SMS_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: ({
            type: any;
            data: any;
        } & {
            data: any;
        })[];
    };
    INVALID_SUBSCRIPTION_EXECUTE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").SubscriptionExecuteProps & {
            data: {};
        })[];
    };
    INVALID_SUBSCRIPTION_UPDATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").SubscriptionUpdateProps & {
            data: {};
        })[];
    };
    INVALID_GIFTAID_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").GiftaidSubmitProps & {
            data: {};
        })[];
    };
    INVALID_GIFTAID_UPDATE: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").GiftaidUpdateProps & {
            data: {};
        })[];
    };
    INVALID_SHOPIFY_ORDER_PUT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (Required<import("../../models").ShopifyOrderPutProps> & {
            data: {
                shopify_id: null;
                shopify_processed_at: null;
                shopify_updated_at: null;
                shopify_cancelled_at: string;
                shopify_customer_id: null;
                supporter_uuid: string;
                order_number: null;
                cancel_reason: string;
                payment_status: string;
                fulfilment_status: string;
                postcode: null;
                total_line_items_price: number;
                total_discounts: number;
                subtotal_price: number;
                subtotal_includes_vat: string;
                total_outstanding: number;
                total_donation_received: number;
                total_postage: number;
                total_price: number;
                total_vat: number;
                total_refunded: number;
                currency: string;
                line_items: never[];
            };
        })[];
    };
    INVALID_PAYIN_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: (import("../../models").PayinSubmitProps & {
            data: {};
        })[];
    };
    INVALID_FUNDRAISER_SIGNUP_SUBMIT: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: {
            type: string;
            data: import("../../../../validation").RequiredKeys<import("../../models").FundraiserSignupSubmitDataProps>;
        }[];
    };
    MANY_INVALID_ACTIONS: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>[];
    };
    MISSING_ACTIONS: Omit<{
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    }, "actions">;
    NO_ACTIONS: {
        actions: (import("../../models").TransactionExecuteProps | {
            type: ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    } & {
        actions: never[];
    };
};
export declare const PRODUCER_REQUESTS: {
    valid: {
        DEFAULT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
        VALID_PRIZE_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: Required<import("../../models").PrizePutProps>[];
        };
        VALID_TICKET_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: Required<import("../../models").TicketPutProps>[];
        };
        VALID_IDENTITY_ADD: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").IdentityAddProps[];
        };
        VALID_USER_CREATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            }[];
        };
        VALID_TRANSACTION_EXECUTE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").TransactionExecuteProps[];
        };
        VALID_TRANSACTION_EXECUTE_IVR: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").TransactionExecuteIvrProps[];
        };
        VALID_TRANSACTION_SMS_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: {
                type: any;
                data: any;
            }[];
        };
        VALID_SUBSCRIPTION_EXECUTE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").SubscriptionExecuteProps[];
        };
        VALID_SUBSCRIPTION_UPDATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").SubscriptionUpdateProps[];
        };
        VALID_GIFTAID_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").GiftaidSubmitProps[];
        };
        VALID_GIFTAID_UPDATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").GiftaidUpdateProps[];
        };
        VALID_SHOPIFY_ORDER_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: Required<import("../../models").ShopifyOrderPutProps>[];
        };
        VALID_PAYIN_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../models").PayinSubmitProps[];
        };
        VALID_FUNDRAISER_SIGNUP_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: {
                type: ErpPayloadTypes;
                data: import("../../models").FundraiserSignupSubmitDataProps;
            }[];
        };
        VALID_GIVING_PAGE_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>[];
        };
        VALID_ALL: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    };
    invalid: {
        DEFAULT: {
            actions: string[];
        };
        INVALID_PRIZE_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (Required<import("../../models").PrizePutProps> & {
                data: {
                    id: null;
                    title: null;
                    category_id: null;
                    path: null;
                    url: string;
                    start_date: null;
                    end_date: null;
                    bundles: ({} | {
                        random: number;
                    } | {
                        tickets: string;
                        price: number;
                    } | {
                        tickets: number;
                        price: string;
                    } | {
                        price: number;
                    } | {
                        tickets: number;
                    } | null | undefined)[];
                    limit: string;
                    winners: string;
                    completed_tickets_pick: string;
                    triggered_tickets_pick: string;
                };
            })[];
        };
        INVALID_TICKET_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (Required<import("../../models").TicketPutProps> & {
                data: {
                    uuid: string;
                    postal: number;
                    postal_id: number;
                    prize_id: null;
                    transaction_uuid: string;
                    donation_uuid: number;
                    supporter_uuid: string;
                    identity_hash: null;
                    parent_uuid: null;
                    state: string;
                    timestamp: string;
                };
            })[];
        };
        INVALID_IDENTITY_ADD: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: never[];
        };
        INVALID_USER_CREATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: never[];
        };
        INVALID_TRANSACTION_EXECUTE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").TransactionExecuteProps & {
                data: {};
            })[];
        };
        INVALID_TRANSACTION_EXECUTE_IVR: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").TransactionExecuteIvrProps & {
                data: {
                    id: string;
                    supporter_uuid: string;
                    amount: number;
                    currency: null;
                    giftaid: null;
                    campaign: string;
                    client: number;
                    provider: string;
                    providerReference: number;
                    status: string;
                    created: string;
                    address1: number;
                    address2: number;
                    address3: number;
                    postcode: number;
                    town: number;
                    country: number;
                };
            })[];
        };
        INVALID_TRANSACTION_SMS_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: ({
                type: any;
                data: any;
            } & {
                data: any;
            })[];
        };
        INVALID_SUBSCRIPTION_EXECUTE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").SubscriptionExecuteProps & {
                data: {};
            })[];
        };
        INVALID_SUBSCRIPTION_UPDATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").SubscriptionUpdateProps & {
                data: {};
            })[];
        };
        INVALID_GIFTAID_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").GiftaidSubmitProps & {
                data: {};
            })[];
        };
        INVALID_GIFTAID_UPDATE: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").GiftaidUpdateProps & {
                data: {};
            })[];
        };
        INVALID_SHOPIFY_ORDER_PUT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (Required<import("../../models").ShopifyOrderPutProps> & {
                data: {
                    shopify_id: null;
                    shopify_processed_at: null;
                    shopify_updated_at: null;
                    shopify_cancelled_at: string;
                    shopify_customer_id: null;
                    supporter_uuid: string;
                    order_number: null;
                    cancel_reason: string;
                    payment_status: string;
                    fulfilment_status: string;
                    postcode: null;
                    total_line_items_price: number;
                    total_discounts: number;
                    subtotal_price: number;
                    subtotal_includes_vat: string;
                    total_outstanding: number;
                    total_donation_received: number;
                    total_postage: number;
                    total_price: number;
                    total_vat: number;
                    total_refunded: number;
                    currency: string;
                    line_items: never[];
                };
            })[];
        };
        INVALID_PAYIN_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: (import("../../models").PayinSubmitProps & {
                data: {};
            })[];
        };
        INVALID_FUNDRAISER_SIGNUP_SUBMIT: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: {
                type: string;
                data: import("../../../../validation").RequiredKeys<import("../../models").FundraiserSignupSubmitDataProps>;
            }[];
        };
        MANY_INVALID_ACTIONS: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: import("../../../../validation").RequiredKeys<import("../../models/actions/justgiving/GivingPagePut").GivingPagePutProps>[];
        };
        MISSING_ACTIONS: Omit<{
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        }, "actions">;
        NO_ACTIONS: {
            actions: (import("../../models").TransactionExecuteProps | {
                type: ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        } & {
            actions: never[];
        };
    };
};
/**
 * Generates a random ProducerRequest
 *
 * Please add new models generators to the list
 * of generated request, so that mocks each model
 * can be tested as part of a random ProducerRequest
 *
 * @param overrides
 * @param type
 */
export declare const producerRequestGenerator: (overrides?: Partial<ProducerRequestProps>, type?: ErpPayloadTypes | null) => ProducerRequestProps;
//# sourceMappingURL=ProducerRequest.mock.d.ts.map