import { ErpResources } from '../../models/common';
import { QueryFilterProps, QueryRequestProps } from '../../models/requests/QueryRequest';
export declare const QUERY_REQUEST_VALID_FILTER: QueryFilterProps;
export declare const QUERY_REQUEST_INVALID_FILTER: {
    field: null;
    operator: null;
    value: null;
};
export declare const QUERY_REQUEST_VALUES_VALID: {
    resource: ErpResources;
    name: string;
    fields: string[];
    filters: never[];
    offset: number;
    limit: number;
};
export declare const QUERY_REQUEST_VALUES_INVALID: {
    resource: string;
    name: null;
    fields: null[];
    filters: number[];
    offset: string;
    limit: string;
};
export declare const QUERY_REQUEST_VALUES: {
    valid: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    };
    invalid: {
        resource: string;
        name: null;
        fields: null[];
        filters: number[];
        offset: string;
        limit: string;
    };
};
export declare const QUERY_REQUESTS_VALID: {
    DEFAULT: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    };
    LIMIT_ZERO: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        limit: number;
    };
    MISSING_NAME: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "name">;
    MISSING_FIELDS: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "fields">;
    MISSING_FILTERS: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "filters">;
    MISSING_OFFSET: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "offset">;
    MISSING_LIMIT: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "limit">;
    WITH_NAME: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        name: string;
    };
    WITH_RESOURCE_SPACE: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        resource: ErpResources;
    };
    WITH_NAME_SPACE: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        name: string;
    };
    WITH_NAME_HASH: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        name: string;
    };
    WITH_NAME_QUESTION: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        name: string;
    };
    WITH_NAME_SLASH: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        name: string;
    };
    WITH_SUPPORTER_FIELDS: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        fields: string[];
    };
    WITH_SUPPORTER_FILTERS: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        filters: QueryFilterProps[];
    };
    WITH_PRIZE_TICKET_FILTERS: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        resource: ErpResources;
        filters: QueryFilterProps[];
    };
    WITH_IMPLICIT_FILTER_OPERATOR: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        filters: {
            field: string;
            value: string;
        }[];
    };
};
export declare const QUERY_REQUESTS_INVALID: {
    DEFAULT: {
        resource: string;
        name: null;
        fields: null[];
        filters: number[];
        offset: string;
        limit: string;
    };
    MISSING_RESOURCE: Omit<{
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    }, "resource">;
    INVALID_RESOURCE: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        resource: string;
    };
    INVALID_NAME: never;
    INVALID_FIELDS: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        fields: null[];
    };
    INVALID_FIELDS_CONTAINS_NULL: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        fields: (string | null)[];
    };
    INVALID_FILTERS: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        filters: number[];
    };
    INVALID_FILTERS_FORMAT: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        filters: {
            field: string;
        };
    };
    INVALID_FILTERS_VALUES: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        filters: {
            field: null;
            operator: null;
            value: null;
        };
    };
    INVALID_OFFSET: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        offset: string;
    };
    INVALID_LIMIT: {
        resource: ErpResources;
        name: string;
        fields: string[];
        filters: never[];
        offset: number;
        limit: number;
    } & {
        limit: string;
    };
};
export declare const QUERY_REQUESTS: {
    valid: {
        DEFAULT: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        };
        LIMIT_ZERO: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            limit: number;
        };
        MISSING_NAME: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "name">;
        MISSING_FIELDS: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "fields">;
        MISSING_FILTERS: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "filters">;
        MISSING_OFFSET: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "offset">;
        MISSING_LIMIT: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "limit">;
        WITH_NAME: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            name: string;
        };
        WITH_RESOURCE_SPACE: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            resource: ErpResources;
        };
        WITH_NAME_SPACE: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            name: string;
        };
        WITH_NAME_HASH: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            name: string;
        };
        WITH_NAME_QUESTION: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            name: string;
        };
        WITH_NAME_SLASH: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            name: string;
        };
        WITH_SUPPORTER_FIELDS: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            fields: string[];
        };
        WITH_SUPPORTER_FILTERS: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            filters: QueryFilterProps[];
        };
        WITH_PRIZE_TICKET_FILTERS: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            resource: ErpResources;
            filters: QueryFilterProps[];
        };
        WITH_IMPLICIT_FILTER_OPERATOR: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            filters: {
                field: string;
                value: string;
            }[];
        };
    };
    invalid: {
        DEFAULT: {
            resource: string;
            name: null;
            fields: null[];
            filters: number[];
            offset: string;
            limit: string;
        };
        MISSING_RESOURCE: Omit<{
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        }, "resource">;
        INVALID_RESOURCE: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            resource: string;
        };
        INVALID_NAME: never;
        INVALID_FIELDS: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            fields: null[];
        };
        INVALID_FIELDS_CONTAINS_NULL: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            fields: (string | null)[];
        };
        INVALID_FILTERS: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            filters: number[];
        };
        INVALID_FILTERS_FORMAT: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            filters: {
                field: string;
            };
        };
        INVALID_FILTERS_VALUES: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            filters: {
                field: null;
                operator: null;
                value: null;
            };
        };
        INVALID_OFFSET: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            offset: string;
        };
        INVALID_LIMIT: {
            resource: ErpResources;
            name: string;
            fields: string[];
            filters: never[];
            offset: number;
            limit: number;
        } & {
            limit: string;
        };
    };
};
/**
 * Generates a random QueryFilterProps
 *
 * @param overrides
 */
export declare const queryRequestFilterGenerator: (overrides?: Partial<QueryFilterProps>) => Required<QueryFilterProps>;
/**
 * Generates a random QueryRequestProps
 *
 * @param overrides
 */
export declare const queryRequestGenerator: (overrides?: Partial<QueryRequestProps>) => Required<QueryRequestProps>;
//# sourceMappingURL=QueryRequest.mock.d.ts.map