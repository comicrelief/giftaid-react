import { TransactionProvider, TransactionStatus } from '../../../payments/models/common';
import { ErpPayloadTypes } from '../common';
import { DonationMethod } from '../doctypes/psl/Donation';
/**
 * Properties required by a `TransactionIVRExecute` action.
 *
 * Note that the `data` payload does not correspond to a DocType, but more with
 * the original transaction record from the Transactional Store. IVR donations
 * will be created as `Donation` documents in ERP.
 */
export interface TransactionExecuteIvrProps {
    type: ErpPayloadTypes.TRANSACTION__EXECUTE_IVR;
    data: {
        /** The IVR transaction ID. */
        id: string;
        supporter_uuid?: string | null;
        amount: number;
        currency: string;
        /** This carries values donate & payin from the PSL */
        client: string;
        provider: TransactionProvider;
        created: number;
        status: TransactionStatus;
        postcode?: string | null;
        town?: string | null;
        country?: string | null;
        address1?: string | null;
        address2?: string | null;
        address3?: string | null;
        campaign?: string | null;
        providerReference?: string | null;
        giftaid?: number | null;
        method?: DonationMethod;
    };
}
/**
 * The `TransactionExecuteIvr` action.
 *
 * This action is used to send IVR donations to ERP.
 */
export declare const TransactionExecuteIvr: import("../../../../validation").Model<TransactionExecuteIvrProps>;
//# sourceMappingURL=TransactionExecuteIvr.d.ts.map