"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionSmsPut = void 0;
var yup = __importStar(require("yup"));
var StrictString_1 = require("../../../../fields/StrictString");
var validation_1 = require("../../../../validation");
var common_1 = require("../../../payments/models/common");
var common_2 = require("../common");
/**
 * The `TransactionSmsPut` action.
 *
 * This action is used by the Transactional Store to send SMS donations to ERP.
 */
exports.TransactionSmsPut = validation_1.defineModel(validation_1.Namespaces.ERP_SERVICE, 'TransactionSmsPut', function () { return yup.object({
    type: yup.string().oneOf([common_2.ErpPayloadTypes.TRANSACTION__SMS__PUT]).required(),
    data: yup.object({
        transaction_id: yup.string().required(),
        supporter_uuid: validation_1.SupporterUUID,
        initiated_at: yup.number().integer().positive().required(),
        status: yup.string().oneOf(Object.values(common_1.TransactionStatus)).required(),
        amount: yup.number().positive().required(),
        provider: StrictString_1.LowercaseString.oneOf(Object.values(common_1.TransactionProvider)).required(),
        provider_reference: yup.string().strict(true).nullable().defined(),
        mobile_number: yup.string().required(),
        fund: yup.string().required(),
        project: yup.string().required(),
        activity: yup.string().required(),
        keyword: yup.string().defined().nullable(false),
        short_code: yup.string().required(),
    }).required(),
}); });
//# sourceMappingURL=TransactionSmsPut.js.map