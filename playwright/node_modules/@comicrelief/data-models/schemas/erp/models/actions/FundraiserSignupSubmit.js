"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FundraiserSignupSubmit = void 0;
var yup = __importStar(require("yup"));
var PhoneNumber_1 = require("../../../../fields/PhoneNumber");
var Postcode_1 = require("../../../../fields/Postcode");
var StrictString_1 = require("../../../../fields/StrictString");
var validation_1 = require("../../../../validation");
var common_1 = require("../common");
// TODO: This is copied from marketing prefs, could be refactored into a util.
var emptyToNull = function (value) { return (value === '' ? null : value); };
/* eslint-disable no-template-curly-in-string */
/**
 * FundraiserSignupSubmit ERP action model.
 */
exports.FundraiserSignupSubmit = validation_1.defineModel(validation_1.Namespaces.ERP_SERVICE, 'FundraiserSignupSubmit', function () { return yup.object({
    type: yup.string().oneOf([common_1.ErpPayloadTypes.FUNDRAISER__SIGNUP__SUBMIT]).required(),
    data: yup.object().shape({
        supporter_uuid: validation_1.SupporterUUID.defined(),
        uuid: StrictString_1.StrictString.uuid().required(),
        campaign_code: StrictString_1.StrictString.required(),
        fundraising_segment: StrictString_1.StrictString.required(),
        org_name: StrictString_1.StrictString.nullable().defined().transform(function (val) { return val || null; }),
        // For example, a school's Edco ID
        org_id: yup.string().nullable().defined().transform(function (val) { return val || null; }),
        // For example, 'edco'
        org_id_type: StrictString_1.StrictString.nullable().defined().when('org_id', {
            is: function (value) { return !!value; },
            then: StrictString_1.StrictString.required('${path} is required when org_id is present'),
        }),
        job_title: StrictString_1.StrictString.nullable().defined().transform(function (val) { return val || null; }),
        address_id: yup.number().integer().positive().nullable()
            .defined()
            .default(null),
        address_line_1: StrictString_1.StrictString.trim().required().max(100),
        address_line_2: StrictString_1.StrictString.trim().max(100).ensure().defined(),
        address_line_3: StrictString_1.StrictString.trim().max(100).ensure().defined(),
        town: StrictString_1.StrictString.trim().required().max(100),
        postcode: Postcode_1.Postcode.required(),
        phone: PhoneNumber_1.PhoneNumber.nullable().default(null).defined().transform(emptyToNull),
        // nullable(false) is only needed because we are currently on a buggy
        //  version of yup in which defined() makes a schema nullable().
        // Which would be fine in this particular case, but it also seems to
        //  break ensure(), meaning null wasn't being cast to an empty array.
        //  See: https://github.com/jquense/yup/blob/master/CHANGELOG.md#0300-2020-11-19
        fundraising_tools: yup.array(StrictString_1.StrictString.required()).strict(true).ensure().defined()
            .nullable(false),
        fundraising_ideas: yup.array(StrictString_1.StrictString.required()).strict(true).ensure().defined()
            .nullable(false),
        justgiving_page_id: yup.number().nullable().default(null)
            .when('justgiving_page_url', {
            is: function (value) { return !!value; },
            then: yup.number().integer().positive().required('${path} is required when justgiving_page_url is present'),
        }),
        justgiving_page_url: StrictString_1.StrictString.url().nullable().default(null).when('justgiving_page_id', {
            is: function (value) { return !!value; },
            then: StrictString_1.StrictString.url().required('${path} is required when justgiving_page_id is present'),
        }),
        target: StrictString_1.StrictString.defined().nullable().transform(function (val) { return val || null; }),
        received_at: validation_1.Timestamp.required(),
    }, [['justgiving_page_id', 'justgiving_page_url']]).required(),
}); });
//# sourceMappingURL=FundraiserSignupSubmit.js.map