import * as yup from 'yup';
import { ErpResources } from '../common';
/**
 * Defines the operators
 * that can be used in filters
 */
export declare enum QueryFilterOperators {
    EQUALS = "=",
    GREATER_THAN = ">",
    GREATER_THAN_OR_EQUALS = ">=",
    LESS_THAN = "<",
    LESS_THAN_OR_EQUALS = "<=",
    LIKE = "like",
    NOT_EQUALS = "!="
}
/**
 * Defines a query filter
 */
export interface QueryFilterProps {
    field: string;
    operator: QueryFilterOperators;
    value: string;
}
/**
 * Props required to validate
 * a QueryRequest
 */
export interface QueryRequestProps {
    [key: string]: unknown;
    resource: ErpResources;
    name?: string;
    fields?: string[];
    filters?: QueryFilterProps[];
    limit?: number | null;
    offset?: number | null;
}
/**
 * Validates a QueryFilterProps
 */
export declare const QueryFilter: yup.ObjectSchema<{
    field: string;
    operator: QueryFilterOperators;
    value: string;
}, object>;
/**
 * QueryRequest model
 */
export declare const QueryRequest: import("../../../../validation").Model<QueryRequestProps>;
/**
 * Transforms a QueryRequestProps
 * into a full ERP Next URL
 *
 * @param baseUrl
 * @param queryRequest
 */
export declare const toEndpoint: (baseUrl: string, queryRequest: QueryRequestProps) => string;
//# sourceMappingURL=QueryRequest.d.ts.map