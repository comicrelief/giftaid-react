"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toEndpoint = exports.QueryRequest = exports.QueryFilter = exports.QueryFilterOperators = void 0;
var yup = __importStar(require("yup"));
var validation_1 = require("../../../../validation");
var common_1 = require("../common");
/**
 * Defines the operators
 * that can be used in filters
 */
var QueryFilterOperators;
(function (QueryFilterOperators) {
    QueryFilterOperators["EQUALS"] = "=";
    QueryFilterOperators["GREATER_THAN"] = ">";
    QueryFilterOperators["GREATER_THAN_OR_EQUALS"] = ">=";
    QueryFilterOperators["LESS_THAN"] = "<";
    QueryFilterOperators["LESS_THAN_OR_EQUALS"] = "<=";
    QueryFilterOperators["LIKE"] = "like";
    QueryFilterOperators["NOT_EQUALS"] = "!=";
})(QueryFilterOperators = exports.QueryFilterOperators || (exports.QueryFilterOperators = {}));
/**
 * Validates a QueryFilterProps
 */
exports.QueryFilter = yup.object({
    field: yup.string().required(),
    operator: yup.string().oneOf(Object.values(QueryFilterOperators)).default(function () { return QueryFilterOperators.EQUALS; }).required(),
    value: yup.string().default(function () { return ''; }).defined(),
}).required();
/**
 * QueryRequest model
 */
exports.QueryRequest = validation_1.defineModel(validation_1.Namespaces.ERP_SERVICE, 'QueryRequest', function () { return yup.object({
    resource: yup.string().oneOf(Object.values(common_1.ErpResources)).required(),
    name: yup.string().default(function () { return ''; }),
    fields: yup.array().of(yup.string().required()).default(function () { return ['*']; }).required(),
    filters: yup.array().of(exports.QueryFilter).default(function () { return []; }),
    limit: yup.number().integer().nullable().default(function () { return null; })
        .defined(),
    offset: yup.number().integer().nullable().default(function () { return null; })
        .defined(),
}); });
/**
 * Transforms a QueryRequestProps
 * into a full ERP Next URL
 *
 * @param baseUrl
 * @param queryRequest
 */
var toEndpoint = function (baseUrl, queryRequest) {
    var validated = exports.QueryRequest.validateSync(queryRequest);
    var urlComponents = [
        baseUrl,
        'api',
        'resource',
        encodeURIComponent(validated.resource),
    ];
    if (validated.name) {
        urlComponents.push(encodeURIComponent(validated.name));
    }
    var url = new URL(urlComponents.join('/'));
    if (validated.fields) {
        url.searchParams.append('fields', JSON.stringify(validated.fields));
    }
    if (validated.filters && validated.filters.length > 0) {
        var filters = validated.filters
            .map(function (filter) { return [validated.resource, filter.field, filter.operator, filter.value]; });
        url.searchParams.append('filters', JSON.stringify(filters));
    }
    if (validated.offset !== undefined && validated.offset !== null) {
        url.searchParams.append('limit_start', String(validated.offset));
    }
    if (validated.limit !== undefined && validated.limit !== null) {
        url.searchParams.append('limit_page_length', String(validated.limit));
    }
    return url.toString();
};
exports.toEndpoint = toEndpoint;
//# sourceMappingURL=QueryRequest.js.map