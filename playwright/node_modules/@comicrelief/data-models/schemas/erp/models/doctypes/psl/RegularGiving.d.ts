import { NumericBool } from '../../../../../validation';
import { SubscriptionProvider as PslSubscriptionProvider, SubscriptionStatus as PslSubscriptionStatus } from '../../../../payments/models/common';
import { ErpResources } from '../../common';
/**
 * Name of this doctype in ERP.
 */
export declare const DOCTYPE = ErpResources.SUBSCRIPTION;
/**
 * Represents subscription status in ERP.
 *
 * These values are capitalised because they're user-facing.
 *
 * For subscription status in PSL, see src/schemas/payments/models/common.ts
 */
export declare enum SubscriptionStatus {
    ACTIVE = "Active",
    CANCELLED = "Cancelled",
    FAILED = "Failed",
    PENDING = "Pending",
    POST_DUE = "PostDue"
}
/**
 * Subscription payment providers in ERP.
 *
 * Currently GoCardless is the only provider used in production, but the other
 * values appear in dev/staging.
 *
 * See also subscription providers in PSL: src/schemas/payments/models/common.ts
 */
export declare enum SubscriptionProvider {
    BRAINTREE = "Braintree",
    DUMMY = "Dummy",
    GO_CARDLESS = "GoCardless"
}
/**
 * Mapping from PSL subscription status to ERP subscription status values.
 */
export declare const STATUS_MAP: Record<PslSubscriptionStatus, SubscriptionStatus>;
/**
 * Mapping from PSL subscription provider to ERP subscription provider values.
 */
export declare const PROVIDER_MAP: Record<PslSubscriptionProvider, SubscriptionProvider>;
/**
 * Type representing the `Regular Giving` doctype in ERP.
 */
export interface RegularGivingProps {
    /** PSL UUID */
    id: string;
    /** Supporter UUID */
    supporter: string;
    /** Subscription status */
    status: SubscriptionStatus;
    /** Recurring payment amount */
    amount: number;
    /** Day on which the payment is due */
    billing_day: string;
    /** Whether the supporter opted in to Gift Aid */
    giftaid: NumericBool;
    /** Payment provider */
    provider: string;
    /** Payment reference from the provider */
    provider_reference?: string | null;
    /** Metadata */
    cart_id?: string | null;
}
/**
 * Model for a `Regular Giving` doctype in ERP.
 */
export declare const RegularGiving: import("../../../../../validation").Model<RegularGivingProps>;
//# sourceMappingURL=RegularGiving.d.ts.map