import { FundraisingTools } from '../../../../enums';
import { ErpChildEntryProps, ErpResources } from '../common';
export declare const DOCTYPE = ErpResources.FUNDRAISING_TOOL;
export interface FundraisingToolProps {
    code: FundraisingTools;
    label: string;
}
export declare const FundraisingTool: import("../../../../validation").Model<FundraisingToolProps>;
export interface FundraiserSignupTool extends ErpChildEntryProps {
    doctype: ErpResources.FUNDRAISER_SIGNUP_TOOL;
    parentfield: 'fundraising_tools';
    parenttype: ErpResources.FUNDRAISER_SIGNUP;
    code: FundraisingTools;
}
/**
 * Create a Fundraiser Signup Tool entry from a Fundraising Tool code.
 *
 * Fundraiser Signup Tool is a 'child table' doc type used to store
 *  relationships between Fundraiser Signup entries and Fundraising Tool
 *  entries.
 *
 * See: https://docs.erpnext.com/docs/user/manual/en/customize-erpnext/articles/table-multiselect-field
 *
 * @param code
 * @param fundraiserUuid
 */
export declare const toFundraiserSignupTool: (code: FundraisingTools, fundraiserUuid: string) => FundraiserSignupTool;
//# sourceMappingURL=FundraisingTool.d.ts.map