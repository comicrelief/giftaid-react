import { Sources } from '../../../../enums';
import { ErpResources } from '../common';
export declare const DOCTYPE = ErpResources.SUPPORTER_ORGANISATION;
export interface SupporterOrganisationProps {
    /** A uuid will be generated if this is omitted */
    uuid: string;
    supporter_uuid: string;
    organisation_uuid: string;
    job_title?: string;
    /**
     * The datetime at which we came to know about this relationship. It might
     *  well be before the creation of the ERP entry, so can't rely on ERP Next's
     *  standard in-built fields. Optional because we might not have a value for
     *  it, depending on the source of this relationship information.
     */
    start?: string;
    /**
     * An `end` datetime value would mean the supporter is no longer associated
     *  with the organisation, as of that point in time.
     */
    end?: string;
    /**
     * A string identifying the platform/service/tool from which we gleaned this
     *  info e.g. fundraiser_signup.
     */
    source: Sources;
    /**
     * If we have an ID to identify the record on the source platform. E.g. the
     *  UUID of the fundraiser signup, if source is fundraiser_signup. Optional as
     *  there might not be a relevant ID.
     */
    source_id?: string;
}
/**
 * This model is used to record associations between supporters and organisations.
 *
 * (E.g. the supporter is a teacher and the org is a school.)
 *
 * If the relationship comes to an end, e.g. the supporter leaves the org, the `end` value can be set.
 *
 * source and source_id are intended to record metadata that may be useful, if we have it. source_id isn't
 *  mandatory as we might not have one.
 */
export declare const SupporterOrganisation: import("../../../../validation").Model<SupporterOrganisationProps>;
//# sourceMappingURL=SupporterOrganisation.d.ts.map