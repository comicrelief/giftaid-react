"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchEmailRequestGenerator = exports.FETCH_EMAIL_REQUESTS = exports.FETCH_EMAIL_REQUESTS_INVALID = exports.FETCH_EMAIL_REQUESTS_VALID = exports.FETCH_EMAIL_REQUEST_VALUES = exports.FETCH_EMAIL_REQUEST_INVALID_VALUES = exports.FETCH_EMAIL_REQUEST_VALID_VALUES = void 0;
var utils_1 = require("../../../../utils");
var FetchEmailsRequest_1 = require("../../models/requests/FetchEmailsRequest");
exports.FETCH_EMAIL_REQUEST_VALID_VALUES = {
    filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.UUID,
    filterValue: 'df6648af-9367-4ad9-831c-9a472d04e966',
    consume: false,
};
exports.FETCH_EMAIL_REQUEST_INVALID_VALUES = {
    filterKey: 'some-filter-key',
    filterValue: null,
    consume: Number.NaN,
};
exports.FETCH_EMAIL_REQUEST_VALUES = {
    valid: exports.FETCH_EMAIL_REQUEST_VALID_VALUES,
    invalid: exports.FETCH_EMAIL_REQUEST_INVALID_VALUES,
};
exports.FETCH_EMAIL_REQUESTS_VALID = {
    DEFAULT: exports.FETCH_EMAIL_REQUEST_VALID_VALUES,
    CONSUME_FALSE: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { consume: false }),
    CONSUME_TRUE: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { consume: true }),
    FILTER_KEY_UUID: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.UUID }),
    FILTER_KEY_SENDER: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.SENDER }),
    FILTER_KEY_RECEIVER: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.RECEIVER }),
    FILTER_KEY_SUBJECT: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.SUBJECT }),
    FILTER_KEY_HTML: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.HTML }),
    FILTER_KEY_TEXT: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: FetchEmailsRequest_1.FetchEmailsRequestFilterKeys.TEXT }),
    MISSING_CONSUME: utils_1.omit(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, ['consume']),
};
exports.FETCH_EMAIL_REQUESTS_INVALID = {
    DEFAULT: exports.FETCH_EMAIL_REQUEST_INVALID_VALUES,
    INVALID_FILTER_KEY: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterKey: exports.FETCH_EMAIL_REQUEST_INVALID_VALUES.filterKey }),
    INVALID_FILTER_VALUE: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { filterValue: exports.FETCH_EMAIL_REQUEST_INVALID_VALUES.filterValue }),
    INVALID_CONSUME: utils_1.override(exports.FETCH_EMAIL_REQUEST_VALID_VALUES, { consume: exports.FETCH_EMAIL_REQUEST_INVALID_VALUES.consume }),
};
exports.FETCH_EMAIL_REQUESTS = {
    valid: exports.FETCH_EMAIL_REQUESTS_VALID,
    invalid: exports.FETCH_EMAIL_REQUESTS_INVALID,
};
/**
 * Generates a random FetchEmailsRequest
 *
 * @param overrides
 */
var fetchEmailRequestGenerator = function (overrides) {
    if (overrides === void 0) { overrides = {}; }
    return (__assign({ filterKey: utils_1.getRandomElement(FetchEmailsRequest_1.FetchEmailsRequestFilterKeys), filterValue: utils_1.getString(10), consume: utils_1.getBoolean() }, overrides));
};
exports.fetchEmailRequestGenerator = fetchEmailRequestGenerator;
//# sourceMappingURL=FetchEmailsRequest.mock.js.map