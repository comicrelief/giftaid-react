import { ProducerRequestProps } from '../../models/requests/ProducerRequest';
export declare const PRODUCER_REQUEST_VALID_VALUES: {
    'user-service': import("../../../user-service/models").PartialSignupRequestProps;
    'erp-service': {
        actions: (import("../../../erp/models").TransactionExecuteProps | {
            type: import("../../../erp/models/common").ErpPayloadTypes;
            cognito_user_id: string;
            first_name: string;
            last_name: string;
            email: {
                id: string;
                email: string;
                hidden: boolean;
                verified: boolean;
            }[];
            mobile: {
                id: string;
                number: string;
                hidden: boolean;
                verified: boolean;
            }[];
        })[];
    };
};
export declare const PRODUCER_REQUEST_INVALID_VALUES: {
    'user-service': {
        firstName: null;
        lastName: null;
        identities: ({
            hash: string;
            ownerUuid: string;
            kind: import("../../../user-service/models").IdentityType;
            content: string;
            hidden: boolean;
            verified: boolean;
            created: Date;
            updated: Date;
        } & {
            kind: string;
        })[];
    };
    'erp-service': {
        actions: string[];
    };
};
export declare const PRODUCER_REQUEST_VALUES: {
    valid: {
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    };
    invalid: {
        'user-service': {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: import("../../../user-service/models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        'erp-service': {
            actions: string[];
        };
    };
};
export declare const PRODUCER_REQUESTS_VALID: {
    DEFAULT: {
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    };
    ONLY_USER_SERVICE: Omit<{
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    }, "erp-service">;
    ONLY_ERP_SERVICE: Omit<{
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    }, "user-service">;
    ERP_SERVICE_WITH_IDENTITY_HASH: {
        'erp-service': {
            actions: Required<import("../../../erp/models").TicketPutProps>[];
        };
    };
    USER_SERVICE_AND_ERP_SERVICE_WITH_IDENTITY_HASH: {
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: Required<import("../../../erp/models").TicketPutProps>[];
        };
    };
};
export declare const PRODUCER_REQUESTS_INVALID: {
    DEFAULT: {
        'user-service': {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: import("../../../user-service/models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
        'erp-service': {
            actions: string[];
        };
    };
    EMPTY_REQUEST: {};
    INVALID_USER_SERVICE: {
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    } & {
        'user-service': {
            firstName: null;
            lastName: null;
            identities: ({
                hash: string;
                ownerUuid: string;
                kind: import("../../../user-service/models").IdentityType;
                content: string;
                hidden: boolean;
                verified: boolean;
                created: Date;
                updated: Date;
            } & {
                kind: string;
            })[];
        };
    };
    INVALID_ERP_SERVICE: {
        'user-service': import("../../../user-service/models").PartialSignupRequestProps;
        'erp-service': {
            actions: (import("../../../erp/models").TransactionExecuteProps | {
                type: import("../../../erp/models/common").ErpPayloadTypes;
                cognito_user_id: string;
                first_name: string;
                last_name: string;
                email: {
                    id: string;
                    email: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
                mobile: {
                    id: string;
                    number: string;
                    hidden: boolean;
                    verified: boolean;
                }[];
            })[];
        };
    } & {
        'erp-service': {
            actions: string[];
        };
    };
};
export declare const PRODUCER_REQUESTS: {
    valid: {
        DEFAULT: {
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: (import("../../../erp/models").TransactionExecuteProps | {
                    type: import("../../../erp/models/common").ErpPayloadTypes;
                    cognito_user_id: string;
                    first_name: string;
                    last_name: string;
                    email: {
                        id: string;
                        email: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                    mobile: {
                        id: string;
                        number: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                })[];
            };
        };
        ONLY_USER_SERVICE: Omit<{
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: (import("../../../erp/models").TransactionExecuteProps | {
                    type: import("../../../erp/models/common").ErpPayloadTypes;
                    cognito_user_id: string;
                    first_name: string;
                    last_name: string;
                    email: {
                        id: string;
                        email: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                    mobile: {
                        id: string;
                        number: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                })[];
            };
        }, "erp-service">;
        ONLY_ERP_SERVICE: Omit<{
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: (import("../../../erp/models").TransactionExecuteProps | {
                    type: import("../../../erp/models/common").ErpPayloadTypes;
                    cognito_user_id: string;
                    first_name: string;
                    last_name: string;
                    email: {
                        id: string;
                        email: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                    mobile: {
                        id: string;
                        number: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                })[];
            };
        }, "user-service">;
        ERP_SERVICE_WITH_IDENTITY_HASH: {
            'erp-service': {
                actions: Required<import("../../../erp/models").TicketPutProps>[];
            };
        };
        USER_SERVICE_AND_ERP_SERVICE_WITH_IDENTITY_HASH: {
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: Required<import("../../../erp/models").TicketPutProps>[];
            };
        };
    };
    invalid: {
        DEFAULT: {
            'user-service': {
                firstName: null;
                lastName: null;
                identities: ({
                    hash: string;
                    ownerUuid: string;
                    kind: import("../../../user-service/models").IdentityType;
                    content: string;
                    hidden: boolean;
                    verified: boolean;
                    created: Date;
                    updated: Date;
                } & {
                    kind: string;
                })[];
            };
            'erp-service': {
                actions: string[];
            };
        };
        EMPTY_REQUEST: {};
        INVALID_USER_SERVICE: {
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: (import("../../../erp/models").TransactionExecuteProps | {
                    type: import("../../../erp/models/common").ErpPayloadTypes;
                    cognito_user_id: string;
                    first_name: string;
                    last_name: string;
                    email: {
                        id: string;
                        email: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                    mobile: {
                        id: string;
                        number: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                })[];
            };
        } & {
            'user-service': {
                firstName: null;
                lastName: null;
                identities: ({
                    hash: string;
                    ownerUuid: string;
                    kind: import("../../../user-service/models").IdentityType;
                    content: string;
                    hidden: boolean;
                    verified: boolean;
                    created: Date;
                    updated: Date;
                } & {
                    kind: string;
                })[];
            };
        };
        INVALID_ERP_SERVICE: {
            'user-service': import("../../../user-service/models").PartialSignupRequestProps;
            'erp-service': {
                actions: (import("../../../erp/models").TransactionExecuteProps | {
                    type: import("../../../erp/models/common").ErpPayloadTypes;
                    cognito_user_id: string;
                    first_name: string;
                    last_name: string;
                    email: {
                        id: string;
                        email: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                    mobile: {
                        id: string;
                        number: string;
                        hidden: boolean;
                        verified: boolean;
                    }[];
                })[];
            };
        } & {
            'erp-service': {
                actions: string[];
            };
        };
    };
};
/**
 * Generates a random ProducerRequest
 *
 * @param overrides
 */
export declare const producerRequestGenerator: (overrides?: Partial<ProducerRequestProps>) => ProducerRequestProps;
//# sourceMappingURL=ProducerRequest.mock.d.ts.map